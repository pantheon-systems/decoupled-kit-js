{"version":3,"sources":["../../../../../src/steps/source-nodes/update-nodes/wp-actions/delete.js"],"names":["wpActionDELETE","helpers","wpAction","reporter","actions","getNode","cachedNodeIds","key","CREATED_NODE_IDS","nodeId","referencedNodeGlobalRelayID","node","typeInfo","referencedNodeSingularName","info","log","typeSettings","name","nodesTypeName","beforeChangeNode","additionalNodeIds","actionType","remoteNode","fetchGraphql","buildTypeName","wpStore","store","length","forEach","id","push","touchNode","deleteNode","chalk","bold","title","referencedNodeID","validNodeIds","filter","cachedId","value","e","Object","entries","warn","JSON","stringify","Error","module","exports"],"mappings":"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","sourcesContent":["import chalk from \"chalk\"\n\nimport { formatLogMessage } from \"~/utils/format-log-message\"\nimport store from \"~/store\"\nimport {\n  getTypeSettingsByType,\n  buildTypeName,\n} from \"~/steps/create-schema-customization/helpers\"\nimport { fetchGraphql } from \"~/utils/fetch-graphql\"\nimport { getQueryInfoBySingleFieldName } from \"../../helpers\"\nimport { CREATED_NODE_IDS } from \"~/constants\"\nimport { setPersistentCache, getPersistentCache } from \"~/utils/cache\"\n\nconst wpActionDELETE = async ({\n  helpers,\n  // cachedNodeIds,\n  wpAction,\n}) => {\n  const { reporter, actions, getNode } = helpers\n\n  try {\n    const cachedNodeIds = await getPersistentCache({ key: CREATED_NODE_IDS })\n\n    // get the node ID from the WPGQL id\n    const nodeId = wpAction.referencedNodeGlobalRelayID\n\n    const node = await getNode(nodeId)\n\n    const { typeInfo } =\n      getQueryInfoBySingleFieldName(wpAction.referencedNodeSingularName) || {}\n\n    if (!typeInfo) {\n      reporter.info(\n        formatLogMessage(\n          `A ${wpAction.referencedNodeSingularName} was deleted, but this node type is excluded in plugin options.`\n        )\n      )\n      reporter.log(``)\n      return\n    }\n\n    const typeSettings = getTypeSettingsByType({\n      name: typeInfo.nodesTypeName,\n    })\n\n    if (\n      typeSettings.beforeChangeNode &&\n      typeof typeSettings.beforeChangeNode === `function`\n    ) {\n      const { additionalNodeIds } =\n        (await typeSettings.beforeChangeNode({\n          actionType: `DELETE`,\n          remoteNode: node,\n          actions,\n          helpers,\n          typeInfo,\n          fetchGraphql,\n          typeSettings,\n          buildTypeName,\n          wpStore: store,\n        })) || {}\n\n      if (additionalNodeIds && additionalNodeIds.length) {\n        additionalNodeIds.forEach(id => cachedNodeIds.push(id))\n      }\n    }\n\n    if (node) {\n      await actions.touchNode(node)\n      await actions.deleteNode(node)\n\n      reporter.log(``)\n      reporter.info(\n        formatLogMessage(\n          `${chalk.bold(`deleted ${wpAction.referencedNodeSingularName}`)} ${\n            wpAction.title\n          } (#${wpAction.referencedNodeID})`\n        )\n      )\n\n      reporter.log(``)\n    }\n\n    // Remove this from cached node id's so we don't try to touch it\n    const validNodeIds = cachedNodeIds.filter(cachedId => cachedId !== nodeId)\n\n    await setPersistentCache({ key: CREATED_NODE_IDS, value: validNodeIds })\n\n    // return validNodeIds\n  } catch (e) {\n    Object.entries(wpAction).forEach(([key, value]) => {\n      reporter.warn(`${key} ${JSON.stringify(value)}`)\n    })\n    throw Error(e)\n  }\n}\n\nmodule.exports = wpActionDELETE\n"],"file":"delete.js"}