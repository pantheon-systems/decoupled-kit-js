{"version":3,"sources":["../../src/models/develop.ts"],"names":["developStore","state","refreshPollingIsPaused","reducers","pauseRefreshPolling","resumeRefreshPolling"],"mappings":";;;;;AAAA;;AAeA,MAAMA,YAA2B,GAAG;AAClCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,sBAAsB,EAAE;AADnB,GAD2B;AAKlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,CAACH,KAAD,EAAQ;AACzB,UAAI,CAAC,6BAAL,EAAsB;AACpBA,QAAAA,KAAK,CAACC,sBAAN,GAA+B,IAA/B;AACD;;AAED,aAAOD,KAAP;AACD,KAPO;;AAQRI,IAAAA,oBAAoB,CAACJ,KAAD,EAAQ;AAC1B,UAAI,CAAC,6BAAL,EAAsB;AACpBA,QAAAA,KAAK,CAACC,sBAAN,GAA+B,KAA/B;AACD;;AAED,aAAOD,KAAP;AACD;;AAdO;AALwB,CAApC;eAuBeD,Y","sourcesContent":["import { inPreviewMode } from \"~/steps/preview\"\nexport interface IDevelopState {\n  refreshPollingIsPaused: boolean\n}\n\nexport interface IDevelopReducers {\n  pauseRefreshPolling: (state: IDevelopState) => IDevelopState\n  resumeRefreshPolling: (state: IDevelopState) => IDevelopState\n}\n\ninterface IPreviewStore {\n  state: IDevelopState\n  reducers: IDevelopReducers\n}\n\nconst developStore: IPreviewStore = {\n  state: {\n    refreshPollingIsPaused: false,\n  },\n\n  reducers: {\n    pauseRefreshPolling(state) {\n      if (!inPreviewMode()) {\n        state.refreshPollingIsPaused = true\n      }\n\n      return state\n    },\n    resumeRefreshPolling(state) {\n      if (!inPreviewMode()) {\n        state.refreshPollingIsPaused = false\n      }\n\n      return state\n    },\n  } as IDevelopReducers,\n}\n\nexport default developStore\n"],"file":"develop.js"}