{"version":3,"sources":["../../src/services/source-nodes.ts"],"names":["sourceNodes","parentSpan","webhookBody","webhookSourcePluginName","store","deferNodeMutation","activity","reporter","activityTimer","start","currentPages","Map","getState","pages","span","pluginName","verbose","tim","changedPages","deletedPages","length","end"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AAEO,eAAeA,WAAf,CAA2B;AAChCC,EAAAA,UADgC;AAEhCC,EAAAA,WAFgC;AAGhCC,EAAAA,uBAHgC;AAIhCC,EAAAA,KAJgC;AAKhCC,EAAAA,iBAAiB,GAAG;AALY,CAA3B,EASJ;AACD,gCAAYD,KAAZ;;AAEA,QAAME,QAAQ,GAAGC,kBAASC,aAAT,CAAwB,4BAAxB,EAAqD;AACpEP,IAAAA;AADoE,GAArD,CAAjB;;AAGAK,EAAAA,QAAQ,CAACG,KAAT;AACA,QAAMC,YAAY,GAAG,IAAIC,GAAJ,CAA6BP,KAAK,CAACQ,QAAN,GAAiBC,KAA9C,CAArB;AACA,QAAM,0BAA+B;AACnCZ,IAAAA,UAAU,EAAEK,QAAQ,CAACQ,IADc;AAEnCT,IAAAA,iBAFmC;AAGnCH,IAAAA,WAHmC;AAInCa,IAAAA,UAAU,EAAEZ;AAJuB,GAA/B,CAAN;;AAOAI,oBAASS,OAAT,CAAkB,4BAAlB;;AAEA,QAAMC,GAAG,GAAGV,kBAASC,aAAT,CAAwB,4BAAxB,EAAqD;AAC/DP,IAAAA;AAD+D,GAArD,CAAZ;;AAGAgB,EAAAA,GAAG,CAACR,KAAJ;AAEA,QAAM;AAAES,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAiC,oCACrCT,YADqC,EAErCN,KAAK,CAACQ,QAAN,GAAiBC,KAFoB,CAAvC;;AAKAN,oBAASS,OAAT,CACG,WAAUG,YAAY,CAACC,MAAO,QAAOD,YAAY,CAACC,MAAb,KAAwB,CAAxB,GAA6B,EAA7B,GAAkC,GAAG,EAD7E;;AAIAb,oBAASS,OAAT,CACG,SAAQE,YAAY,CAACE,MAAO,gBAC3BF,YAAY,CAACE,MAAb,KAAwB,CAAxB,GAA6B,EAA7B,GAAkC,GACnC,EAHH;;AAKAH,EAAAA,GAAG,CAACI,GAAJ;AAEAf,EAAAA,QAAQ,CAACe,GAAT;AACA,SAAO;AACLF,IAAAA,YADK;AAELD,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import sourceNodesAndRemoveStaleNodes from \"../utils/source-nodes\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { IDataLayerContext } from \"../state-machines/data-layer/types\"\nimport { assertStore } from \"../utils/assert-store\"\nimport { IGatsbyPage } from \"../redux/types\"\nimport { findChangedPages } from \"../utils/changed-pages\"\n\nexport async function sourceNodes({\n  parentSpan,\n  webhookBody,\n  webhookSourcePluginName,\n  store,\n  deferNodeMutation = false,\n}: Partial<IDataLayerContext>): Promise<{\n  deletedPages: Array<string>\n  changedPages: Array<string>\n}> {\n  assertStore(store)\n\n  const activity = reporter.activityTimer(`source and transform nodes`, {\n    parentSpan,\n  })\n  activity.start()\n  const currentPages = new Map<string, IGatsbyPage>(store.getState().pages)\n  await sourceNodesAndRemoveStaleNodes({\n    parentSpan: activity.span,\n    deferNodeMutation,\n    webhookBody,\n    pluginName: webhookSourcePluginName,\n  })\n\n  reporter.verbose(`Checking for deleted pages`)\n\n  const tim = reporter.activityTimer(`Checking for changed pages`, {\n    parentSpan,\n  })\n  tim.start()\n\n  const { changedPages, deletedPages } = findChangedPages(\n    currentPages,\n    store.getState().pages\n  )\n\n  reporter.verbose(\n    `Deleted ${deletedPages.length} page${deletedPages.length === 1 ? `` : `s`}`\n  )\n\n  reporter.verbose(\n    `Found ${changedPages.length} changed page${\n      changedPages.length === 1 ? `` : `s`\n    }`\n  )\n  tim.end()\n\n  activity.end()\n  return {\n    deletedPages,\n    changedPages,\n  }\n}\n"],"file":"source-nodes.js"}