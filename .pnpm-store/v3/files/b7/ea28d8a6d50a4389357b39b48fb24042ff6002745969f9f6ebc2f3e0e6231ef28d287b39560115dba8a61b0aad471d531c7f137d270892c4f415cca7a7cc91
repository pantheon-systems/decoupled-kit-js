{"version":3,"sources":["../../src/utils/api-runner-node.js"],"names":["Promise","require","_","chalk","bindActionCreators","origBindActionCreators","memoize","tracer","globalTracer","reporter","stackTrace","codeFrameColumns","fs","getCache","createContentDigest","emitter","store","getNodes","getNode","getNodesByType","getNodeAndSavePathDependency","loadNodeContent","getPublicPath","requireGatsbyPlugin","getNonGatsbyCodeFrameFormatted","trackBuildError","decorateEvent","process","env","BLUEBIRD_DEBUG","BLUEBIRD_LONG_STACK_TRACES","config","longStackTraces","nodeMutationsWrappers","id","type","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","deferNodeMutation","defer","actionKey","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","undefined","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","merge","deferredAction","resolve","emit","payload","NODE_MUTATION_ACTIONS","deferActions","actions","deferred","forEach","action","getLocalReporter","activity","panicOnBuild","bind","getErrorMapWithPluginName","pluginName","errorMap","entries","reduce","memo","val","extendLocalReporterToCatchPluginErrors","runningActivities","setErrorMap","error","panic","errorMeta","activityTimer","apply","originalStart","start","originalEnd","end","add","delete","createProgress","originalDone","done","getUninitializedCache","message","get","Error","set","del","availableActionsCache","Map","publicPath","runAPI","gatsbyNode","spanOptions","pluginSpan","setTag","publicActions","restrictedActionsAvailableInAPI","availableActions","has","dispatch","program","getState","pathPrefix","prefixPaths","namespacedCreateNodeId","tracing","cache","apiFinished","alreadyDisplayed","createPageAction","createPage","warning","stripIndent","bold","possiblyCodeFrame","push","warn","join","localReporter","Set","extendedLocalReporter","endInProgressActivitiesCreatedByThisRun","shouldDetectNodeMutations","includes","apiCallArgs","basePath","createNodeId","schema","buildObjectType","buildUnionType","buildInterfaceType","buildInputObjectType","buildEnumType","buildScalarType","pluginOptions","fromCallback","callback","cb","err","finish","e","version","apisRunningById","apisRunningByTraceId","waitingForCasacadeToFinish","apiRunnerNode","pluginSource","plugins","flattenedPlugins","implementingPlugins","filter","nodeAPIs","traceTags","waitForCascadingActions","apiSpanArgs","apiSpan","value","apiRunInstance","span","startTime","Date","toJSON","node","internal","contentDigest","filename","page","path","argsJson","JSON","stringify","omit","size","currentCount","stopQueuedApiRuns","onAPIRunComplete","actionHandler","on","off","apiRunPromiseOptions","runPromise","GATSBY_EXPERIMENTAL_PARALLEL_SOURCING","map","concurrency","mapSeries","unstable_shouldOnCreateNode","catch","file","parse","find","test","fileName","codeFrame","structuredError","lineNumber","line","columnNumber","column","trimmedFileName","match","code","readFileSync","encoding","highlightCode","_e","location","filePath","context","then","results","result","isEmpty","instance","apisByTraceIdCount","module","exports"],"mappings":"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","sourcesContent":["const Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst chalk = require(`chalk`)\nconst { bindActionCreators: origBindActionCreators } = require(`redux`)\nconst memoize = require(`memoizee`)\n\nconst bindActionCreators = memoize(origBindActionCreators)\n\nconst tracer = require(`opentracing`).globalTracer()\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst stackTrace = require(`stack-trace`)\nconst { codeFrameColumns } = require(`@babel/code-frame`)\nconst fs = require(`fs-extra`)\nconst { getCache } = require(`./get-cache`)\nimport { createNodeId } from \"./create-node-id\"\nconst { createContentDigest } = require(`gatsby-core-utils`)\nimport {\n  buildObjectType,\n  buildUnionType,\n  buildInterfaceType,\n  buildInputObjectType,\n  buildEnumType,\n  buildScalarType,\n} from \"../schema/types/type-builders\"\nconst { emitter, store } = require(`../redux`)\nconst { getNodes, getNode, getNodesByType } = require(`../datastore`)\nconst { getNodeAndSavePathDependency, loadNodeContent } = require(`./nodes`)\nconst { getPublicPath } = require(`./get-public-path`)\nconst { requireGatsbyPlugin } = require(`./require-gatsby-plugin`)\nconst { getNonGatsbyCodeFrameFormatted } = require(`./stack-trace-utils`)\nconst { trackBuildError, decorateEvent } = require(`gatsby-telemetry`)\nimport errorParser from \"./api-runner-error-parser\"\nimport { wrapNode, wrapNodes } from \"./detect-node-mutations\"\n\nif (!process.env.BLUEBIRD_DEBUG && !process.env.BLUEBIRD_LONG_STACK_TRACES) {\n  // Unless specified - disable longStackTraces\n  // as this have severe perf penalty ( http://bluebirdjs.com/docs/api/promise.longstacktraces.html )\n  // This is mainly for `gatsby develop` due to NODE_ENV being set to development\n  // which cause bluebird to enable longStackTraces\n  // `gatsby build` (with NODE_ENV=production) already doesn't enable longStackTraces\n  Promise.config({ longStackTraces: false })\n}\n\nconst nodeMutationsWrappers = {\n  getNode(id) {\n    return wrapNode(getNode(id))\n  },\n  getNodes() {\n    return wrapNodes(getNodes())\n  },\n  getNodesByType(type) {\n    return wrapNodes(getNodesByType(type))\n  },\n  getNodeAndSavePathDependency(id) {\n    return wrapNode(getNodeAndSavePathDependency(id))\n  },\n}\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {}\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId, deferNodeMutation } = actionOptions\n  const defer = deferNodeMutation ? `defer-node-mutation` : ``\n  const actionKey = plugin.name + api + traceId + defer\n  if (boundPluginActionCreators[actionKey]) {\n    return boundPluginActionCreators[actionKey]\n  } else {\n    const keys = Object.keys(boundActionCreators)\n    const doubleBoundActionCreators = {}\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const boundActionCreator = boundActionCreators[key]\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          if (args.length === 1) {\n            return boundActionCreator(args[0], plugin, actionOptions)\n          } else if (args.length === 2) {\n            return boundActionCreator(args[0], args[1], actionOptions)\n          }\n          return undefined\n        }\n      }\n    }\n    boundPluginActionCreators[actionKey] = doubleBoundActionCreators\n    return doubleBoundActionCreators\n  }\n}\n\nconst initAPICallTracing = parentSpan => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan }\n\n    return tracer.startSpan(spanName, _.merge(defaultSpanArgs, spanArgs))\n  }\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  }\n}\n\nconst deferredAction =\n  type =>\n  (...args) => {\n    // Regular createNode returns a Promise, but when deferred we need\n    // to wrap it in another which we resolve when it's actually called\n    if (type === `createNode`) {\n      return new Promise(resolve => {\n        emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n          type,\n          payload: args,\n          resolve,\n        })\n      })\n    }\n    return emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n      type,\n      payload: args,\n    })\n  }\n\nconst NODE_MUTATION_ACTIONS = [\n  `createNode`,\n  `deleteNode`,\n  `touchNode`,\n  `createParentChildLink`,\n  `createNodeField`,\n]\n\nconst deferActions = actions => {\n  const deferred = { ...actions }\n  NODE_MUTATION_ACTIONS.forEach(action => {\n    deferred[action] = deferredAction(action)\n  })\n  return deferred\n}\n\n/**\n * Create a local reporter\n * Used to override reporter methods with activity methods\n */\nfunction getLocalReporter({ activity, reporter }) {\n  // If we have an activity, bind panicOnBuild to the activities method to\n  // join them\n  if (activity) {\n    return { ...reporter, panicOnBuild: activity.panicOnBuild.bind(activity) }\n  }\n\n  return reporter\n}\n\nfunction getErrorMapWithPluginName(pluginName, errorMap) {\n  const entries = Object.entries(errorMap)\n\n  return entries.reduce((memo, [key, val]) => {\n    memo[`${pluginName}_${key}`] = val\n\n    return memo\n  }, {})\n}\n\nfunction extendLocalReporterToCatchPluginErrors({\n  reporter,\n  pluginName,\n  runningActivities,\n}) {\n  let setErrorMap\n\n  let error = reporter.error\n  let panic = reporter.panic\n  let panicOnBuild = reporter.panicOnBuild\n\n  if (pluginName && reporter?.setErrorMap) {\n    setErrorMap = errorMap =>\n      reporter.setErrorMap(getErrorMapWithPluginName(pluginName, errorMap))\n\n    error = (errorMeta, error) => {\n      reporter.error(errorMeta, error, pluginName)\n    }\n\n    panic = (errorMeta, error) => {\n      reporter.panic(errorMeta, error, pluginName)\n    }\n\n    panicOnBuild = (errorMeta, error) => {\n      reporter.panicOnBuild(errorMeta, error, pluginName)\n    }\n  }\n\n  return {\n    ...reporter,\n    setErrorMap,\n    error,\n    panic,\n    panicOnBuild,\n    activityTimer: (...args) => {\n      // eslint-disable-next-line prefer-spread\n      const activity = reporter.activityTimer.apply(reporter, args)\n\n      const originalStart = activity.start\n      const originalEnd = activity.end\n\n      activity.start = () => {\n        originalStart.apply(activity)\n        runningActivities.add(activity)\n      }\n\n      activity.end = () => {\n        originalEnd.apply(activity)\n        runningActivities.delete(activity)\n      }\n\n      return activity\n    },\n\n    createProgress: (...args) => {\n      // eslint-disable-next-line prefer-spread\n      const activity = reporter.createProgress.apply(reporter, args)\n\n      const originalStart = activity.start\n      const originalEnd = activity.end\n      const originalDone = activity.done\n\n      activity.start = () => {\n        originalStart.apply(activity)\n        runningActivities.add(activity)\n      }\n\n      activity.end = () => {\n        originalEnd.apply(activity)\n        runningActivities.delete(activity)\n      }\n\n      activity.done = () => {\n        originalDone.apply(activity)\n        runningActivities.delete(activity)\n      }\n\n      return activity\n    },\n  }\n}\n\nconst getUninitializedCache = plugin => {\n  const message =\n    `Usage of \"cache\" instance in \"onPreInit\" API is not supported as ` +\n    `this API runs before cache initialization` +\n    (plugin && plugin !== `default-site-plugin` ? ` (called in ${plugin})` : ``)\n\n  return {\n    // GatsbyCache\n    async get() {\n      throw new Error(message)\n    },\n    async set() {\n      throw new Error(message)\n    },\n    async del() {\n      throw new Error(message)\n    },\n  }\n}\n\nconst availableActionsCache = new Map()\nlet publicPath\nconst runAPI = async (plugin, api, args, activity) => {\n  const gatsbyNode = requireGatsbyPlugin(plugin, `gatsby-node`)\n\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {}\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions)\n\n    pluginSpan.setTag(`api`, api)\n    pluginSpan.setTag(`plugin`, plugin.name)\n    const {\n      publicActions,\n      restrictedActionsAvailableInAPI,\n    } = require(`../redux/actions`)\n\n    let availableActions\n    if (availableActionsCache.has(api)) {\n      availableActions = availableActionsCache.get(api)\n    } else {\n      availableActions = {\n        ...publicActions,\n        ...(restrictedActionsAvailableInAPI[api] || {}),\n      }\n\n      availableActionsCache.set(api, availableActions)\n    }\n\n    let boundActionCreators = bindActionCreators(\n      availableActions,\n      store.dispatch\n    )\n\n    if (args.deferNodeMutation) {\n      boundActionCreators = deferActions(boundActionCreators)\n    }\n\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan, activity }\n    )\n\n    const { config, program } = store.getState()\n\n    const pathPrefix = (program.prefixPaths && config.pathPrefix) || ``\n\n    if (typeof publicPath === `undefined`) {\n      publicPath = getPublicPath({ ...config, ...program }, ``)\n    }\n\n    const namespacedCreateNodeId = id => createNodeId(id, plugin.name)\n\n    const tracing = initAPICallTracing(pluginSpan)\n\n    // See https://github.com/gatsbyjs/gatsby/issues/11369\n    const cache =\n      api === `onPreInit`\n        ? getUninitializedCache(plugin.name)\n        : getCache(plugin.name)\n\n    // Ideally this would be more abstracted and applied to more situations, but right now\n    // this can be potentially breaking so targeting `createPages` API and `createPage` action\n    let actions = doubleBoundActionCreators\n    let apiFinished = false\n    if (api === `createPages`) {\n      let alreadyDisplayed = false\n      const createPageAction = actions.createPage\n      // create new actions object with wrapped createPage action\n      // doubleBoundActionCreators is memoized, so we can't just\n      // reassign createPage field as this would cause this extra logic\n      // to be used in subsequent APIs and we only want to target this `createPages` call.\n      actions = {\n        ...actions,\n        createPage: (...args) => {\n          createPageAction(...args)\n          if (apiFinished && !alreadyDisplayed) {\n            const warning = [\n              reporter.stripIndent(`\n              Action ${chalk.bold(\n                `createPage`\n              )} was called outside of its expected asynchronous lifecycle ${chalk.bold(\n                `createPages`\n              )} in ${chalk.bold(plugin.name)}.\n              Ensure that you return a Promise from ${chalk.bold(\n                `createPages`\n              )} and are awaiting any asynchronous method invocations (like ${chalk.bold(\n                `graphql`\n              )} or http requests).\n              For more info and debugging tips: see ${chalk.bold(\n                `https://gatsby.dev/sync-actions`\n              )}\n            `),\n            ]\n\n            const possiblyCodeFrame = getNonGatsbyCodeFrameFormatted()\n            if (possiblyCodeFrame) {\n              warning.push(possiblyCodeFrame)\n            }\n\n            reporter.warn(warning.join(`\\n\\n`))\n            alreadyDisplayed = true\n          }\n        },\n      }\n    }\n\n    const localReporter = getLocalReporter({ activity, reporter })\n\n    const runningActivities = new Set()\n\n    const extendedLocalReporter = extendLocalReporterToCatchPluginErrors({\n      reporter: localReporter,\n      pluginName: plugin.name,\n      runningActivities,\n    })\n\n    const endInProgressActivitiesCreatedByThisRun = () => {\n      runningActivities.forEach(activity => activity.end())\n    }\n\n    const shouldDetectNodeMutations = [\n      `sourceNodes`,\n      `onCreateNode`,\n      `createResolvers`,\n      `createSchemaCustomization`,\n      `setFieldsOnGraphQLNodeType`,\n    ].includes(api)\n\n    const apiCallArgs = [\n      {\n        ...args,\n        parentSpan: pluginSpan,\n        basePath: pathPrefix,\n        pathPrefix: publicPath,\n        actions,\n        loadNodeContent,\n        store,\n        emitter,\n        getCache,\n        getNodes: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNodes\n          : getNodes,\n        getNode: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNode\n          : getNode,\n        getNodesByType: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNodesByType\n          : getNodesByType,\n        reporter: extendedLocalReporter,\n        getNodeAndSavePathDependency: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNodeAndSavePathDependency\n          : getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        createContentDigest,\n        tracing,\n        schema: {\n          buildObjectType,\n          buildUnionType,\n          buildInterfaceType,\n          buildInputObjectType,\n          buildEnumType,\n          buildScalarType,\n        },\n      },\n      plugin.pluginOptions,\n    ]\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return Promise.fromCallback(callback => {\n        const cb = (err, val) => {\n          pluginSpan.finish()\n          apiFinished = true\n          endInProgressActivitiesCreatedByThisRun()\n          callback(err, val)\n        }\n\n        try {\n          gatsbyNode[api](...apiCallArgs, cb)\n        } catch (e) {\n          trackBuildError(api, {\n            error: e,\n            pluginName: `${plugin.name}@${plugin.version}`,\n          })\n          throw e\n        }\n      })\n    } else {\n      try {\n        return await gatsbyNode[api](...apiCallArgs)\n      } finally {\n        pluginSpan.finish()\n        apiFinished = true\n        endInProgressActivitiesCreatedByThisRun()\n      }\n    }\n  }\n\n  return null\n}\n\nconst apisRunningById = new Map()\nconst apisRunningByTraceId = new Map()\nlet waitingForCasacadeToFinish = []\n\nfunction apiRunnerNode(api, args = {}, { pluginSource, activity } = {}) {\n  const plugins = store.getState().flattenedPlugins\n\n  // Get the list of plugins that implement this API.\n  // Also: Break infinite loops. Sometimes a plugin will implement an API and\n  // call an action which will trigger the same API being called.\n  // `onCreatePage` is the only example right now. In these cases, we should\n  // avoid calling the originating plugin again.\n  let implementingPlugins = plugins.filter(\n    plugin => plugin.nodeAPIs.includes(api) && plugin.name !== pluginSource\n  )\n\n  if (api === `sourceNodes` && args.pluginName) {\n    implementingPlugins = implementingPlugins.filter(\n      plugin => plugin.name === args.pluginName\n    )\n  }\n\n  // If there's no implementing plugins, return early.\n  if (implementingPlugins.length === 0) {\n    return null\n  }\n\n  return new Promise(resolve => {\n    const { parentSpan, traceId, traceTags, waitForCascadingActions } = args\n    const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {}\n    const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs)\n\n    apiSpan.setTag(`api`, api)\n    _.forEach(traceTags, (value, key) => {\n      apiSpan.setTag(key, value)\n    })\n\n    const apiRunInstance = {\n      api,\n      args,\n      pluginSource,\n      resolve,\n      span: apiSpan,\n      startTime: new Date().toJSON(),\n      traceId,\n    }\n\n    // Generate IDs for api runs. Most IDs we generate from the args\n    // but some API calls can have very large argument objects so we\n    // have special ways of generating IDs for those to avoid stringifying\n    // large objects.\n    let id\n    if (api === `setFieldsOnGraphQLNodeType`) {\n      id = `${api}${apiRunInstance.startTime}${args.type.name}${traceId}`\n    } else if (api === `onCreateNode`) {\n      id = `${api}${apiRunInstance.startTime}${args.node.internal.contentDigest}${traceId}`\n    } else if (api === `preprocessSource`) {\n      id = `${api}${apiRunInstance.startTime}${args.filename}${traceId}`\n    } else if (api === `onCreatePage`) {\n      id = `${api}${apiRunInstance.startTime}${args.page.path}${traceId}`\n    } else {\n      // When tracing is turned on, the `args` object will have a\n      // `parentSpan` field that can be quite large. So we omit it\n      // before calling stringify\n      const argsJson = JSON.stringify(_.omit(args, `parentSpan`))\n      id = `${api}|${apiRunInstance.startTime}|${apiRunInstance.traceId}|${argsJson}`\n    }\n    apiRunInstance.id = id\n\n    if (waitForCascadingActions) {\n      waitingForCasacadeToFinish.push(apiRunInstance)\n    }\n\n    if (apisRunningById.size === 0) {\n      emitter.emit(`API_RUNNING_START`)\n    }\n\n    apisRunningById.set(apiRunInstance.id, apiRunInstance)\n    if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1)\n    } else {\n      apisRunningByTraceId.set(apiRunInstance.traceId, 1)\n    }\n\n    let stopQueuedApiRuns = false\n    let onAPIRunComplete = null\n    if (api === `onCreatePage`) {\n      const path = args.page.path\n      const actionHandler = action => {\n        if (action.payload.path === path) {\n          stopQueuedApiRuns = true\n        }\n      }\n      emitter.on(`DELETE_PAGE`, actionHandler)\n      onAPIRunComplete = () => {\n        emitter.off(`DELETE_PAGE`, actionHandler)\n      }\n    }\n\n    let apiRunPromiseOptions = {}\n    let runPromise\n    if (\n      api === `sourceNodes` &&\n      process.env.GATSBY_EXPERIMENTAL_PARALLEL_SOURCING\n    ) {\n      runPromise = Promise.map\n      apiRunPromiseOptions.concurrency = 20\n    } else {\n      runPromise = Promise.mapSeries\n      apiRunPromiseOptions = undefined\n    }\n\n    runPromise(\n      implementingPlugins,\n      plugin => {\n        if (stopQueuedApiRuns) {\n          return null\n        }\n\n        const gatsbyNode = requireGatsbyPlugin(plugin, `gatsby-node`)\n        const pluginName =\n          plugin.name === `default-site-plugin` ? `gatsby-node.js` : plugin.name\n\n        // TODO: rethink createNode API to handle this better\n        if (\n          api === `onCreateNode` &&\n          gatsbyNode?.unstable_shouldOnCreateNode && // Don't bail if this api is not exported\n          !gatsbyNode.unstable_shouldOnCreateNode(\n            { node: args.node },\n            plugin.pluginOptions\n          )\n        ) {\n          // Do not try to schedule an async event for this node for this plugin\n          return null\n        }\n\n        return new Promise(resolve => {\n          resolve(\n            runAPI(plugin, api, { ...args, parentSpan: apiSpan }, activity)\n          )\n        }).catch(err => {\n          decorateEvent(`BUILD_PANIC`, {\n            pluginName: `${plugin.name}@${plugin.version}`,\n          })\n\n          const localReporter = getLocalReporter({ activity, reporter })\n\n          const file = stackTrace\n            .parse(err)\n            .find(file => /gatsby-node/.test(file.fileName))\n\n          let codeFrame = ``\n          const structuredError = errorParser({ err })\n\n          if (file) {\n            const { fileName, lineNumber: line, columnNumber: column } = file\n            const trimmedFileName = fileName.match(/^(async )?(.*)/)[2]\n\n            try {\n              const code = fs.readFileSync(trimmedFileName, {\n                encoding: `utf-8`,\n              })\n              codeFrame = codeFrameColumns(\n                code,\n                {\n                  start: {\n                    line,\n                    column,\n                  },\n                },\n                {\n                  highlightCode: true,\n                }\n              )\n            } catch (_e) {\n              // sometimes stack trace point to not existing file\n              // particularly when file is transpiled and path actually changes\n              // (like pointing to not existing `src` dir or original typescript file)\n            }\n\n            structuredError.location = {\n              start: { line: line, column: column },\n            }\n            structuredError.filePath = fileName\n          }\n\n          structuredError.context = {\n            ...structuredError.context,\n            pluginName,\n            api,\n            codeFrame,\n          }\n\n          localReporter.panicOnBuild(structuredError)\n\n          return null\n        })\n      },\n      apiRunPromiseOptions\n    ).then(results => {\n      if (onAPIRunComplete) {\n        onAPIRunComplete()\n      }\n      // Remove runner instance\n      apisRunningById.delete(apiRunInstance.id)\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1)\n\n      if (apisRunningById.size === 0) {\n        emitter.emit(`API_RUNNING_QUEUE_EMPTY`)\n      }\n\n      // Filter empty results\n      apiRunInstance.results = results.filter(result => !_.isEmpty(result))\n\n      // Filter out empty responses and return if the\n      // api caller isn't waiting for cascading actions to finish.\n      if (!waitForCascadingActions) {\n        apiSpan.finish()\n        resolve(apiRunInstance.results)\n      }\n\n      // Check if any of our waiters are done.\n      waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(\n        instance => {\n          // If none of its trace IDs are running, it's done.\n          const apisByTraceIdCount = apisRunningByTraceId.get(instance.traceId)\n          if (apisByTraceIdCount === 0) {\n            instance.span.finish()\n            instance.resolve(instance.results)\n            return false\n          } else {\n            return true\n          }\n        }\n      )\n      return\n    })\n  })\n}\n\nmodule.exports = apiRunnerNode\n"],"file":"api-runner-node.js"}