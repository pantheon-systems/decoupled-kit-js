{"version":3,"sources":["../../src/schema/schema-composer.ts"],"names":["createSchemaComposer","fieldExtensions","schemaComposer","SchemaComposer","add","GraphQLDate","GraphQLJSON"],"mappings":";;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEO,MAAMA,oBAAoB,GAAG,CAAiB;AACnDC,EAAAA;AADmD,IAEhB,EAFD,KAI/B;AACH,QAAMC,cAAsE,GAC1E,IAAIC,8BAAJ,EADF,CADG,CAIH;;AACA,uCAAiB;AAAED,IAAAA;AAAF,GAAjB;AACA,2DAA+BA,cAA/B;AAEAA,EAAAA,cAAc,CAACE,GAAf,CAAmBC,iBAAnB;AACAH,EAAAA,cAAc,CAACE,GAAf,CAAmBE,2BAAnB;AACA,iCAAc;AAAEJ,IAAAA,cAAF;AAAkBD,IAAAA;AAAlB,GAAd;AACA,SAAOC,cAAP;AACD,CAhBM","sourcesContent":["import { SchemaComposer, GraphQLJSON } from \"graphql-compose\"\nimport { addDirectives, GraphQLFieldExtensionDefinition } from \"./extensions\"\nimport { GraphQLDate } from \"./types/date\"\nimport { IGatsbyResolverContext } from \"./type-definitions\"\nimport { getNodeInterface } from \"./types/node-interface\"\nimport { getOrCreateRemoteFileInterface } from \"./types/remote-file-interface\"\n\nexport const createSchemaComposer = <TSource, TArgs>({\n  fieldExtensions,\n}: GraphQLFieldExtensionDefinition = {}): SchemaComposer<\n  IGatsbyResolverContext<TSource, TArgs>\n> => {\n  const schemaComposer: SchemaComposer<IGatsbyResolverContext<TSource, TArgs>> =\n    new SchemaComposer()\n\n  // set default interfaces so plugins can use them\n  getNodeInterface({ schemaComposer })\n  getOrCreateRemoteFileInterface(schemaComposer)\n\n  schemaComposer.add(GraphQLDate)\n  schemaComposer.add(GraphQLJSON)\n  addDirectives({ schemaComposer, fieldExtensions })\n  return schemaComposer\n}\n"],"file":"schema-composer.js"}