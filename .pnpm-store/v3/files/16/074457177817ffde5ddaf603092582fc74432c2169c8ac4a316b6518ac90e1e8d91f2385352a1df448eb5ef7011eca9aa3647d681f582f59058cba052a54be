{"version":3,"sources":["../../../src/steps/preview/cleanup.ts"],"names":["invokeLeftoverPreviewCallback","getNode","status","context","error","nodeId","callback","passedNode","pageNode","path","invokeAndCleanupLeftoverPreviewCallbacks","state","store","getState","gatsbyApi","helpers","leftoverCallbacks","previewStore","nodePageCreatedCallbacks","leftoverCallbacksExist","Object","keys","length","Promise","all","entries","map","dispatch","clearPreviewCallbacks","onPreExtractQueriesInvokeLeftoverPreviewCallbacks"],"mappings":";;;;;;;AAAA;;AAEA;;AAGA;AACA;AACA;AACA;AACA,MAAMA,6BAA6B,GACjC,CAAC;AACCC,EAAAA,OADD;AAECC,EAAAA,MAFD;AAGCC,EAAAA,OAHD;AAICC,EAAAA;AAJD,CAAD,KAWA,OAAO,CAACC,MAAD,EAASC,QAAT,CAAP,KAGqB;AACnB,QAAMC,UAAU,GAAGN,OAAO,CAACI,MAAD,CAA1B;AAEA,QAAMC,QAAQ,CAAC;AACbC,IAAAA,UADa;AAEbF,IAAAA,MAFa;AAGb;AACA;AACAG,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KALG;AAMbP,IAAAA,MANa;AAObC,IAAAA,OAPa;AAQbC,IAAAA;AARa,GAAD,CAAd;AAUD,CA5BH;;AA8BO,MAAMM,wCAAwC,GAAG,OAAO;AAC7DR,EAAAA,MAD6D;AAE7DC,EAAAA,OAF6D;AAG7DC,EAAAA;AAH6D,CAAP,KAQnC;AACnB,QAAMO,KAAK,GAAGC,eAAMC,QAAN,EAAd;;AAEA,QAAM;AAAEZ,IAAAA;AAAF,MAAcU,KAAK,CAACG,SAAN,CAAgBC,OAApC;AAEA,QAAMC,iBAAiB,GAAGL,KAAK,CAACM,YAAN,CAAmBC,wBAA7C;AAEA,QAAMC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYL,iBAAZ,EAA+BM,MAA9D;;AAEA,MAAIH,sBAAJ,EAA4B;AAC1B,UAAMI,OAAO,CAACC,GAAR,CACJJ,MAAM,CAACK,OAAP,CAAeT,iBAAf,EAAkCU,GAAlC,CACE1B,6BAA6B,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA,OAAnB;AAA4BC,MAAAA;AAA5B,KAAD,CAD/B,CADI,CAAN,CAD0B,CAO1B;;AACAQ,mBAAMe,QAAN,CAAeV,YAAf,CAA4BW,qBAA5B;AACD;AACF,CA3BM;AA6BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMC,iDAAiD,GAC5D,YAA2B;AACzB,MAAI,CAAC,sBAAL,EAAsB;AACpB,WAAOnB,wCAAwC,CAAC;AAC9CR,MAAAA,MAAM,EAAG,8BADqC;AAE9CC,MAAAA,OAAO,EAAG;AAFoC,KAAD,CAA/C;AAID,GANwB,CAQzB;AACA;;;AACA,SAAOO,wCAAwC,CAAC;AAC9CR,IAAAA,MAAM,EAAG,oCADqC;AAE9CC,IAAAA,OAAO,EAAG;AAFoC,GAAD,CAA/C;AAID,CAfI","sourcesContent":["import { inPreviewMode, PreviewStatusUnion } from \".\"\nimport { OnPageCreatedCallback } from \"~/models/preview\"\nimport store from \"~/store\"\nimport { NodePluginArgs } from \"gatsby\"\n\n/**\n * This callback is invoked to send WP the preview status. In this case the status\n * is that we couldn't find a page for the node being previewed\n */\nconst invokeLeftoverPreviewCallback =\n  ({\n    getNode,\n    status,\n    context,\n    error,\n  }: {\n    status: PreviewStatusUnion\n    context?: string\n    error?: Error\n    getNode: NodePluginArgs[\"getNode\"]\n  }) =>\n  async ([nodeId, callback]: [\n    string,\n    OnPageCreatedCallback\n  ]): Promise<void> => {\n    const passedNode = getNode(nodeId)\n\n    await callback({\n      passedNode,\n      nodeId,\n      // we pass null as the path because no page was created for this node.\n      // if it had been, this callback would've been removed earlier in the process\n      pageNode: { path: null },\n      status,\n      context,\n      error,\n    })\n  }\n\nexport const invokeAndCleanupLeftoverPreviewCallbacks = async ({\n  status,\n  context,\n  error,\n}: {\n  status: PreviewStatusUnion\n  context?: string\n  error?: Error\n}): Promise<void> => {\n  const state = store.getState()\n\n  const { getNode } = state.gatsbyApi.helpers\n\n  const leftoverCallbacks = state.previewStore.nodePageCreatedCallbacks\n\n  const leftoverCallbacksExist = Object.keys(leftoverCallbacks).length\n\n  if (leftoverCallbacksExist) {\n    await Promise.all(\n      Object.entries(leftoverCallbacks).map(\n        invokeLeftoverPreviewCallback({ getNode, status, context, error })\n      )\n    )\n\n    // after processing our callbacks, we need to remove them all so they don't get called again in the future\n    store.dispatch.previewStore.clearPreviewCallbacks()\n  }\n}\n\n/**\n * Preview callbacks are usually invoked during onCreatePage in Gatsby Preview\n * so that we can send back the preview status of a created page to WP\n * In the case that no page is created for the node we're previewing, we'll\n * have callbacks hanging around and WP will not know the status of the preview\n * So in onPreExtractQueries (which runs after pages are created), we check which\n * preview callbacks haven't been invoked, and invoke them with a \"NO_PAGE_CREATED_FOR_PREVIEWED_NODE\" status, which sends that status to WP\n * After invoking all these leftovers, we clear them out from the store so they aren't called again later.\n */\nexport const onPreExtractQueriesInvokeLeftoverPreviewCallbacks =\n  async (): Promise<void> => {\n    if (!inPreviewMode()) {\n      return invokeAndCleanupLeftoverPreviewCallbacks({\n        status: `GATSBY_PREVIEW_PROCESS_ERROR`,\n        context: `Gatsby is not in Preview mode.`,\n      })\n    }\n\n    // check for any onCreatePageCallbacks that weren't called during createPages\n    // we need to tell WP that a page wasn't created for the preview\n    return invokeAndCleanupLeftoverPreviewCallbacks({\n      status: `NO_PAGE_CREATED_FOR_PREVIEWED_NODE`,\n      context: `invokeAndCleanupLeftoverPreviewCallbacks`,\n    })\n  }\n"],"file":"cleanup.js"}