{"version":3,"sources":["../../src/bootstrap/index.ts"],"names":["tracer","bootstrap","initialContext","spanArgs","parentSpan","childOf","startSpan","bootstrapContext","shouldRunCreatePagesStatefully","context","workerPool","process","env","GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING","program","store","getState","directory","all","loadConfigAndPlugins","siteDirectory","gatsbyNodeGraphQLFunction","reporter","buildSchema","finish"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAWA;;AACA;;AAEA;;AACA;;AAGA,MAAMA,MAAM,GAAG,gCAAf;;AAEO,eAAeC,SAAf,CACLC,cADK,EAKJ;AACD,QAAMC,QAAQ,GAAGD,cAAc,CAACE,UAAf,GACb;AAAEC,IAAAA,OAAO,EAAEH,cAAc,CAACE;AAA1B,GADa,GAEb,EAFJ;AAIA,QAAMA,UAAU,GAAGJ,MAAM,CAACM,SAAP,CAAkB,WAAlB,EAA8BH,QAA9B,CAAnB;AAEA,QAAMI,gBAEL,GAAG,EACF,GAAGL,cADD;AAEFE,IAAAA,UAFE;AAGFI,IAAAA,8BAA8B,EAAE;AAH9B,GAFJ;AAQA,QAAMC,OAAO,GAAG,EACd,GAAGF,gBADW;AAEd,QAAI,MAAM,0BAAWA,gBAAX,CAAV;AAFc,GAAhB;AAKA,QAAMG,UAAU,GAAGD,OAAO,CAACC,UAA3B;;AAEA,MAAIC,OAAO,CAACC,GAAR,CAAYC,0CAAhB,EAA4D;AAC1D,UAAMC,OAAO,GAAGL,OAAO,CAACM,KAAR,CAAcC,QAAd,GAAyBF,OAAzC;AACA,UAAMG,SAAS,GAAG,4BAAMH,OAAO,CAACG,SAAd,CAAlB;AAEAP,IAAAA,UAAU,CAACQ,GAAX,CAAeC,oBAAf,CAAoC;AAAEC,MAAAA,aAAa,EAAEH,SAAjB;AAA4BH,MAAAA;AAA5B,KAApC;AACD;;AAED,QAAM,+BAAgBL,OAAhB,CAAN;AACA,QAAM,2BAAYA,OAAZ,CAAN;AAEA,QAAM,2BAAYA,OAAZ,CAAN;AAEAA,EAAAA,OAAO,CAACY,yBAAR,GAAoC,8CAClCZ,OAAO,CAACM,KAD0B,EAElCO,iBAFkC,CAApC;AAKA,QAAM,2BAAYb,OAAZ,CAAN;AAEA,QAAM,mCAAoBL,UAApB,CAAN;;AAEA,MAAIO,OAAO,CAACC,GAAR,CAAYC,0CAAhB,EAA4D;AAC1D,uCAAuB,CAAE,mBAAF,CAAvB;AAEAH,IAAAA,UAAU,CAACQ,GAAX,CAAeK,WAAf;AACD;;AAED,QAAM,8BAAed,OAAf,CAAN;;AAEA,MAAIE,OAAO,CAACC,GAAR,CAAYC,0CAAhB,EAA4D;AAC1D,uCAAuB,CAAE,YAAF,EAAgB,uBAAhB,CAAvB;AACD;;AAED,QAAM,iCAAkBJ,OAAlB,CAAN;AAEA;AAEA,QAAM,6BAAcA,OAAd,CAAN;AAEAL,EAAAA,UAAU,CAACoB,MAAX;AAEA,SAAO;AACLH,IAAAA,yBAAyB,EAAEZ,OAAO,CAACY,yBAD9B;AAELX,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\nimport { slash } from \"gatsby-core-utils\"\nimport { startRedirectListener } from \"./redirects-writer\"\nimport {\n  IBuildContext,\n  initialize,\n  customizeSchema,\n  sourceNodes,\n  buildSchema,\n  createPages,\n  extractQueries,\n  writeOutRedirects,\n  postBootstrap,\n} from \"../services\"\nimport { Runner, createGraphQLRunner } from \"./create-graphql-runner\"\nimport { globalTracer } from \"opentracing\"\nimport type { GatsbyWorkerPool } from \"../utils/worker/pool\"\nimport { handleStalePageData } from \"../utils/page-data\"\nimport { savePartialStateToDisk } from \"../redux\"\nimport { IProgram } from \"../commands/types\"\n\nconst tracer = globalTracer()\n\nexport async function bootstrap(\n  initialContext: Partial<IBuildContext> & { program: IProgram }\n): Promise<{\n  gatsbyNodeGraphQLFunction: Runner\n  workerPool: GatsbyWorkerPool\n}> {\n  const spanArgs = initialContext.parentSpan\n    ? { childOf: initialContext.parentSpan }\n    : {}\n\n  const parentSpan = tracer.startSpan(`bootstrap`, spanArgs)\n\n  const bootstrapContext: IBuildContext & {\n    shouldRunCreatePagesStatefully: boolean\n  } = {\n    ...initialContext,\n    parentSpan,\n    shouldRunCreatePagesStatefully: true,\n  }\n\n  const context = {\n    ...bootstrapContext,\n    ...(await initialize(bootstrapContext)),\n  }\n\n  const workerPool = context.workerPool\n\n  if (process.env.GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING) {\n    const program = context.store.getState().program\n    const directory = slash(program.directory)\n\n    workerPool.all.loadConfigAndPlugins({ siteDirectory: directory, program })\n  }\n\n  await customizeSchema(context)\n  await sourceNodes(context)\n\n  await buildSchema(context)\n\n  context.gatsbyNodeGraphQLFunction = createGraphQLRunner(\n    context.store,\n    reporter\n  )\n\n  await createPages(context)\n\n  await handleStalePageData(parentSpan)\n\n  if (process.env.GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING) {\n    savePartialStateToDisk([`inferenceMetadata`])\n\n    workerPool.all.buildSchema()\n  }\n\n  await extractQueries(context)\n\n  if (process.env.GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING) {\n    savePartialStateToDisk([`components`, `staticQueryComponents`])\n  }\n\n  await writeOutRedirects(context)\n\n  startRedirectListener()\n\n  await postBootstrap(context)\n\n  parentSpan.finish()\n\n  return {\n    gatsbyNodeGraphQLFunction: context.gatsbyNodeGraphQLFunction,\n    workerPool,\n  }\n}\n"],"file":"index.js"}