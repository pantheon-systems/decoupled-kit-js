{"version":3,"sources":["../../../../src/bootstrap/load-plugins/utils/check-local-plugin.ts"],"names":["checkLocalPlugin","plugin","rootDir","pluginName","resolve","validLocalPlugin","resolvedPath","path","join","resolvedPackageJson","Error","localPluginPath"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACO,SAASA,gBAAT,CACLC,MADK,EAELC,OAFK,EAGoD;AACzD,QAAMC,UAAU,GAAG,OAAOF,MAAP,KAAmB,QAAnB,GAA6BA,MAA7B,GAAsCA,MAAM,CAACG,OAAhE,CADyD,CAGzD;;AACA,MAAI,0BAAWD,UAAX,KAA0B,CAACD,OAA/B,EAAwC;AACtC,WAAO;AACLG,MAAAA,gBAAgB,EAAE;AADb,KAAP;AAGD;;AAED,QAAMC,YAAY,GAAG,4BAAMC,cAAKC,IAAL,CAAUN,OAAV,EAAoB,WAAUC,UAAW,EAAzC,CAAN,CAArB;;AAEA,MAAI,CAAC,0BAAWG,YAAX,CAAL,EAA+B;AAC7B,WAAO;AACLD,MAAAA,gBAAgB,EAAE;AADb,KAAP;AAGD;;AAED,QAAMI,mBAAmB,GAAG,0BAAY,GAAEH,YAAa,eAA3B,CAA5B,CAlByD,CAoBzD;;AACA,MAAI,CAACG,mBAAL,EAA0B;AACxB,UAAM,IAAIC,KAAJ,CAAW,gBAAeP,UAAW,+BAArC,CAAN;AACD;;AAED,SAAO;AACLE,IAAAA,gBAAgB,EAAE,IADb;AAELM,IAAAA,eAAe,EAAEL;AAFZ,GAAP;AAID","sourcesContent":["import { PluginRef } from \"../types\"\nimport { sync as existsSync } from \"fs-exists-cached\"\nimport { slash } from \"gatsby-core-utils\"\nimport path from \"path\"\n\n/**\n * Checks if a plugin is a valid local plugin and returns the resolved path if it is.\n */\nexport function checkLocalPlugin(\n  plugin: PluginRef,\n  rootDir: string\n): { validLocalPlugin: boolean; localPluginPath?: string } {\n  const pluginName = typeof plugin === `string` ? plugin : plugin.resolve\n\n  // Make sure the plugin exists relatively\n  if (existsSync(pluginName) || !rootDir) {\n    return {\n      validLocalPlugin: false,\n    }\n  }\n\n  const resolvedPath = slash(path.join(rootDir, `plugins/${pluginName}`))\n\n  if (!existsSync(resolvedPath)) {\n    return {\n      validLocalPlugin: false,\n    }\n  }\n\n  const resolvedPackageJson = existsSync(`${resolvedPath}/package.json`)\n\n  // package.json is a requirement for local plugins\n  if (!resolvedPackageJson) {\n    throw new Error(`Local plugin ${pluginName} requires a package.json file`)\n  }\n\n  return {\n    validLocalPlugin: true,\n    localPluginPath: resolvedPath,\n  }\n}\n"],"file":"check-local-plugin.js"}