{"version":3,"sources":["../../../src/schema/types/remote-file-interface.ts"],"names":["addRemoteFileInterfaceFields","schemaComposer","typeComposer","remoteFileInterfaceType","getOrCreateRemoteFileInterface","addFields","getFields","enums","createEnumTC","bind","getOrCreateOTC","tc","width","height","src","getOrCreateIFTC","setDescription","boundActions","actions","store","dispatch"],"mappings":";;;;;;AAKA;;AACA;;AACA;;AACA;;AAKO,SAASA,4BAAT,CACLC,cADK,EAELC,YAFK,EAGC;AACN,QAAMC,uBAAuB,GAAGC,8BAA8B,CAACH,cAAD,CAA9D,CADM,CAEN;;AACAC,EAAAA,YAAY,CAACG,SAAb,CAAuBF,uBAAuB,CAACG,SAAxB,EAAvB;AACD;;AAEM,SAASF,8BAAT,EACL;AACAH,cAFK,EAGkB;AACvB,QAAMM,KAAK,GAAG,4CACZN,cAAc,CAACO,YAAf,CAA4BC,IAA5B,CAAiCR,cAAjC,CADY,CAAd;AAIAA,EAAAA,cAAc,CAACS,cAAf,CAA+B,kBAA/B,EAAkDC,EAAE,IAAI;AACtDA,IAAAA,EAAE,CAACN,SAAH,CAAa;AACXO,MAAAA,KAAK,EAAG,KADG;AAEXC,MAAAA,MAAM,EAAG,KAFE;AAGXC,MAAAA,GAAG,EAAG;AAHK,KAAb;AAKD,GAND;AAQA,SAAOb,cAAc,CAACc,eAAf,CAAgC,YAAhC,EAA6CJ,EAAE,IAAI;AACxDA,IAAAA,EAAE,CAACK,cAAH,CAAmB,kBAAnB;AAEA,UAAMC,YAAY,GAAG,+BAAmBC,eAAnB,EAA4BC,aAAMC,QAAlC,CAArB,CAHwD,CAKxD;;AACAT,IAAAA,EAAE,CAACN,SAAH,CAAa,6CAAoBE,KAApB,EAA2BU,YAA3B,CAAb;AACD,GAPM,CAAP;AAQD","sourcesContent":["import {\n  SchemaComposer,\n  ObjectTypeComposer,\n  InterfaceTypeComposer,\n} from \"graphql-compose\"\nimport { bindActionCreators } from \"redux\"\nimport { store } from \"../../redux/index\"\nimport { actions } from \"../../redux/actions/index\"\nimport {\n  getRemoteFileEnums,\n  getRemoteFileFields,\n} from \"gatsby-plugin-utils/polyfill-remote-file\"\n\nexport function addRemoteFileInterfaceFields<TContext = unknown>(\n  schemaComposer: SchemaComposer<unknown>,\n  typeComposer: ObjectTypeComposer<unknown, TContext>\n): void {\n  const remoteFileInterfaceType = getOrCreateRemoteFileInterface(schemaComposer)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeComposer.addFields(remoteFileInterfaceType.getFields() as any)\n}\n\nexport function getOrCreateRemoteFileInterface(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  schemaComposer: SchemaComposer<any>\n): InterfaceTypeComposer {\n  const enums = getRemoteFileEnums(\n    schemaComposer.createEnumTC.bind(schemaComposer)\n  )\n\n  schemaComposer.getOrCreateOTC(`RemoteFileResize`, tc => {\n    tc.addFields({\n      width: `Int`,\n      height: `Int`,\n      src: `String`,\n    })\n  })\n\n  return schemaComposer.getOrCreateIFTC(`RemoteFile`, tc => {\n    tc.setDescription(`Remote Interface`)\n\n    const boundActions = bindActionCreators(actions, store.dispatch)\n\n    // @ts-ignore - types are messed up by schema composer maybe new version helps here\n    tc.addFields(getRemoteFileFields(enums, boundActions))\n  })\n}\n"],"file":"remote-file-interface.js"}