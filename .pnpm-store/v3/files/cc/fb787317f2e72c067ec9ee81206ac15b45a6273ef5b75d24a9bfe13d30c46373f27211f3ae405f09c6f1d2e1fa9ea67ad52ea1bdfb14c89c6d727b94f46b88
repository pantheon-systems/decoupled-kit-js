{"version":3,"sources":["../../../src/redux/reducers/pages.ts"],"names":["pagesReducer","state","Map","action","type","plugin","name","console","log","error","JSON","stringify","Error","set","payload","path","delete","page","get","mode","pageMode"],"mappings":";;;;;AASO,MAAMA,YAAY,GAAG,CAC1BC,KAA4B,GAAG,IAAIC,GAAJ,EADL,EAE1BC,MAF0B,KAOA;AAC1B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,cAAN;AACE,aAAO,IAAIF,GAAJ,EAAP;;AAEF,SAAM,aAAN;AAAoB;AAAA;;AAClB;AACA,YAAI,oBAACC,MAAM,CAACE,MAAR,2CAAC,eAAeC,IAAhB,CAAJ,EAA0B;AACxBC,UAAAA,OAAO,CAACC,GAAR,CAAa,EAAb;AACAD,UAAAA,OAAO,CAACE,KAAR,CAAcC,IAAI,CAACC,SAAL,CAAeR,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAd;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAa,EAAb;AAEA,gBAAM,IAAII,KAAJ,CACH,0FADG,CAAN;AAGD,SAViB,CAYlB;;;AACAX,QAAAA,KAAK,CAACY,GAAN,CAAUV,MAAM,CAACW,OAAP,CAAeC,IAAzB,EAA+BZ,MAAM,CAACW,OAAtC;AAEA,eAAOb,KAAP;AACD;;AAED,SAAM,aAAN;AAAoB;AAClBA,QAAAA,KAAK,CAACe,MAAN,CAAab,MAAM,CAACW,OAAP,CAAeC,IAA5B;AAEA,eAAOd,KAAP;AACD;;AAED,SAAM,uBAAN;AAA8B;AAC5B,cAAMgB,IAAI,GAAGhB,KAAK,CAACiB,GAAN,CAAUf,MAAM,CAACW,OAAP,CAAeC,IAAzB,CAAb;;AACA,YAAI,CAACE,IAAL,EAAW;AACT,gBAAM,IAAIL,KAAJ,CAAW,gCAA+BT,MAAM,CAACW,OAAP,CAAeC,IAAK,EAA9D,CAAN;AACD;;AACDE,QAAAA,IAAI,CAACE,IAAL,GAAYhB,MAAM,CAACW,OAAP,CAAeM,QAA3B;AACA,eAAOnB,KAAP;AACD;;AAED;AACE,aAAOA,KAAP;AAtCJ;AAwCD,CAhDM","sourcesContent":["import {\n  IGatsbyState,\n  IGatsbyPage,\n  IDeleteCacheAction,\n  ICreatePageAction,\n  IDeletePageAction,\n  IMaterializePageMode,\n} from \"../types\"\n\nexport const pagesReducer = (\n  state: IGatsbyState[\"pages\"] = new Map<string, IGatsbyPage>(),\n  action:\n    | IDeleteCacheAction\n    | ICreatePageAction\n    | IDeletePageAction\n    | IMaterializePageMode\n): IGatsbyState[\"pages\"] => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n      return new Map()\n\n    case `CREATE_PAGE`: {\n      // throws an error if the page is not created by a plugin\n      if (!action.plugin?.name) {\n        console.log(``)\n        console.error(JSON.stringify(action, null, 4))\n        console.log(``)\n\n        throw new Error(\n          `Pages can only be created by plugins. There wasn't a plugin set when creating this page.`\n        )\n      }\n\n      // Add page to the state with the path as key\n      state.set(action.payload.path, action.payload)\n\n      return state\n    }\n\n    case `DELETE_PAGE`: {\n      state.delete(action.payload.path)\n\n      return state\n    }\n\n    case `MATERIALIZE_PAGE_MODE`: {\n      const page = state.get(action.payload.path)\n      if (!page) {\n        throw new Error(`Could not find page by path: ${action.payload.path}`)\n      }\n      page.mode = action.payload.pageMode\n      return state\n    }\n\n    default:\n      return state\n  }\n}\n"],"file":"pages.js"}