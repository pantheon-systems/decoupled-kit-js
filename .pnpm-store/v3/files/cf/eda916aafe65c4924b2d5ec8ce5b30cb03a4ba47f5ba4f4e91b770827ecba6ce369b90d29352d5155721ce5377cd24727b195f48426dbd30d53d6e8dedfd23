{"version":3,"sources":["../../src/models/preview.ts"],"names":["previewStore","state","nodePageCreatedCallbacks","nodeIdsToCreatedPages","pagePathToNodeDependencyId","reducers","unSubscribeToPagesCreatedFromNodeById","nodeId","subscribeToPagesCreatedFromNodeById","sendPreviewStatus","clearPreviewCallbacks","saveNodePageState","page","path"],"mappings":";;;;AAAA;AACA;AAsDA,MAAMA,YAA2B,GAAG;AAClCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,wBAAwB,EAAE,EADrB;AAELC,IAAAA,qBAAqB,EAAE,EAFlB;AAGLC,IAAAA,0BAA0B,EAAE;AAHvB,GAD2B;AAOlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qCAAqC,CAACL,KAAD,EAAQ;AAAEM,MAAAA;AAAF,KAAR,EAAoB;AAAA;;AACvD,mCAAIN,KAAK,CAACC,wBAAV,kDAAI,sBAAiCK,MAAjC,CAAJ,EAA8C;AAC5C,eAAON,KAAK,CAACC,wBAAN,CAA+BK,MAA/B,CAAP;AACD;;AAED,aAAON,KAAP;AACD,KAPO;;AASRO,IAAAA,mCAAmC,CAACP,KAAD,EAAQ;AAAEM,MAAAA,MAAF;AAAUE,MAAAA;AAAV,KAAR,EAAuC;AACxE;AACA;AACA;AACAR,MAAAA,KAAK,CAACC,wBAAN,CAA+BK,MAA/B,IAAyCE,iBAAzC;AAEA,aAAOR,KAAP;AACD,KAhBO;;AAkBRS,IAAAA,qBAAqB,CAACT,KAAD,EAAQ;AAC3BA,MAAAA,KAAK,CAACC,wBAAN,GAAiC,EAAjC;AAEA,aAAOD,KAAP;AACD,KAtBO;;AAwBRU,IAAAA,iBAAiB,CAACV,KAAD,EAAQ;AAAEW,MAAAA,IAAF;AAAQL,MAAAA;AAAR,KAAR,EAA0B;AACzCN,MAAAA,KAAK,CAACE,qBAAN,CAA4BI,MAA5B,IAAsC;AACpCK,QAAAA;AADoC,OAAtC;AAIAX,MAAAA,KAAK,CAACG,0BAAN,CAAiCQ,IAAI,CAACC,IAAtC,IAA8C;AAC5CN,QAAAA;AAD4C,OAA9C;AAIA,aAAON,KAAP;AACD;;AAlCO;AAPwB,CAApC;eA6CeD,Y","sourcesContent":["// `node` here is a Gatsby node\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type OnPageCreatedCallback = (node: any) => Promise<void>\n\nexport interface IStoredPage {\n  path: string\n  updatedAt: number\n}\n\nexport interface IPreviewState {\n  nodePageCreatedCallbacks: {\n    [nodeId: string]: OnPageCreatedCallback\n  }\n  nodeIdsToCreatedPages: {\n    [nodeId: string]: {\n      page: IStoredPage\n    }\n  }\n  pagePathToNodeDependencyId: {\n    [pageId: string]: {\n      nodeId: string\n    }\n  }\n}\n\nexport interface IPreviewReducers {\n  subscribeToPagesCreatedFromNodeById: (\n    state: IPreviewState,\n    payload: {\n      nodeId: string\n      sendPreviewStatus: OnPageCreatedCallback\n      modified: string\n    }\n  ) => IPreviewState\n  unSubscribeToPagesCreatedFromNodeById: (\n    state: IPreviewState,\n    payload: {\n      nodeId: string\n    }\n  ) => IPreviewState\n  clearPreviewCallbacks: (state: IPreviewState) => IPreviewState\n  saveNodePageState: (\n    state: IPreviewState,\n    payload: {\n      nodeId: string\n      page: IStoredPage\n    }\n  ) => IPreviewState\n}\n\nexport interface IPreviewStore {\n  state: IPreviewState\n  reducers: IPreviewReducers\n}\n\nconst previewStore: IPreviewStore = {\n  state: {\n    nodePageCreatedCallbacks: {},\n    nodeIdsToCreatedPages: {},\n    pagePathToNodeDependencyId: {},\n  },\n\n  reducers: {\n    unSubscribeToPagesCreatedFromNodeById(state, { nodeId }) {\n      if (state.nodePageCreatedCallbacks?.[nodeId]) {\n        delete state.nodePageCreatedCallbacks[nodeId]\n      }\n\n      return state\n    },\n\n    subscribeToPagesCreatedFromNodeById(state, { nodeId, sendPreviewStatus }) {\n      // save the callback for this nodeId\n      // when a page is created from a node that has this id,\n      // the callback will be invoked\n      state.nodePageCreatedCallbacks[nodeId] = sendPreviewStatus\n\n      return state\n    },\n\n    clearPreviewCallbacks(state) {\n      state.nodePageCreatedCallbacks = {}\n\n      return state\n    },\n\n    saveNodePageState(state, { page, nodeId }) {\n      state.nodeIdsToCreatedPages[nodeId] = {\n        page,\n      }\n\n      state.pagePathToNodeDependencyId[page.path] = {\n        nodeId,\n      }\n\n      return state\n    },\n  } as IPreviewReducers,\n}\n\nexport default previewStore\n"],"file":"preview.js"}