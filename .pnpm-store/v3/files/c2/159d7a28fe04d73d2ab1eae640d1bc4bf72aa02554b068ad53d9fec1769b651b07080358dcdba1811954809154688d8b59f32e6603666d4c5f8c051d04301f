{"version":3,"sources":["../../../src/utils/babel/babel-plugin-remove-api.ts"],"names":["removeApiCalls","api","options","assertVersion","apisToRemove","apis","length","console","warn","name","visitor","Program","exit","path","state","apiRemoved","removed","scope","crawl","Object","keys","bindings","forEach","refName","ref","referenced","type","isSelfReferenced","referencePaths","every","refPath","findParent","p","remove","t","isVariableDeclarator","isObjectPattern","parent","declarations","id","objectPattern","properties","filter","prop","isObjectProperty","value","argument","kind","specifiers","parentPath","ExportNamedDeclaration","declaration","node","isExportNamedDeclaration","specifiersToKeep","specifier","isExportSpecifier","isIdentifier","exported","includes","local","push","apiToCheck","isFunctionDeclaration","isVariableDeclaration","i","objectPath","get","ExpressionStatement","isAssignmentExpression","expression","isMemberExpression","left","object","property"],"mappings":";;;;;AAAA;;AACA;;AAEA;;;;;;AAEA;AACA;AACA;eACe,gCAAQ,SAASA,cAAT,CACrBC,GADqB,EAErBC,OAFqB,EAGV;AAAA;;AACXD,EAAAA,GAAG,CAACE,aAAJ,CAAkB,CAAlB;AAEA,QAAMC,YAAY,oBAAGF,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEG,IAAZ,yDAAoB,EAAtC;;AAEA,MAAI,CAACD,YAAY,CAACE,MAAlB,EAA0B;AACxBC,IAAAA,OAAO,CAACC,IAAR,CACG,iEADH;AAGD;;AAED,SAAO;AACLC,IAAAA,IAAI,EAAG,YADF;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,CAACC,IAAD,EAAOC,KAAP,EAAoB;AACtB,cAAI,CAACA,KAAK,CAACC,UAAX,EAAuB;AACrB;AACD,WAHqB,CAKtB;;;AACA,cAAIC,OAAO,GAAG,KAAd,CANsB,CAQtB;;AACA,aAAG;AACDA,YAAAA,OAAO,GAAG,KAAV,CADC,CAED;;AACAH,YAAAA,IAAI,CAACI,KAAL,CAAWC,KAAX;AAEAC,YAAAA,MAAM,CAACC,IAAP,CAAYP,IAAI,CAACI,KAAL,CAAWI,QAAvB,EAAiCC,OAAjC,CAAyCC,OAAO,IAAI;AAClD,oBAAMC,GAAG,GAAGX,IAAI,CAACI,KAAL,CAAWI,QAAX,CAAoBE,OAApB,CAAZ;;AAEA,kBAAIC,GAAG,CAACC,UAAR,EAAoB;AAClB;AACA;AACA,oBAAID,GAAG,CAACX,IAAJ,CAASa,IAAT,KAAmB,qBAAvB,EAA6C;AAC3C,wBAAMC,gBAAgB,GAAGH,GAAG,CAACI,cAAJ,CAAmBC,KAAnB,CACvBC,OAAO,IAAI,CAAC,CAACA,OAAO,CAACC,UAAR,CAAmBC,CAAC,IAAIA,CAAC,KAAKR,GAAG,CAACX,IAAlC,CADU,CAAzB;;AAIA,sBAAIc,gBAAJ,EAAsB;AACpBH,oBAAAA,GAAG,CAACX,IAAJ,CAASoB,MAAT;AACAjB,oBAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,eAbD,MAaO;AACL;AACA,oBACEkB,CAAC,CAACC,oBAAF,CAAuBX,GAAG,CAACX,IAA3B,KACAqB,CAAC,CAACE,eAAF,CACGZ,GAAG,CAACX,IAAJ,CAASwB,MAAV,CAA2CC,YAA3C,CAAwD,CAAxD,EACGC,EAFL,CAFF,EAME;AACA,wBAAMC,aAAa,GACjBhB,GAAG,CAACX,IAAJ,CAASwB,MADW,CAEpBC,YAFoB,CAEP,CAFO,EAEJC,EAFlB;AAGAC,kBAAAA,aAAa,CAACC,UAAd,GAA2BD,aAAa,CAACC,UAAd,CAAyBC,MAAzB,CACzBC,IAAI,IACFT,CAAC,CAACU,gBAAF,CAAmBD,IAAnB,IACKA,IAAI,CAACE,KAAN,CAA6BpC,IAA7B,KAAsCc,OAD1C,GAEMoB,IAAD,CAAwBG,QAAzB,CACGrC,IADH,KACYc,OALO,CAA3B,CAJA,CAYA;;AACA,sBAAI,CAACiB,aAAa,CAACC,UAAd,CAAyBnC,MAA9B,EAAsC;AACpCkB,oBAAAA,GAAG,CAACX,IAAJ,CAASoB,MAAT;AACD;AACF,iBAtBD,MAsBO;AACLT,kBAAAA,GAAG,CAACX,IAAJ,CAASoB,MAAT;AACD,iBA1BI,CA4BL;;;AACA,oBACET,GAAG,CAACuB,IAAJ,KAAc,QAAd,IACA,CAAEvB,GAAG,CAACX,IAAJ,CAASwB,MAAV,CAAyCW,UAAzC,CAAoD1C,MADrD,IAEAkB,GAAG,CAACX,IAAJ,CAASoC,UAHX,EAIE;AACAzB,kBAAAA,GAAG,CAACX,IAAJ,CAASoC,UAAT,CAAoBhB,MAApB;AACD;;AAEDjB,gBAAAA,OAAO,GAAG,IAAV;AACD;AACF,aAvDD;AAwDD,WA7DD,QA6DSA,OA7DT;AA8DD;;AAxEM,OADF;;AA4EP;AACAkC,MAAAA,sBAAsB,CAACrC,IAAD,EAAOC,KAAP,EAAoB;AACxC,cAAMqC,WAAW,GAAGtC,IAAI,CAACuC,IAAL,CAAUD,WAA9B;;AAEA,YAAIjB,CAAC,CAACmB,wBAAF,CAA2BxC,IAAI,CAACuC,IAAhC,CAAJ,EAA2C;AACzC,gBAAME,gBAIL,GAAG,EAJJ,CADyC,CAOzC;;AACAzC,UAAAA,IAAI,CAACuC,IAAL,CAAUJ,UAAV,CAAqB1B,OAArB,CAA6BiC,SAAS,IAAI;AACxC,gBACErB,CAAC,CAACsB,iBAAF,CAAoBD,SAApB,KACArB,CAAC,CAACuB,YAAF,CAAeF,SAAS,CAACG,QAAzB,CADA,IAEAtD,YAAY,CAACuD,QAAb,CAAsBJ,SAAS,CAACG,QAAV,CAAmBjD,IAAzC,CAHF,EAIE;AACAI,cAAAA,IAAI,CAACI,KAAL,CAAWI,QAAX,CAAoBkC,SAAS,CAACK,KAAV,CAAgBnD,IAApC,EAA0CI,IAA1C,CAA+CoB,MAA/C;AACD,aAND,MAMO;AACLqB,cAAAA,gBAAgB,CAACO,IAAjB,CAAsBN,SAAtB;AACD;AACF,WAVD;AAYA1C,UAAAA,IAAI,CAACuC,IAAL,CAAUJ,UAAV,GAAuBM,gBAAvB;AACD,SAxBuC,CA0BxC;;;AACA,YAAIQ,UAAJ;;AACA,YAAI5B,CAAC,CAAC6B,qBAAF,CAAwBZ,WAAxB,KAAwCA,WAAW,CAACZ,EAAxD,EAA4D;AAC1DuB,UAAAA,UAAU,GAAGX,WAAW,CAACZ,EAAZ,CAAe9B,IAA5B;AACD,SA9BuC,CAgCxC;;;AACA,YACEyB,CAAC,CAAC8B,qBAAF,CAAwBb,WAAxB,KACAjB,CAAC,CAACuB,YAAF,CAAeN,WAAW,CAACb,YAAZ,CAAyB,CAAzB,EAA4BC,EAA3C,CAFF,EAGE;AACAuB,UAAAA,UAAU,GAAGX,WAAW,CAACb,YAAZ,CAAyB,CAAzB,EAA4BC,EAA5B,CAA+B9B,IAA5C;AACD;;AAED,YAAIqD,UAAU,IAAI1D,YAAY,CAACuD,QAAb,CAAsBG,UAAtB,CAAlB,EAAqD;AACnDhD,UAAAA,KAAK,CAACC,UAAN,GAAmB,IAAnB;AACAF,UAAAA,IAAI,CAACoB,MAAL;AACD,SA3CuC,CA6CxC;;;AACA,YAAIC,CAAC,CAAC8B,qBAAF,CAAwBb,WAAxB,CAAJ,EAA0C;AACxC,eAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAGd,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEb,YAAb,CAA0BhC,MAA7B,CAAjB,EAAsD2D,CAAC,EAAvD,EAA2D;AACzD,gBAAI,CAAAd,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEb,YAAb,CAA0B2B,CAA1B,EAA6B1B,EAA7B,CAAgCb,IAAhC,MAA0C,eAA9C,EAA8D;AAC5D,oBAAMwC,UAAU,GAAGrD,IAAI,CAACsD,GAAL,CAChB,4BAA2BF,CAAE,KADb,CAAnB;AAGA,qEAAuBpD,IAAvB,EAA6BqD,UAA7B,EAAyC9D,YAAzC;AACD;AACF;AACF;AACF,OArIM;;AAuIP;AACAgE,MAAAA,mBAAmB,CAACvD,IAAD,EAAOC,KAAP,EAAoB;AACrC,YACE,CAACoB,CAAC,CAACmC,sBAAF,CAAyBxD,IAAI,CAACuC,IAAL,CAAUkB,UAAnC,CAAD,IACA,CAACpC,CAAC,CAACqC,kBAAF,CAAqB1D,IAAI,CAACuC,IAAL,CAAUkB,UAAV,CAAqBE,IAA1C,CADD,IAEC3D,IAAI,CAACuC,IAAL,CAAUkB,UAAV,CAAqBE,IAArB,CAA0BC,MAA3B,CAAmDhE,IAAnD,KAA6D,SAH/D,EAIE;AACA;AACD;;AAED,cAAMqD,UAAU,GAAIjD,IAAI,CAACuC,IAAL,CAAUkB,UAAV,CAAqBE,IAArB,CAA0BE,QAA3B,CAChBjE,IADH;;AAEA,YAAIqD,UAAU,IAAI1D,YAAY,CAACuD,QAAb,CAAsBG,UAAtB,CAAlB,EAAqD;AACnDhD,UAAAA,KAAK,CAACC,UAAN,GAAmB,IAAnB;AACAF,UAAAA,IAAI,CAACoB,MAAL;AACD;AACF;;AAvJM;AAFJ,GAAP;AA4JD,CA1Kc,C","sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\"\nimport * as t from \"@babel/types\"\nimport type { PluginObj, ConfigAPI, NodePath } from \"@babel/core\"\nimport { removeExportProperties } from \"./babel-module-exports-helpers\"\n\n/**\n * Remove specified module exports from files.\n */\nexport default declare(function removeApiCalls(\n  api: ConfigAPI,\n  options: { apis?: Array<string> }\n): PluginObj {\n  api.assertVersion(7)\n\n  const apisToRemove = options?.apis ?? []\n\n  if (!apisToRemove.length) {\n    console.warn(\n      `No list of APIs was given to remove, check your plugin options.`\n    )\n  }\n\n  return {\n    name: `remove-api`,\n    visitor: {\n      Program: {\n        exit(path, state): void {\n          if (!state.apiRemoved) {\n            return\n          }\n\n          // babel doesn't remove references very well so we loop until nothing gets removed\n          let removed = false\n\n          // remove all unreferenced bindings\n          do {\n            removed = false\n            // make sure all references are up to date\n            path.scope.crawl()\n\n            Object.keys(path.scope.bindings).forEach(refName => {\n              const ref = path.scope.bindings[refName]\n\n              if (ref.referenced) {\n                // Functions can reference themselves, so we need to check if there's a\n                // binding outside the function scope or not.\n                if (ref.path.type === `FunctionDeclaration`) {\n                  const isSelfReferenced = ref.referencePaths.every(\n                    refPath => !!refPath.findParent(p => p === ref.path)\n                  )\n\n                  if (isSelfReferenced) {\n                    ref.path.remove()\n                    removed = true\n                  }\n                }\n              } else {\n                // if const {x,y} is used, we remove the property\n                if (\n                  t.isVariableDeclarator(ref.path) &&\n                  t.isObjectPattern(\n                    (ref.path.parent as t.VariableDeclaration).declarations[0]\n                      .id\n                  )\n                ) {\n                  const objectPattern = (\n                    ref.path.parent as t.VariableDeclaration\n                  ).declarations[0].id as t.ObjectPattern\n                  objectPattern.properties = objectPattern.properties.filter(\n                    prop =>\n                      t.isObjectProperty(prop)\n                        ? (prop.value as t.Identifier).name !== refName\n                        : ((prop as t.RestElement).argument as t.Identifier)\n                            .name !== refName\n                  )\n\n                  // if all properties got removed thus the object pattern is empty, we remove the whole declaration\n                  if (!objectPattern.properties.length) {\n                    ref.path.remove()\n                  }\n                } else {\n                  ref.path.remove()\n                }\n\n                // if it's a module and all specifiers are removed, remove the full binding\n                if (\n                  ref.kind === `module` &&\n                  !(ref.path.parent as t.ImportDeclaration).specifiers.length &&\n                  ref.path.parentPath\n                ) {\n                  ref.path.parentPath.remove()\n                }\n\n                removed = true\n              }\n            })\n          } while (removed)\n        },\n      },\n\n      // Remove export statements\n      ExportNamedDeclaration(path, state): void {\n        const declaration = path.node.declaration\n\n        if (t.isExportNamedDeclaration(path.node)) {\n          const specifiersToKeep: Array<\n            | t.ExportDefaultSpecifier\n            | t.ExportNamespaceSpecifier\n            | t.ExportSpecifier\n          > = []\n\n          // Remove `export { foo }` shaped exports\n          path.node.specifiers.forEach(specifier => {\n            if (\n              t.isExportSpecifier(specifier) &&\n              t.isIdentifier(specifier.exported) &&\n              apisToRemove.includes(specifier.exported.name)\n            ) {\n              path.scope.bindings[specifier.local.name].path.remove()\n            } else {\n              specifiersToKeep.push(specifier)\n            }\n          })\n\n          path.node.specifiers = specifiersToKeep\n        }\n\n        // Remove `export function foo() {}` shaped exports\n        let apiToCheck\n        if (t.isFunctionDeclaration(declaration) && declaration.id) {\n          apiToCheck = declaration.id.name\n        }\n\n        // Remove `export const foo = () => {}` shaped exports\n        if (\n          t.isVariableDeclaration(declaration) &&\n          t.isIdentifier(declaration.declarations[0].id)\n        ) {\n          apiToCheck = declaration.declarations[0].id.name\n        }\n\n        if (apiToCheck && apisToRemove.includes(apiToCheck)) {\n          state.apiRemoved = true\n          path.remove()\n        }\n\n        // Remove `export const { foo } = () => {}` shaped exports\n        if (t.isVariableDeclaration(declaration)) {\n          for (let i = 0; i < declaration?.declarations.length; i++) {\n            if (declaration?.declarations[i].id.type === `ObjectPattern`) {\n              const objectPath = path.get(\n                `declaration.declarations.${i}.id`\n              ) as NodePath<t.ObjectPattern>\n              removeExportProperties(path, objectPath, apisToRemove)\n            }\n          }\n        }\n      },\n\n      // Remove `module.exports = { foo }` and `exports.foo = {}` shaped exports\n      ExpressionStatement(path, state): void {\n        if (\n          !t.isAssignmentExpression(path.node.expression) ||\n          !t.isMemberExpression(path.node.expression.left) ||\n          (path.node.expression.left.object as t.Identifier).name !== `exports`\n        ) {\n          return\n        }\n\n        const apiToCheck = (path.node.expression.left.property as t.Identifier)\n          .name\n        if (apiToCheck && apisToRemove.includes(apiToCheck)) {\n          state.apiRemoved = true\n          path.remove()\n        }\n      },\n    },\n  }\n})\n"],"file":"babel-plugin-remove-api.js"}