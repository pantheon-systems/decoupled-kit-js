{"version":3,"sources":["../src/gatsby-browser.ts"],"names":["React","ReactDOM","hydrateRef","isFirstHydration","isSafari","test","navigator","userAgent","onRouteUpdate","process","env","NODE_ENV","window","cancelIdleCallback","requestIdleCallback","hydrateImages","clearTimeout","setTimeout","doc","document","inlineWPimages","Array","from","querySelectorAll","length","then","mod","forEach","image","dataset","wpInlineImage","parentNode","hydrationData","querySelector","imageProps","JSON","parse","innerHTML","createRoot","root","render","createElement","default","hydrate","GatsbyImage"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAIC,UAAJ;AACA,IAAIC,gBAAgB,GAAG,IAAvB;AACA,MAAMC,QAAQ,GAAG,iCAAiCC,IAAjC,CAAsCC,SAAS,CAACC,SAAhD,CAAjB;AAEA,OAAO,SAASC,aAAT,GAA+B;AACpC,MACEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAA0B,YAA1B,IACAR,gBADA,IAEA;AACA;AACA,GAACC,QALH,EAME;AACAD,IAAAA,gBAAgB,GAAG,KAAnB;AACA;AACD;;AAED,MAAK,qBAAD,IAAyBS,MAA7B,EAAqC;AACnC,QAAIV,UAAJ,EAAgB;AACd;AACAW,MAAAA,kBAAkB,CAACX,UAAD,CAAlB;AACD,KAJkC,CAMnC;;;AACAA,IAAAA,UAAU,GAAGY,mBAAmB,CAACC,aAAD,CAAhC;AACD,GARD,MAQO;AACL,QAAIb,UAAJ,EAAgB;AACdc,MAAAA,YAAY,CAACd,UAAD,CAAZ;AACD;;AACDA,IAAAA,UAAU,GAAGe,UAAU,CAACF,aAAD,CAAvB;AACD;AACF;;AAED,SAASA,aAAT,GAA+B;AAC7B,QAAMG,GAAG,GAAGC,QAAZ;AACA,QAAMC,cAAkC,GAAGC,KAAK,CAACC,IAAN,CACzCJ,GAAG,CAACK,gBAAJ,CAAsB,wBAAtB,CADyC,CAA3C;;AAIA,MAAI,CAACH,cAAc,CAACI,MAApB,EAA4B;AAC1B;AACD;;AAED;AACE;AAA+C,uBADjD,EAEEC,IAFF,CAEOC,GAAG,IAAI;AACZN,IAAAA,cAAc,CAACO,OAAf,CAAuBC,KAAK,IAAI;AAC9B,UACEA,KAAK,CAACC,OAAN,IACAD,KAAK,CAACC,OAAN,CAAcC,aADd,IAEAF,KAAK,CAACG,UAAN,CAAiBA,UAHnB,EAIE;AACA,cAAMC,aAAa,GAAGd,GAAG,CAACe,aAAJ,CACnB,0CAAyCL,KAAK,CAACC,OAAN,CAAcC,aAAc,IADlD,CAAtB;;AAIA,YAAIE,aAAJ,EAAmB;AACjB,gBAAME,UAA4B,GAAGC,IAAI,CAACC,KAAL,CACnCJ,aAAa,CAACK,SADqB,CAArC,CADiB,CAKjB;;AACA,cAAIpC,QAAQ,CAACqC,UAAb,EAAyB;AACvB;AACA,kBAAMC,IAAI,GAAGtC,QAAQ,CAACqC,UAAT,CAAoBV,KAAK,CAACG,UAAN,CAAiBA,UAArC,CAAb,CAFuB,CAGvB;;AACAQ,YAAAA,IAAI,CAACC,MAAL,eAAYxC,KAAK,CAACyC,aAAN,CAAoBf,GAAG,CAACgB,OAAxB,EAAiCR,UAAjC,CAAZ,EAA0D;AACxDS,cAAAA,OAAO,EAAE;AAD+C,aAA1D;AAGD,WAPD,MAOO;AACL1C,YAAAA,QAAQ,CAAC0C,OAAT;AAAA;AACE;AACA3C,YAAAA,KAAK,CAACyC,aAAN,CAAoBf,GAAG,CAACkB,WAAxB,EAAqCV,UAArC,CAFF,EAGEN,KAAK,CAACG,UAAN,CAAiBA,UAHnB;AAKD;AACF;AACF;AACF,KAhCD;AAiCD,GApCD;AAqCD","sourcesContent":["import type { GatsbyImageProps } from \"gatsby-plugin-image\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nlet hydrateRef\nlet isFirstHydration = true\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n\nexport function onRouteUpdate(): void {\n  if (\n    process.env.NODE_ENV === `production` &&\n    isFirstHydration &&\n    // Safari has a bug that causes images to stay blank when directly loading a page (images load when client-side navigating)\n    // running this code on first hydration makes images load.\n    !isSafari\n  ) {\n    isFirstHydration = false\n    return\n  }\n\n  if (`requestIdleCallback` in window) {\n    if (hydrateRef) {\n      // @ts-ignore cancelIdleCallback is on window object\n      cancelIdleCallback(hydrateRef)\n    }\n\n    // @ts-ignore requestIdleCallback is on window object\n    hydrateRef = requestIdleCallback(hydrateImages)\n  } else {\n    if (hydrateRef) {\n      clearTimeout(hydrateRef)\n    }\n    hydrateRef = setTimeout(hydrateImages)\n  }\n}\n\nfunction hydrateImages(): void {\n  const doc = document\n  const inlineWPimages: Array<HTMLElement> = Array.from(\n    doc.querySelectorAll(`[data-wp-inline-image]`)\n  )\n\n  if (!inlineWPimages.length) {\n    return\n  }\n\n  import(\n    /* webpackChunkName: \"gatsby-plugin-image\" */ `gatsby-plugin-image`\n  ).then(mod => {\n    inlineWPimages.forEach(image => {\n      if (\n        image.dataset &&\n        image.dataset.wpInlineImage &&\n        image.parentNode.parentNode\n      ) {\n        const hydrationData = doc.querySelector(\n          `script[data-wp-inline-image-hydration=\"${image.dataset.wpInlineImage}\"]`\n        )\n\n        if (hydrationData) {\n          const imageProps: GatsbyImageProps = JSON.parse(\n            hydrationData.innerHTML\n          )\n\n          // @ts-ignore - createRoot is on ReactDOM\n          if (ReactDOM.createRoot) {\n            // @ts-ignore - createRoot is on ReactDOM\n            const root = ReactDOM.createRoot(image.parentNode.parentNode)\n            // @ts-ignore - not same as below, not sure why it's complaining\n            root.render(React.createElement(mod.default, imageProps), {\n              hydrate: true,\n            })\n          } else {\n            ReactDOM.hydrate(\n              // @ts-ignore - no idea why it complains\n              React.createElement(mod.GatsbyImage, imageProps),\n              image.parentNode.parentNode\n            )\n          }\n        }\n      }\n    })\n  })\n}\n"],"file":"gatsby-browser.js"}