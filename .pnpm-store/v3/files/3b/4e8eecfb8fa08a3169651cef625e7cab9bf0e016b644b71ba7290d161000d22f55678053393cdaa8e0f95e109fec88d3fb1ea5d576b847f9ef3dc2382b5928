{"version":3,"file":"use-intersection-observer.dev.js","sources":["../../node_modules/intersection-observer/intersection-observer.js","../../node_modules/@react-hook/passive-layout-effect/src/index.tsx","../../src/index.tsx"],"sourcesContent":["/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * A local reference to the document.\n */\nvar document = window.document;\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  if (doc != (this.root && this.root.ownerDocument || document)) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc = (this.root && this.root.ownerDocument || document);\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: crossOriginUpdater && !this.root ? null : rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target) &&\n    (!this.root || this.root.ownerDocument == target.ownerDocument);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  if (parent && parent.assignedSlot) {\n    // If the parent is distributed in a <slot>, return the parent of a slot.\n    return parent.assignedSlot.parentNode;\n  }\n\n  return parent;\n}\n\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n","import * as React from 'react'\n\nconst usePassiveLayoutEffect =\n  React[\n    typeof document !== 'undefined' && document.createElement !== void 0\n      ? 'useLayoutEffect'\n      : 'useEffect'\n  ]\n\nexport default usePassiveLayoutEffect\n","import 'intersection-observer'\nimport * as React from 'react'\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\n\nfunction useIntersectionObserver<T extends HTMLElement = HTMLElement>(\n  target: React.RefObject<T> | T | null,\n  options: IntersectionObserverOptions = {}\n): MockIntersectionObserverEntry | IntersectionObserverEntry {\n  const {\n    root = null,\n    pollInterval = null,\n    useMutationObserver = false,\n    rootMargin = '0px 0px 0px 0px',\n    threshold = 0,\n    initialIsIntersecting = false,\n  } = options\n  const [entry, setEntry] = React.useState<\n    IntersectionObserverEntry | MockIntersectionObserverEntry\n  >(() => ({\n    boundingClientRect: null,\n    intersectionRatio: 0,\n    intersectionRect: null,\n    isIntersecting: initialIsIntersecting,\n    rootBounds: null,\n    target: null,\n    time: 0,\n  }))\n  const [observer, setObserver] = React.useState(() =>\n    getIntersectionObserver({\n      root,\n      pollInterval,\n      useMutationObserver,\n      rootMargin,\n      threshold,\n    })\n  )\n\n  React.useEffect(() => {\n    const observer = getIntersectionObserver({\n      root,\n      pollInterval,\n      useMutationObserver,\n      rootMargin,\n      threshold,\n    })\n    setObserver(observer)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    root,\n    rootMargin,\n    pollInterval,\n    useMutationObserver,\n    JSON.stringify(threshold),\n  ])\n\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target\n    if (!observer || !targetEl) return\n    let didUnsubscribe = false\n    observer.observer.observe(targetEl)\n\n    const callback = (entries: IntersectionObserverEntry[]) => {\n      if (didUnsubscribe) return\n\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i]\n        if (entry.target === targetEl) {\n          setEntry(entry)\n        }\n      }\n    }\n\n    observer.subscribe(callback)\n\n    return () => {\n      didUnsubscribe = true\n      observer.observer.unobserve(targetEl)\n      observer.unsubscribe(callback)\n    }\n  }, [target, observer])\n\n  return entry\n}\n\nfunction createIntersectionObserver({\n  root = null,\n  pollInterval = null,\n  useMutationObserver = false,\n  rootMargin = '0px 0px 0px 0px',\n  threshold = 0,\n}: IntersectionObserverOptions) {\n  const callbacks: Set<IntersectionObserverCallback> = new Set()\n  if (typeof IntersectionObserver === 'undefined') return null\n  const observer = new IntersectionObserver(\n    (entries) => {\n      for (const callback of callbacks) callback(entries, observer)\n    },\n    {root, rootMargin, threshold}\n  )\n  // @ts-ignore\n  observer.POLL_INTERVAL = pollInterval\n  // @ts-ignore\n  observer.USE_MUTATION_OBSERVER = useMutationObserver\n\n  return {\n    observer,\n    getListeners() {\n      return callbacks\n    },\n    subscribe: (callback: IntersectionObserverCallback) =>\n      callbacks.add(callback),\n    unsubscribe: (callback: IntersectionObserverCallback) =>\n      callbacks.delete(callback),\n  }\n}\n\nconst _intersectionObserver: Map<\n  HTMLElement | null | undefined,\n  Record<string, ReturnType<typeof createIntersectionObserver>>\n> = new Map()\n\nfunction getIntersectionObserver(options: IntersectionObserverOptions) {\n  const {root, ...keys} = options\n  const key = JSON.stringify(keys)\n  let base = _intersectionObserver.get(root)\n  if (!base) {\n    base = {}\n    _intersectionObserver.set(root, base)\n  }\n  return !base[key]\n    ? (base[key] = createIntersectionObserver(options))\n    : base[key]\n}\n\nexport type UseIntersectionObserverCallback = (\n  entry: IntersectionObserverEntry,\n  observer: IntersectionObserver\n) => any\n\nexport interface IntersectionObserverOptions {\n  root?: HTMLElement | null\n  pollInterval?: number | null\n  useMutationObserver?: boolean\n  rootMargin?: string\n  threshold?: number | number[]\n  initialIsIntersecting?: boolean\n}\n\nexport interface IntersectionObserverBounds {\n  readonly height: number\n  readonly width: number\n  readonly top: number\n  readonly left: number\n  readonly right: number\n  readonly bottom: number\n}\n\nexport interface MockIntersectionObserverEntry {\n  readonly time: number | null\n  readonly rootBounds: IntersectionObserverBounds | null\n  readonly boundingClientRect: IntersectionObserverBounds | null\n  readonly intersectionRect: IntersectionObserverBounds | null\n  readonly intersectionRatio: number | null\n  readonly target: HTMLElement | null\n  readonly isIntersecting: boolean\n}\n\nexport default useIntersectionObserver\n"],"names":["intersectionRatio","margin","value","unit","observer","_checkForIntersections","target","isTargetAlreadyObserved","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","ownerDocument","filter","_unmonitorIntersections","length","_unregisterInstance","_unmonitorAllIntersections","records","_queuedEntries","slice","t","i","a","isNaN","opt_threshold","threshold","Array","isArray","sort","parts","exec","parseFloat","opt_rootMargin","marginString","margins","split","map","unsubscribes","_monitoringUnsubscribes","_monitoringDocuments","rect","_rootMarginValues","width","height","newRect","top","right","bottom","left","oldEntry","newEntry","oldRatio","isIntersecting","newRatio","thresholds","now","window","performance","throttle","fn","timeout","timer","setTimeout","addEvent","node","event","opt_useCapture","addEventListener","attachEvent","removeEvent","removeEventListener","detatchEvent","computeRectIntersection","rect1","rect2","Math","max","min","getEmptyRect","ensureDOMRect","y","x","convertFromParentRect","parentBoundingRect","parentIntersectionRect","getFrameElement","doc","defaultView","frameElement","e","IntersectionObserverEntry","prototype","Object","defineProperty","get","document","registry","crossOriginUpdater","crossOriginRect","time","rootBounds","boundingClientRect","intersectionRect","targetRect","targetArea","intersectionArea","Number","toFixed","IntersectionObserver","callback","opt_options","options","root","bind","THROTTLE_TIMEOUT","_callback","_parseRootMargin","rootMargin","_initThresholds","join","POLL_INTERVAL","USE_MUTATION_OBSERVER","forEach","_setupCrossOriginUpdater","_resetCrossOriginUpdater","observe","unobserve","disconnect","takeRecords","win","indexOf","monitoringInterval","domObserver","setInterval","MutationObserver","attributes","childList","characterData","subtree","clearInterval","frame","index","rootDoc","hasDependentTargets","itemDoc","unsubscribe","splice","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","_computeTargetAndRootIntersection","_hasCrossedThreshold","getComputedStyle","display","parent","getParentNode","atRoot","parentRect","parentComputedStyle","frameRect","frameIntersect","body","documentElement","overflow","html","clientWidth","clientHeight","_expandRectByRootMargin","containsDeep","el","err","child","parentNode","host","assignedSlot","usePassiveLayoutEffect","React","createElement","useIntersectionObserver","pollInterval","useMutationObserver","initialIsIntersecting","setEntry","getIntersectionObserver","setObserver","JSON","stringify","useLayoutEffect","targetEl","current","didUnsubscribe","entries","subscribe","createIntersectionObserver","callbacks","Set","getListeners","add","delete","_intersectionObserver","Map","keys","key","base","set"],"mappings":"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"}