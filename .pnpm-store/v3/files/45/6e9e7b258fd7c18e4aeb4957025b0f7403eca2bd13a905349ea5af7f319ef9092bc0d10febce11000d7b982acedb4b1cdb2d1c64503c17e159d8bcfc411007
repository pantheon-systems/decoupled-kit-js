{"version":3,"sources":["../../src/utils/fast-refresh-module.ts"],"names":["self","_gatsbyEvents","clearCompileError","push","action","clearRuntimeErrors","dismissOverlay","showCompileError","message","payload","showRuntimeErrors","errors","length","isWebpackCompileError","error","test","handleRuntimeError"],"mappings":";;;;;;;;;AAgBA;AACAA,IAAI,CAACC,aAAL,GAAqBD,IAAI,CAACC,aAAL,IAAsB,EAA3C;;AAEO,SAASC,iBAAT,GAAmC;AACxCF,EAAAA,IAAI,CAACC,aAAL,CAAmBE,IAAnB,CAAwB,CAAE,cAAF,EAAiB;AAAEC,IAAAA,MAAM,EAAG;AAAX,GAAjB,CAAxB;AACD;;AAEM,SAASC,kBAAT,CAA4BC,cAA5B,EAA2D;AAChE,MAAI,OAAOA,cAAP,KAA2B,WAA3B,IAAyCA,cAA7C,EAA6D;AAC3DN,IAAAA,IAAI,CAACC,aAAL,CAAmBE,IAAnB,CAAwB,CACrB,cADqB,EAEtB;AAAEC,MAAAA,MAAM,EAAG;AAAX,KAFsB,CAAxB;AAID;AACF;;AAEM,SAASG,gBAAT,CAA0BC,OAA1B,EAAyC;AAC9C,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAEDR,EAAAA,IAAI,CAACC,aAAL,CAAmBE,IAAnB,CAAwB,CACrB,cADqB,EAEtB;AACEC,IAAAA,MAAM,EAAG,oBADX;AAEEK,IAAAA,OAAO,EAAED;AAFX,GAFsB,CAAxB;AAOD;;AAEM,SAASE,iBAAT,CAA2BC,MAA3B,EAAyC;AAC9C,MAAI,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,MAAvB,EAA+B;AAC7B;AACD;;AAEDZ,EAAAA,IAAI,CAACC,aAAL,CAAmBE,IAAnB,CAAwB,CACrB,cADqB,EAEtB;AACEC,IAAAA,MAAM,EAAG,qBADX;AAEEK,IAAAA,OAAO,EAAEE;AAFX,GAFsB,CAAxB;AAOD;;AAEM,SAASE,qBAAT,CAA+BC,KAA/B,EAA+C;AACpD,SACE,uBAAuBC,IAAvB,CAA4BD,KAAK,CAACN,OAAlC,KACA,qBAAqBO,IAArB,CAA0BD,KAAK,CAACN,OAAhC,CAFF;AAID;;AAEM,SAASQ,kBAAT,CAA4BF,KAA5B,EAAyC;AAC9C,MAAIA,KAAK,IAAI,CAACD,qBAAqB,CAACC,KAAD,CAAnC,EAA4C;AAC1Cd,IAAAA,IAAI,CAACC,aAAL,CAAmBE,IAAnB,CAAwB,CACrB,cADqB,EAEtB;AACEC,MAAAA,MAAM,EAAG,sBADX;AAEEK,MAAAA,OAAO,EAAE,CAACK,KAAD;AAFX,KAFsB,CAAxB;AAOD;AACF","sourcesContent":["type Channel = \"FAST_REFRESH\"\ntype Event = [\n  Channel,\n  {\n    action: string\n    payload?: any\n  }\n]\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  interface Window {\n    _gatsbyEvents: Array<Event> | { push: (event: Event) => void }\n  }\n}\n\n// Use `self` here instead of `window` so it works in non-window environments (like Workers)\nself._gatsbyEvents = self._gatsbyEvents || []\n\nexport function clearCompileError(): void {\n  self._gatsbyEvents.push([`FAST_REFRESH`, { action: `CLEAR_COMPILE_ERROR` }])\n}\n\nexport function clearRuntimeErrors(dismissOverlay: boolean): void {\n  if (typeof dismissOverlay === `undefined` || dismissOverlay) {\n    self._gatsbyEvents.push([\n      `FAST_REFRESH`,\n      { action: `CLEAR_RUNTIME_ERRORS` },\n    ])\n  }\n}\n\nexport function showCompileError(message): void {\n  if (!message) {\n    return\n  }\n\n  self._gatsbyEvents.push([\n    `FAST_REFRESH`,\n    {\n      action: `SHOW_COMPILE_ERROR`,\n      payload: message,\n    },\n  ])\n}\n\nexport function showRuntimeErrors(errors): void {\n  if (!errors || !errors.length) {\n    return\n  }\n\n  self._gatsbyEvents.push([\n    `FAST_REFRESH`,\n    {\n      action: `SHOW_RUNTIME_ERRORS`,\n      payload: errors,\n    },\n  ])\n}\n\nexport function isWebpackCompileError(error): boolean {\n  return (\n    /Module [A-z ]+\\(from/.test(error.message) ||\n    /Cannot find module/.test(error.message)\n  )\n}\n\nexport function handleRuntimeError(error): void {\n  if (error && !isWebpackCompileError(error)) {\n    self._gatsbyEvents.push([\n      `FAST_REFRESH`,\n      {\n        action: `HANDLE_RUNTIME_ERROR`,\n        payload: [error],\n      },\n    ])\n  }\n}\n"],"file":"fast-refresh-module.js"}