{"version":3,"sources":["../../../src/redux/reducers/nodes-by-type.ts"],"names":["getNodesOfType","node","state","type","internal","has","set","Map","nodeByType","get","Error","nodesByTypeReducer","action","payload","nodesOfType","id","delete","size"],"mappings":";;;;;AAEA,MAAMA,cAAc,GAAG,CACrBC,IADqB,EAErBC,KAFqB,KAGQ;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAWF,IAAI,CAACG,QAAtB;;AACA,MAAI,CAACF,KAAK,CAACG,GAAN,CAAUF,IAAV,CAAL,EAAsB;AACpBD,IAAAA,KAAK,CAACI,GAAN,CAAUH,IAAV,EAAgB,IAAII,GAAJ,EAAhB;AACD;;AACD,QAAMC,UAAU,GAAGN,KAAK,CAACO,GAAN,CAAUN,IAAV,CAAnB;;AAEA,MAAI,CAACK,UAAL,EAAiB;AACf,UAAM,IAAIE,KAAJ,CACH,mIADG,CAAN;AAGD;;AAED,SAAOF,UAAP;AACD,CAjBD;;AAmBO,MAAMG,kBAAkB,GAAG,CAChCT,KAAkC,GAAG,IAAIK,GAAJ,EADL,EAEhCK,MAFgC,KAGA;AAChC,UAAQA,MAAM,CAACT,IAAf;AACE,SAAM,cAAN;AACE,aAAO,IAAII,GAAJ,EAAP;;AAEF,SAAM,aAAN;AAAoB;AAClB,cAAMN,IAAI,GAAGW,MAAM,CAACC,OAApB;AACA,cAAMC,WAAW,GAAGd,cAAc,CAACC,IAAD,EAAOC,KAAP,CAAlC;AACAY,QAAAA,WAAW,CAACR,GAAZ,CAAgBL,IAAI,CAACc,EAArB,EAAyBd,IAAzB;AACA,eAAOC,KAAP;AACD;;AAED,SAAM,mBAAN;AACA,SAAM,+BAAN;AAAsC;AACpC,cAAMD,IAAI,GAAGW,MAAM,CAACC,OAApB;AACA,cAAMC,WAAW,GAAGd,cAAc,CAACC,IAAD,EAAOC,KAAP,CAAlC;AACAY,QAAAA,WAAW,CAACR,GAAZ,CAAgBL,IAAI,CAACc,EAArB,EAAyBd,IAAzB;AACA,eAAOC,KAAP;AACD;;AAED,SAAM,aAAN;AAAoB;AAClB,cAAMD,IAAI,GAAGW,MAAM,CAACC,OAApB;AACA,YAAI,CAACZ,IAAL,EAAW,OAAOC,KAAP;AACX,cAAMY,WAAW,GAAGd,cAAc,CAACC,IAAD,EAAOC,KAAP,CAAlC;AACAY,QAAAA,WAAW,CAACE,MAAZ,CAAmBf,IAAI,CAACc,EAAxB;;AACA,YAAI,CAACD,WAAW,CAACG,IAAjB,EAAuB;AACrBf,UAAAA,KAAK,CAACc,MAAN,CAAaf,IAAI,CAACG,QAAL,CAAcD,IAA3B;AACD;;AACD,eAAOD,KAAP;AACD;;AAED;AACE,aAAOA,KAAP;AA/BJ;AAiCD,CArCM","sourcesContent":["import { IGatsbyNode, IGatsbyState, ActionsUnion } from \"../types\"\n\nconst getNodesOfType = (\n  node: IGatsbyNode,\n  state: IGatsbyState[\"nodesByType\"]\n): Map<string, IGatsbyNode> => {\n  const { type } = node.internal\n  if (!state.has(type)) {\n    state.set(type, new Map())\n  }\n  const nodeByType = state.get(type)\n\n  if (!nodeByType) {\n    throw new Error(\n      `An error occurred finding a node by it's type. This is likely a bug in gatsby. If you experience this error please open an issue.`\n    )\n  }\n\n  return nodeByType\n}\n\nexport const nodesByTypeReducer = (\n  state: IGatsbyState[\"nodesByType\"] = new Map(),\n  action: ActionsUnion\n): IGatsbyState[\"nodesByType\"] => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n      return new Map()\n\n    case `CREATE_NODE`: {\n      const node = action.payload\n      const nodesOfType = getNodesOfType(node, state)\n      nodesOfType.set(node.id, node)\n      return state\n    }\n\n    case `ADD_FIELD_TO_NODE`:\n    case `ADD_CHILD_NODE_TO_PARENT_NODE`: {\n      const node = action.payload\n      const nodesOfType = getNodesOfType(node, state)\n      nodesOfType.set(node.id, node)\n      return state\n    }\n\n    case `DELETE_NODE`: {\n      const node = action.payload\n      if (!node) return state\n      const nodesOfType = getNodesOfType(node, state)\n      nodesOfType.delete(node.id)\n      if (!nodesOfType.size) {\n        state.delete(node.internal.type)\n      }\n      return state\n    }\n\n    default:\n      return state\n  }\n}\n"],"file":"nodes-by-type.js"}