{"version":3,"sources":["../../../../src/bootstrap/load-plugins/utils/create-hash.ts"],"names":["createFileContentHash","root","globPattern","hash","crypto","createHash","files","glob","sync","nodir","forEach","filepath","update","fs","readFileSync","digest"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEO,SAASA,qBAAT,CACLC,IADK,EAELC,WAFK,EAGG;AACR,QAAMC,IAAI,GAAGC,gBAAOC,UAAP,CAAmB,KAAnB,CAAb;;AACA,QAAMC,KAAK,GAAGC,cAAKC,IAAL,CAAW,GAAEP,IAAK,IAAGC,WAAY,EAAjC,EAAoC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAApC,CAAd;;AAEAH,EAAAA,KAAK,CAACI,OAAN,CAAcC,QAAQ,IAAI;AACxBR,IAAAA,IAAI,CAACS,MAAL,CAAYC,YAAGC,YAAH,CAAgBH,QAAhB,CAAZ;AACD,GAFD;AAIA,SAAOR,IAAI,CAACY,MAAL,CAAa,KAAb,CAAP;AACD","sourcesContent":["import fs from \"fs\"\nimport crypto from \"crypto\"\nimport glob from \"glob\"\n\nexport function createFileContentHash(\n  root: string,\n  globPattern: string\n): string {\n  const hash = crypto.createHash(`md5`)\n  const files = glob.sync(`${root}/${globPattern}`, { nodir: true })\n\n  files.forEach(filepath => {\n    hash.update(fs.readFileSync(filepath))\n  })\n\n  return hash.digest(`hex`)\n}\n"],"file":"create-hash.js"}