{"version":3,"sources":["../../src/utils/get-cache.ts"],"names":["caches","Map","getCache","name","cache","get","GatsbyCacheLmdb","require","default","init","GatsbyCache","set"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,MAAMA,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AAEO,MAAMC,QAAQ,GAAIC,IAAD,IAA+B;AACrD,MAAIC,KAAK,GAAGJ,MAAM,CAACK,GAAP,CAAWF,IAAX,CAAZ;;AACA,MAAI,CAACC,KAAL,EAAY;AACV,QAAI,6BAAJ,EAAmB;AACjB,YAAME,eAAe,GAAGC,OAAO,CAAE,cAAF,CAAP,CAAwBC,OAAhD;;AACAJ,MAAAA,KAAK,GAAG,IAAIE,eAAJ,CAAoB;AAAEH,QAAAA;AAAF,OAApB,EAA8BM,IAA9B,EAAR;AACD,KAHD,MAGO;AACLL,MAAAA,KAAK,GAAG,IAAIM,cAAJ,CAAgB;AAAEP,QAAAA;AAAF,OAAhB,EAA0BM,IAA1B,EAAR;AACD;;AACDT,IAAAA,MAAM,CAACW,GAAP,CAAWR,IAAX,EAAiBC,KAAjB;AACD;;AACD,SAAOA,KAAP;AACD,CAZM","sourcesContent":["import GatsbyCache from \"./cache\"\nimport { isLmdbStore } from \"../datastore\"\n\nconst caches = new Map<string, GatsbyCache>()\n\nexport const getCache = (name: string): GatsbyCache => {\n  let cache = caches.get(name)\n  if (!cache) {\n    if (isLmdbStore()) {\n      const GatsbyCacheLmdb = require(`./cache-lmdb`).default\n      cache = new GatsbyCacheLmdb({ name }).init() as GatsbyCache\n    } else {\n      cache = new GatsbyCache({ name }).init()\n    }\n    caches.set(name, cache)\n  }\n  return cache\n}\n"],"file":"get-cache.js"}