{"version":3,"sources":["../../src/utils/report.ts"],"names":["CODES","WordPressFilters","BadResponse","RequestDenied","Authentication","Timeout","WordPress500ishError","SelfSignedCert","RemoteGraphQLError","MissingAppendedPath","SourcePluginCodeError","getErrorText","context","sourceMessage","ERROR_MAP","text","level","category"],"mappings":";;;;AAEO,MAAMA,KAAK,GAAG;AACnB;AACAC,EAAAA,gBAAgB,EAAG,QAFA;AAGnBC,EAAAA,WAAW,EAAG,QAHK;AAInBC,EAAAA,aAAa,EAAG,QAJG;AAKnBC,EAAAA,cAAc,EAAG,QALE;AAMnBC,EAAAA,OAAO,EAAG,QANS;AAOnBC,EAAAA,oBAAoB,EAAG,QAPJ;AAQnBC,EAAAA,cAAc,EAAG,QARE;;AAUnB;AACAC,EAAAA,kBAAkB,EAAG,QAXF;AAYnBC,EAAAA,mBAAmB,EAAG,QAZH;;AAcnB;AACAC,EAAAA,qBAAqB,EAAG;AAfL,CAAd;;;AAyBP,MAAMC,YAAY,GAAIC,OAAD,IAAoCA,OAAO,CAACC,aAAjE;;AAEO,MAAMC,SAAoB,GAAG;AAClC,GAACd,KAAK,CAACC,gBAAP,GAA0B;AACxBc,IAAAA,IAAI,EAAEJ,YADkB;AAExBK,IAAAA,KAAK,EAAG,OAFgB;AAGxBC,IAAAA,QAAQ,EAAG;AAHa,GADQ;AAMlC,GAACjB,KAAK,CAACE,WAAP,GAAqB;AACnBa,IAAAA,IAAI,EAAEJ,YADa;AAEnBK,IAAAA,KAAK,EAAG,OAFW;AAGnBC,IAAAA,QAAQ,EAAG;AAHQ,GANa;AAWlC,GAACjB,KAAK,CAACG,aAAP,GAAuB;AACrBY,IAAAA,IAAI,EAAEJ,YADe;AAErBK,IAAAA,KAAK,EAAG,OAFa;AAGrBC,IAAAA,QAAQ,EAAG;AAHU,GAXW;AAgBlC,GAACjB,KAAK,CAACI,cAAP,GAAwB;AACtBW,IAAAA,IAAI,EAAEJ,YADgB;AAEtBK,IAAAA,KAAK,EAAG,OAFc;AAGtBC,IAAAA,QAAQ,EAAG;AAHW,GAhBU;AAqBlC,GAACjB,KAAK,CAACK,OAAP,GAAiB;AACfU,IAAAA,IAAI,EAAEJ,YADS;AAEfK,IAAAA,KAAK,EAAG,OAFO;AAGfC,IAAAA,QAAQ,EAAG;AAHI,GArBiB;AA0BlC,GAACjB,KAAK,CAACQ,kBAAP,GAA4B;AAC1BO,IAAAA,IAAI,EAAEJ,YADoB;AAE1BK,IAAAA,KAAK,EAAG,OAFkB;AAG1BC,IAAAA,QAAQ,EAAG;AAHe,GA1BM;AA+BlC,GAACjB,KAAK,CAACS,mBAAP,GAA6B;AAC3BM,IAAAA,IAAI,EAAEJ,YADqB;AAE3BK,IAAAA,KAAK,EAAG,OAFmB;AAG3BC,IAAAA,QAAQ,EAAG;AAHgB,GA/BK;AAoClC,GAACjB,KAAK,CAACU,qBAAP,GAA+B;AAC7BK,IAAAA,IAAI,EAAEJ,YADuB;AAE7BK,IAAAA,KAAK,EAAG,OAFqB;AAG7BC,IAAAA,QAAQ,EAAG;AAHkB,GApCG;AAyClC,GAACjB,KAAK,CAACM,oBAAP,GAA8B;AAC5BS,IAAAA,IAAI,EAAEJ,YADsB;AAE5BK,IAAAA,KAAK,EAAG,OAFoB;AAG5BC,IAAAA,QAAQ,EAAG;AAHiB,GAzCI;AA8ClC,GAACjB,KAAK,CAACO,cAAP,GAAwB;AACtBQ,IAAAA,IAAI,EAAEJ,YADgB;AAEtBK,IAAAA,KAAK,EAAG,OAFc;AAGtBC,IAAAA,QAAQ,EAAG;AAHW;AA9CU,CAA7B","sourcesContent":["import { IErrorMapEntry } from \"gatsby-cli/lib/structured-errors/error-map\"\n\nexport const CODES = {\n  /* Fetch errors */\n  WordPressFilters: `111001`,\n  BadResponse: `111002`,\n  RequestDenied: `111004`,\n  Authentication: `111005`,\n  Timeout: `111006`,\n  WordPress500ishError: `111007`,\n  SelfSignedCert: `111008`,\n\n  /* GraphQL Errors */\n  RemoteGraphQLError: `112001`,\n  MissingAppendedPath: `112002`,\n\n  /* CodeErrors */\n  SourcePluginCodeError: `112003`,\n}\n\ninterface IErrorContext {\n  sourceMessage: string\n}\ninterface IErrorMap {\n  [code: string]: IErrorMapEntry\n}\n\nconst getErrorText = (context: IErrorContext): string => context.sourceMessage\n\nexport const ERROR_MAP: IErrorMap = {\n  [CODES.WordPressFilters]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `USER`,\n  },\n  [CODES.BadResponse]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `USER`,\n  },\n  [CODES.RequestDenied]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `USER`,\n  },\n  [CODES.Authentication]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `USER`,\n  },\n  [CODES.Timeout]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `USER`,\n  },\n  [CODES.RemoteGraphQLError]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `THIRD_PARTY`,\n  },\n  [CODES.MissingAppendedPath]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `THIRD_PARTY`,\n  },\n  [CODES.SourcePluginCodeError]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `SYSTEM`,\n  },\n  [CODES.WordPress500ishError]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `THIRD_PARTY`,\n  },\n  [CODES.SelfSignedCert]: {\n    text: getErrorText,\n    level: `ERROR`,\n    category: `THIRD_PARTY`,\n  },\n}\n"],"file":"report.js"}