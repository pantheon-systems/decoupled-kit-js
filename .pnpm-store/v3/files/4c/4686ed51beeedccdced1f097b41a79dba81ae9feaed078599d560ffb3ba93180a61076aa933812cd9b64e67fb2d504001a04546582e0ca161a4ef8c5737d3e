{
  "version": 3,
  "sources": ["../../src/types.ts"],
  "sourcesContent": ["import type { ITemplate } from \"codesandbox-import-util-types\";\n\nexport interface SandpackBundlerFile {\n  code: string;\n  readOnly?: boolean;\n}\n\nexport type SandpackBundlerFiles = Record<string, SandpackBundlerFile>;\n\nexport interface Module {\n  code: string;\n  path: string;\n}\n\nexport type Modules = Record<\n  string,\n  {\n    code: string;\n    path: string;\n  }\n>;\n\nexport type Dependencies = Record<string, string>;\n\nexport type ReactDevToolsMode = \"latest\" | \"legacy\";\n\nexport interface ModuleSource {\n  fileName: string;\n  compiledCode: string;\n  sourceMap: unknown | undefined;\n}\n\nexport enum SandpackLogLevel {\n  None = 0,\n  Error = 10,\n  Warning = 20,\n  Info = 30,\n  Debug = 40,\n}\n\nexport interface ErrorStackFrame {\n  columnNumber: number;\n  fileName: string;\n  functionName: string;\n  lineNumber: number;\n  _originalColumnNumber: number;\n  _originalFileName: string;\n  _originalFunctionName: string;\n  _originalLineNumber: number;\n  _originalScriptCode: Array<{\n    lineNumber: number;\n    content: string;\n    highlight: boolean;\n  }>;\n}\n\nexport interface TranspiledModule {\n  module: Module;\n  query: string;\n  source: ModuleSource | undefined;\n  assets: Record<string, ModuleSource>;\n  isEntry: boolean;\n  isTestFile: boolean;\n  childModules: string[];\n  /**\n   * All extra modules emitted by the loader\n   */\n  emittedAssets: ModuleSource[];\n  initiators: string[];\n  dependencies: string[];\n  asyncDependencies: string[];\n  transpilationDependencies: string[];\n  transpilationInitiators: string[];\n}\n\nexport interface BundlerState {\n  entry: string;\n  transpiledModules: Record<string, TranspiledModule>;\n}\n\nexport type ClientStatus =\n  | \"initializing\"\n  | \"installing-dependencies\"\n  | \"transpiling\"\n  | \"evaluating\"\n  | \"running-tests\"\n  | \"idle\";\n\nexport type ListenerFunction = (msg: SandpackMessage) => void;\nexport type UnsubscribeFunction = () => void;\n\nexport type Listen = (\n  listener: ListenerFunction,\n  clientId?: string\n) => UnsubscribeFunction;\nexport type Dispatch = (msg: SandpackMessage, clientId?: string) => void;\n\nexport interface SandpackError {\n  message: string;\n  line?: number;\n  column?: number;\n  path?: string;\n  title?: string;\n}\n\nexport interface SandpackErrorMessage {\n  title: string;\n  path: string;\n  message: string;\n  line: number;\n  column: number;\n  payload: {\n    frames?: ErrorStackFrame[];\n  };\n}\n\nexport interface BaseSandpackMessage {\n  type: string;\n  $id?: number;\n  codesandbox?: boolean;\n}\n\nexport type SandpackMessage = BaseSandpackMessage &\n  (\n    | {\n        type: \"initialized\";\n      }\n    | {\n        type: \"start\";\n        firstLoad?: boolean;\n      }\n    | {\n        type: \"status\";\n        status: ClientStatus;\n      }\n    | {\n        type: \"state\";\n        state: BundlerState;\n      }\n    | {\n        type: \"success\";\n      }\n    | ({\n        type: \"action\";\n        action: \"show-error\";\n      } & SandpackErrorMessage)\n    | {\n        type: \"action\";\n        action: \"notification\";\n        notificationType: \"error\";\n        title: string;\n      }\n    | {\n        type: \"done\";\n        compilatonError: boolean; // TODO: fix typo?\n      }\n    | {\n        type: \"urlchange\";\n        url: string;\n        back: boolean;\n        forward: boolean;\n      }\n    | {\n        type: \"resize\";\n        height: number;\n      }\n    | {\n        type: \"transpiler-context\";\n        data: Record<string, Record<string, unknown>>;\n      }\n    | {\n        type: \"compile\";\n        version: number;\n        isInitializationCompile?: boolean;\n        modules: Modules;\n        externalResources: string[];\n        hasFileResolver: boolean;\n        disableDependencyPreprocessing?: boolean;\n        template?: string | ITemplate;\n        showOpenInCodeSandbox: boolean;\n        showErrorScreen: boolean;\n        showLoadingScreen: boolean;\n        skipEval: boolean;\n        clearConsoleDisabled?: boolean;\n        reactDevTools?: ReactDevToolsMode;\n        logLevel?: SandpackLogLevel;\n      }\n    | {\n        type: \"refresh\";\n      }\n    | {\n        type: \"urlback\";\n      }\n    | {\n        type: \"urlforward\";\n      }\n    | {\n        type: \"get-transpiler-context\";\n      }\n    | {\n        type: \"activate-react-devtools\";\n      }\n  );\n"],
  "mappings": ";AAgCO,IAAK;AAAL,UAAK,mBAAL;AACL,gDAAO,KAAP;AACA,iDAAQ,MAAR;AACA,mDAAU,MAAV;AACA,gDAAO,MAAP;AACA,iDAAQ,MAAR;AAAA,GALU;",
  "names": []
}
