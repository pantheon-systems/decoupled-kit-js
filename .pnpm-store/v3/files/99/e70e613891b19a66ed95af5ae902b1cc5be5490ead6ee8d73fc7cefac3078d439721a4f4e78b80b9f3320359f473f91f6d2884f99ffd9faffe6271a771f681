{"version":3,"sources":["../../src/cache/json-file-store.ts"],"names":["promisify","require","fs","zlib","exports","write","path","data","options","externalBuffers","dataString","JSON","stringify","replacerFunction","_k","value","type","length","buffer","Buffer","from","push","index","size","Infinity","sign","Math","zipExtension","zip","deflate","writeFile","Promise","all","map","externalBuffer","read","compressedData","readFile","unzip","toString","parse","bufferReceiver","alloc","e","Error","replace","bufferCompressed","copy","fd","open","close","delete","unlink","i","err","code"],"mappings":"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","sourcesContent":["// Initial file from https://github.com/rolandstarke/node-cache-manager-fs-hash @ af52d2d\n/* !\nThe MIT License (MIT)\n\nCopyright (c) 2017 Roland Starke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nconst promisify = require(`util`).promisify\nconst fs = require(`fs`)\nconst zlib = require(`zlib`)\n\ninterface IExternalBuffer {\n  index: number\n  buffer: Buffer\n}\n\nexports.write = async function (path, data, options): Promise<void> {\n  const externalBuffers: Array<IExternalBuffer> = []\n  let dataString = JSON.stringify(data, function replacerFunction(_k, value) {\n    // Buffers searilize to {data: [...], type: \"Buffer\"}\n    if (\n      value &&\n      value.type === `Buffer` &&\n      value.data &&\n      value.data.length >=\n        1024 /* only save bigger Buffers external, small ones can be inlined */\n    ) {\n      const buffer = Buffer.from(value.data)\n      externalBuffers.push({\n        index: externalBuffers.length,\n        buffer: buffer,\n      })\n      return {\n        type: `ExternalBuffer`,\n        index: externalBuffers.length - 1,\n        size: buffer.length,\n      }\n    } else if (value === Infinity || value === -Infinity) {\n      return { type: `Infinity`, sign: Math.sign(value) }\n    } else {\n      return value\n    }\n  })\n\n  let zipExtension = ``\n  if (options.zip) {\n    zipExtension = `.gz`\n    dataString = await promisify(zlib.deflate)(dataString)\n  }\n  // save main json file\n  await promisify(fs.writeFile)(\n    path + `.json` + zipExtension,\n    dataString,\n    `utf8`\n  )\n\n  // save external buffers\n  await Promise.all(\n    externalBuffers.map(async function (externalBuffer) {\n      let buffer = externalBuffer.buffer\n      if (options.zip) {\n        buffer = await promisify(zlib.deflate)(buffer)\n      }\n      await promisify(fs.writeFile)(\n        path + `-` + externalBuffer.index + `.bin` + zipExtension,\n        buffer,\n        `utf8`\n      )\n    })\n  )\n}\n\nexports.read = async function (path, options): Promise<string> {\n  let zipExtension = ``\n  if (options.zip) {\n    zipExtension = `.gz`\n  }\n\n  // read main json file\n  let dataString\n  if (options.zip) {\n    const compressedData = await promisify(fs.readFile)(\n      path + `.json` + zipExtension\n    )\n    dataString = (await promisify(zlib.unzip)(compressedData)).toString()\n  } else {\n    dataString = await promisify(fs.readFile)(\n      path + `.json` + zipExtension,\n      `utf8`\n    )\n  }\n\n  const externalBuffers: Array<IExternalBuffer> = []\n  let data\n  try {\n    data = JSON.parse(dataString, function bufferReceiver(_k, value) {\n      if (value && value.type === `Buffer` && value.data) {\n        return Buffer.from(value.data)\n      } else if (\n        value &&\n        value.type === `ExternalBuffer` &&\n        typeof value.index === `number` &&\n        typeof value.size === `number`\n      ) {\n        // JSON.parse is sync so we need to return a buffer sync, we will fill the buffer later\n        const buffer = Buffer.alloc(value.size)\n        externalBuffers.push({\n          index: +value.index,\n          buffer: buffer,\n        })\n        return buffer\n      } else if (\n        value &&\n        value.type === `Infinity` &&\n        typeof value.sign === `number`\n      ) {\n        return Infinity * value.sign\n      } else {\n        return value\n      }\n    })\n  } catch (e) {\n    throw new Error(\n      \"json-file-store failed to JSON.parse this string: `\" +\n        dataString.replace(/\\n/g, `⏎`)\n    )\n  }\n\n  // read external buffers\n  await Promise.all(\n    externalBuffers.map(async function (externalBuffer) {\n      if (options.zip) {\n        const bufferCompressed = await promisify(fs.readFile)(\n          path + `-` + +externalBuffer.index + `.bin` + zipExtension\n        )\n        const buffer = await promisify(zlib.unzip)(bufferCompressed)\n        buffer.copy(externalBuffer.buffer)\n      } else {\n        const fd = await promisify(fs.open)(\n          path + `-` + +externalBuffer.index + `.bin` + zipExtension,\n          `r`\n        )\n        await promisify(fs.read)(\n          fd,\n          externalBuffer.buffer,\n          0,\n          externalBuffer.buffer.length,\n          0\n        )\n        await promisify(fs.close)(fd)\n      }\n    })\n  )\n  return data\n}\n\nexports.delete = async function (path, options): Promise<void> {\n  let zipExtension = ``\n  if (options.zip) {\n    zipExtension = `.gz`\n  }\n\n  await promisify(fs.unlink)(path + `.json` + zipExtension)\n\n  // delete binary files\n  try {\n    for (let i = 0; i < Infinity; i++) {\n      await promisify(fs.unlink)(path + `-` + i + `.bin` + zipExtension)\n    }\n  } catch (err) {\n    if (err.code === `ENOENT`) {\n      // every binary is deleted, we are done\n    } else {\n      throw err\n    }\n  }\n}\n"],"file":"json-file-store.js"}