{"version":3,"sources":["../../../../src/datastore/lmdb/updates/nodes-by-type.ts"],"names":["updateNodesByType","nodesByTypeDb","action","type","put","payload","internal","id","remove"],"mappings":";;;;;AAGO,SAASA,iBAAT,CACLC,aADK,EAELC,MAFK,EAGuB;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,aAAN;AACA,SAAM,mBAAN;AACA,SAAM,+BAAN;AAAsC;AACpC;AACA,eAAOF,aAAa,CAACG,GAAd,CAAkBF,MAAM,CAACG,OAAP,CAAeC,QAAf,CAAwBH,IAA1C,EAAgDD,MAAM,CAACG,OAAP,CAAeE,EAA/D,CAAP;AACD;;AACD,SAAM,aAAN;AAAoB;AAClB,eAAOL,MAAM,CAACG,OAAP,GACHJ,aAAa,CAACO,MAAd,CAAqBN,MAAM,CAACG,OAAP,CAAeC,QAAf,CAAwBH,IAA7C,EAAmDD,MAAM,CAACG,OAAP,CAAeE,EAAlE,CADG,GAEH,KAFJ;AAGD;AAXH;;AAaA,SAAO,KAAP;AACD","sourcesContent":["import { ActionsUnion } from \"../../../redux/types\"\nimport { ILmdbDatabases } from \"../../types\"\n\nexport function updateNodesByType(\n  nodesByTypeDb: ILmdbDatabases[\"nodesByType\"],\n  action: ActionsUnion\n): Promise<boolean> | boolean {\n  switch (action.type) {\n    case `CREATE_NODE`:\n    case `ADD_FIELD_TO_NODE`:\n    case `ADD_CHILD_NODE_TO_PARENT_NODE`: {\n      // nodesByType db uses dupSort, so `put` will effectively append an id\n      return nodesByTypeDb.put(action.payload.internal.type, action.payload.id)\n    }\n    case `DELETE_NODE`: {\n      return action.payload\n        ? nodesByTypeDb.remove(action.payload.internal.type, action.payload.id)\n        : false\n    }\n  }\n  return false\n}\n"],"file":"nodes-by-type.js"}