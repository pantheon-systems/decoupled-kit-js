{
  "version": 3,
  "sources": ["../../src/index.ts", "../../src/presets/Sandpack.tsx", "../../src/common/Layout.tsx", "../../src/contexts/themeContext.tsx", "../../src/utils/domUtils.ts", "../../src/utils/stringUtils.ts", "../../src/themes/index.ts", "../../src/hooks/useSandpack.ts", "../../src/contexts/sandpackContext.tsx", "../../src/utils/sandpackUtils.ts", "../../src/templates/angular.ts", "../../src/templates/react.ts", "../../src/templates/react-typescript.ts", "../../src/templates/svelte.ts", "../../src/templates/vanilla.ts", "../../src/templates/vanilla-typescript.ts", "../../src/templates/vue.ts", "../../src/templates/vue3.ts", "../../src/templates/index.tsx", "../../src/components/CodeEditor/index.tsx", "../../src/common/RunButton.tsx", "../../src/icons/index.tsx", "../../src/common/Stack.tsx", "../../src/hooks/useActiveCode.ts", "../../src/components/FileTabs/index.tsx", "../../src/components/CodeEditor/CodeMirror.tsx", "../../src/hooks/useSandpackTheme.ts", "../../src/components/CodeEditor/highlightDecorators.ts", "../../src/components/CodeEditor/utils.ts", "../../src/components/CodeEditor/highlightInlineError.ts", "../../src/components/Preview/index.tsx", "../../src/common/ErrorOverlay.tsx", "../../src/hooks/useErrorMessage.ts", "../../src/common/LoadingOverlay.tsx", "../../src/hooks/useLoadingOverlayState.ts", "../../src/common/OpenInCodeSandboxButton/OpenInCodeSandboxButton.tsx", "../../src/common/OpenInCodeSandboxButton/UnstyledOpenInCodeSandboxButton.tsx", "../../src/components/Navigator/index.tsx", "../../src/components/Navigator/utils.tsx", "../../src/components/Preview/RefreshButton.tsx", "../../src/hooks/useSandpackNavigation.ts", "../../src/presets/SandpackRunner.tsx", "../../src/components/CodeViewer/index.tsx", "../../src/components/TranspiledCode/index.tsx", "../../src/hooks/useTranspiledCode.ts", "../../src/components/ReactDevTools/index.tsx"],
  "sourcesContent": ["/**\n * React components that give you the power of editable sandboxes that run in the browser. Powered by Sandpack, the online bundler used by CodeSandbox.\n *\n * ```jsx\n * import { Sandpack } from \"@codesandbox/sandpack-react\";\n * import \"@codesandbox/sandpack-react/dist/index.css\";\n *\n * <Sandpack template=\"react\" />;\n * ```\n * @module\n */\n\nexport * from \"./presets/\";\nexport * from \"./components\";\nexport * from \"./common\";\nexport * from \"./hooks\";\n\nexport * from \"./contexts/sandpackContext\";\nexport * from \"./contexts/themeContext\";\nexport * from \"./themes\";\nexport * from \"./types\";\nexport * from \"./icons\";\n\nexport * from \"@code-hike/classer\";\n", "import { ClasserProvider } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { SandpackLayout } from \"../common/Layout\";\nimport type { CodeEditorProps } from \"../components/CodeEditor\";\nimport { SandpackCodeEditor } from \"../components/CodeEditor\";\nimport type { PreviewProps } from \"../components/Preview\";\nimport { SandpackPreview } from \"../components/Preview\";\nimport type { SandpackProviderProps } from \"../contexts/sandpackContext\";\nimport { SandpackProvider } from \"../contexts/sandpackContext\";\nimport type {\n  SandpackCodeOptions,\n  FileResolver,\n  SandpackFiles,\n  SandpackInitMode,\n  SandpackPredefinedTemplate,\n  SandpackSetup,\n  SandpackThemeProp,\n} from \"../types\";\n\nexport interface SandpackProps {\n  files?: SandpackFiles;\n  template?: SandpackPredefinedTemplate;\n  customSetup?: SandpackSetup;\n\n  theme?: SandpackThemeProp;\n\n  options?: {\n    openPaths?: string[];\n    activePath?: string;\n\n    editorWidthPercentage?: number;\n    editorHeight?: React.CSSProperties[\"height\"];\n    classes?: Record<string, string>;\n\n    showNavigator?: boolean;\n    showLineNumbers?: boolean;\n    showInlineErrors?: boolean;\n    showTabs?: boolean;\n    closableTabs?: boolean;\n    wrapContent?: boolean;\n    /**\n     * This provides a way to control how some components are going to\n     * be initialized on the page. The CodeEditor and the Preview components\n     * are quite expensive and might overload the memory usage, so this gives\n     * a certain control of when to initialize them.\n     */\n    initMode?: SandpackInitMode;\n    initModeObserverOptions?: IntersectionObserverInit;\n\n    bundlerURL?: string;\n    startRoute?: string;\n    skipEval?: boolean;\n    fileResolver?: FileResolver;\n    externalResources?: string[];\n\n    autorun?: boolean;\n    recompileMode?: \"immediate\" | \"delayed\";\n    recompileDelay?: number;\n    codeEditor?: SandpackCodeOptions;\n\n    /**\n     * This disables editing of content by the user in all files.\n     */\n    readOnly?: boolean;\n    /**\n     * Controls the visibility of Read-only label, which will only\n     * appears when `readOnly` is `true`\n     */\n    showReadOnly?: boolean;\n  };\n}\n\n/**\n * @category Presets\n */\nexport const Sandpack: React.FC<SandpackProps> = (props) => {\n  // Combine files with customSetup to create the user input structure\n  const userInputSetup = props.files\n    ? {\n        ...props.customSetup,\n        files: {\n          ...props.customSetup?.files,\n          ...props.files,\n        },\n      }\n    : props.customSetup;\n\n  const previewOptions: PreviewProps = {\n    showNavigator: props.options?.showNavigator,\n  };\n\n  const codeEditorOptions: CodeEditorProps = {\n    showTabs: props.options?.showTabs,\n    showLineNumbers: props.options?.showLineNumbers,\n    showInlineErrors: props.options?.showInlineErrors,\n    wrapContent: props.options?.wrapContent,\n    closableTabs: props.options?.closableTabs,\n    initMode: props.options?.initMode,\n    extensions: props.options?.codeEditor?.extensions,\n    extensionsKeymap: props.options?.codeEditor?.extensionsKeymap,\n    readOnly: props.options?.readOnly,\n    showReadOnly: props.options?.showReadOnly,\n  };\n\n  const providerOptions: SandpackProviderProps = {\n    openPaths: props.options?.openPaths,\n    activePath: props.options?.activePath,\n    recompileMode: props.options?.recompileMode,\n    recompileDelay: props.options?.recompileDelay,\n    autorun: props.options?.autorun ?? true,\n    bundlerURL: props.options?.bundlerURL,\n    startRoute: props.options?.startRoute,\n    skipEval: props.options?.skipEval,\n    fileResolver: props.options?.fileResolver,\n    initMode: props.options?.initMode,\n    initModeObserverOptions: props.options?.initModeObserverOptions,\n    externalResources: props.options?.externalResources,\n  };\n\n  // Parts are set as `flex` values, so they set the flex shrink/grow\n  // Cannot use width percentages as it doesn't work with\n  // the automatic layout break when the component is under 700px\n  const editorPart = props.options?.editorWidthPercentage || 50;\n  const previewPart = 100 - editorPart;\n  const editorHeight = props.options?.editorHeight;\n\n  return (\n    <SandpackProvider\n      customSetup={userInputSetup}\n      template={props.template}\n      {...providerOptions}\n    >\n      <ClasserProvider classes={props.options?.classes}>\n        <SandpackLayout theme={props.theme}>\n          <SandpackCodeEditor\n            {...codeEditorOptions}\n            customStyle={{\n              height: editorHeight,\n              flexGrow: editorPart,\n              flexShrink: editorPart,\n              minWidth: 700 * (editorPart / (previewPart + editorPart)),\n            }}\n          />\n          <SandpackPreview\n            {...previewOptions}\n            customStyle={{\n              height: editorHeight,\n              flexGrow: previewPart,\n              flexShrink: previewPart,\n              minWidth: 700 * (previewPart / (previewPart + editorPart)),\n            }}\n          />\n        </SandpackLayout>\n      </ClasserProvider>\n    </SandpackProvider>\n  );\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { SandpackThemeProvider } from \"../contexts/themeContext\";\nimport { useSandpack } from \"../hooks/useSandpack\";\nimport type { SandpackThemeProp } from \"../types\";\n\nexport interface SandpackLayoutProps extends React.HtmlHTMLAttributes<unknown> {\n  theme?: SandpackThemeProp;\n}\n\n/**\n * @category Theme\n */\nexport const SandpackLayout: React.FC<SandpackLayoutProps> = ({\n  children,\n  theme,\n  ...props\n}) => {\n  const { sandpack } = useSandpack();\n  const c = useClasser(\"sp\");\n\n  return (\n    <SandpackThemeProvider theme={theme}>\n      <div ref={sandpack.lazyAnchorRef} className={c(\"layout\")} {...props}>\n        {children}\n      </div>\n    </SandpackThemeProvider>\n  );\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { createThemeObject, defaultLight } from \"../themes\";\nimport type { SandpackTheme, SandpackThemeProp } from \"../types\";\nimport { injectThemeStyleSheet } from \"../utils/domUtils\";\n\n/**\n * @hidden\n */\nconst SandpackThemeContext = React.createContext<{\n  theme: SandpackTheme;\n  id: string;\n}>({\n  theme: defaultLight,\n  id: \"light\",\n});\n\n/**\n * @category Theme\n */\nconst SandpackThemeProvider: React.FC<{\n  theme?: SandpackThemeProp;\n}> = (props) => {\n  const { theme, id } = createThemeObject(props.theme);\n  const c = useClasser(\"sp\");\n  // If theme is not explicitly set, don't inject any stylesheet\n  if (props.theme) {\n    injectThemeStyleSheet(theme, id);\n  }\n\n  return (\n    <SandpackThemeContext.Provider\n      value={{\n        theme,\n        id,\n      }}\n    >\n      <div className={c(\"wrapper\", id)}>{props.children}</div>\n    </SandpackThemeContext.Provider>\n  );\n};\n\n/**\n * @hidden\n */\nconst SandpackThemeConsumer = SandpackThemeContext.Consumer;\n\nexport { SandpackThemeProvider, SandpackThemeConsumer, SandpackThemeContext };\n", "import { getThemeStyleSheet } from \"../themes\";\nimport type { SandpackTheme } from \"../types\";\n\nexport const injectThemeStyleSheet = (\n  theme: SandpackTheme,\n  themeId: string\n): void => {\n  if (typeof document !== \"undefined\") {\n    const existingStyleTagForTheme = document.head.querySelector(\n      `style[data-sandpack-theme-id=${themeId}]`\n    );\n\n    if (!existingStyleTagForTheme) {\n      const styleTag = document.createElement(\"style\");\n      styleTag.setAttribute(\"data-sandpack-theme-id\", themeId);\n      styleTag.textContent = getThemeStyleSheet(theme, themeId);\n      document.head.appendChild(styleTag);\n    }\n  }\n};\n\nconst QUERY = \"(prefers-color-scheme: dark)\";\nconst isRenderingOnServer = typeof window === \"undefined\";\n\nexport const getDarkModePreference = (): boolean => {\n  return isRenderingOnServer ? false : window.matchMedia(QUERY).matches;\n};\n", "export const getFileName = (filePath: string): string => {\n  const lastIndexOfSlash = filePath.lastIndexOf(\"/\");\n  return filePath.slice(lastIndexOfSlash + 1);\n};\n\nexport const calculateNearestUniquePath = (\n  currentPath: string,\n  otherPaths: string[]\n): string => {\n  const currentPathParts = (\n    currentPath[0] === \"/\" ? currentPath.slice(1) : currentPath\n  ).split(\"/\");\n  const resultPathParts: string[] = [];\n\n  // If path is on root, there are no parts to loop through\n  if (currentPathParts.length === 1) {\n    resultPathParts.unshift(currentPathParts[0]);\n  } else {\n    // Loop over all other paths to find a unique path\n    for (let fileIndex = 0; fileIndex < otherPaths.length; fileIndex++) {\n      // We go over each part of the path from end to start to find the closest unique directory\n      const otherPathParts = otherPaths[fileIndex].split(\"/\");\n      for (\n        let partsFromEnd = 1;\n        partsFromEnd <= currentPathParts.length;\n        partsFromEnd++\n      ) {\n        const currentPathPart =\n          currentPathParts[currentPathParts.length - partsFromEnd];\n        const otherPathPart =\n          otherPathParts[otherPathParts.length - partsFromEnd];\n\n        // If this part hasn't been added to the result path, we add it here\n        if (resultPathParts.length < partsFromEnd) {\n          resultPathParts.unshift(currentPathPart);\n        }\n\n        // If this part is different between the current path and other path we break\n        // as from this moment the current path is unique compared to this other path\n        if (currentPathPart !== otherPathPart) {\n          break;\n        }\n      }\n    }\n  }\n\n  // Add `..` if this is a relative path\n  if (resultPathParts.length < currentPathParts.length) {\n    resultPathParts.unshift(\"..\");\n  }\n\n  // Join the result path parts into a path string\n  return resultPathParts.join(\"/\");\n};\n\nexport const hexToRGB = (\n  hex: string\n): { red: number; green: number; blue: number } => {\n  let r = \"0\";\n  let g = \"0\";\n  let b = \"0\";\n\n  if (hex.length === 4) {\n    r = \"0x\" + hex[1] + hex[1];\n    g = \"0x\" + hex[2] + hex[2];\n    b = \"0x\" + hex[3] + hex[3];\n  } else if (hex.length === 7) {\n    r = \"0x\" + hex[1] + hex[2];\n    g = \"0x\" + hex[3] + hex[4];\n    b = \"0x\" + hex[5] + hex[6];\n  }\n\n  return {\n    red: +r,\n    green: +g,\n    blue: +b,\n  };\n};\n\nexport const hexToCSSRGBa = (hex: string, alpha: number): string => {\n  if (hex.startsWith(\"#\") && (hex.length === 4 || hex.length === 7)) {\n    const { red, green, blue } = hexToRGB(hex);\n    return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n  }\n\n  return hex;\n};\n\n// Checks both rgb and hex colors for contrast and returns true if the color is in the dark spectrum\nexport const isDarkColor = (color: string): boolean => {\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  if (color.startsWith(\"#\")) {\n    if (color.length < 7) {\n      return true;\n    }\n\n    r = parseInt(color.substr(1, 2), 16);\n    g = parseInt(color.substr(3, 2), 16);\n    b = parseInt(color.substr(5, 2), 16);\n  } else {\n    const rgbValues = color\n      .replace(\"rgb(\", \"\")\n      .replace(\"rgba(\", \"\")\n      .replace(\")\", \"\")\n      .split(\",\");\n    if (rgbValues.length < 3) {\n      return true;\n    }\n\n    r = parseInt(rgbValues[0], 10);\n    g = parseInt(rgbValues[1], 10);\n    b = parseInt(rgbValues[2], 10);\n  }\n\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  return yiq < 128;\n};\n\nexport const generateRandomId = (): string =>\n  Math.floor(Math.random() * 10000).toString();\n", "import type {\n  SandpackTheme,\n  SandpackPredefinedTheme,\n  SandpackSyntaxStyle,\n  SandpackThemeProp,\n} from \"../types\";\nimport { getDarkModePreference } from \"../utils/domUtils\";\nimport { hexToCSSRGBa } from \"../utils/stringUtils\";\n\n/**\n * @category Theme\n */\nexport const defaultLight: SandpackTheme = {\n  palette: {\n    activeText: \"#1f2933\",\n    defaultText: \"#757678\",\n    inactiveText: \"#e4e7eb\",\n    activeBackground: \"#e4e7eb\",\n    defaultBackground: \"#f8f9fb\",\n    inputBackground: \"#ffffff\",\n    accent: \"#64D2FF\",\n    errorBackground: \"#ffcdca\",\n    errorForeground: \"#811e18\",\n  },\n  syntax: {\n    plain: \"#151515\",\n    comment: { color: \"#999\", fontStyle: \"italic\" },\n    keyword: \"#0971F1\",\n    tag: \"#0971F1\",\n    punctuation: \"#151515\",\n    definition: \"#151515\",\n    property: \"#151515\",\n    static: \"#FF453A\",\n    string: \"#BF5AF2\",\n  },\n  typography: {\n    bodyFont:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    monoFont:\n      '\"Fira Mono\", \"DejaVu Sans Mono\", Menlo, Consolas, \"Liberation Mono\", Monaco, \"Lucida Console\", monospace',\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n};\n\n/**\n * @category Theme\n */\nexport const defaultDark: SandpackTheme = {\n  palette: {\n    activeText: \"#FFFFFF\",\n    defaultText: \"#999999\",\n    inactiveText: \"#343434\",\n    activeBackground: \"#343434\",\n    defaultBackground: \"#040404\",\n    inputBackground: \"#242424\",\n    accent: \"#6caedd\",\n    errorBackground: \"#ffcdca\",\n    errorForeground: \"#811e18\",\n  },\n  syntax: {\n    plain: \"#FFFFFF\",\n    comment: { color: \"#757575\", fontStyle: \"italic\" },\n    keyword: \"#77B7D7\",\n    tag: \"#DFAB5C\",\n    punctuation: \"#ffffff\",\n    definition: \"#86D9CA\",\n    property: \"#77B7D7\",\n    static: \"#C64640\",\n    string: \"#977CDC\",\n  },\n  typography: {\n    bodyFont:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    monoFont:\n      '\"Fira Mono\", \"DejaVu Sans Mono\", Menlo, Consolas, \"Liberation Mono\", Monaco, \"Lucida Console\", monospace',\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n};\n\n/**\n * @category Theme\n */\nexport const sandpackDark: SandpackTheme = {\n  palette: {\n    activeText: \"#90e86f\",\n    defaultText: \"#5a5a5a\",\n    inactiveText: \"#1a1a1a\",\n    activeBackground: \"#272727\",\n    defaultBackground: \"#151515\",\n    inputBackground: \"#2e2e2e\",\n    accent: \"#90e86f\",\n    errorBackground: \"#dac1fb\",\n    errorForeground: \"#b08df8\",\n  },\n  syntax: {\n    plain: \"#f0fdaf\",\n    comment: { color: \"#757575\", fontStyle: \"italic\" },\n    keyword: \"#e5fd78\",\n    tag: \"#f0fdaf\",\n    punctuation: \"#ffffff\",\n    definition: \"#eeeeee\",\n    property: \"#90e86f\",\n    static: \"#ffffff\",\n    string: \"#dafecf\",\n  },\n  typography: {\n    bodyFont:\n      'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    monoFont:\n      '\"Fira Code\", \"Fira Mono\", \"DejaVu Sans Mono\", Menlo, Consolas, \"Liberation Mono\", Monaco, \"Lucida Console\", monospace',\n    fontSize: \"14px\",\n    lineHeight: \"1.6\",\n  },\n};\n\n/**\n * @category Theme\n */\nexport const aquaBlueTheme: SandpackTheme = {\n  palette: {\n    activeText: \"#1f2933\",\n    defaultText: \"#737373\",\n    inactiveText: \"#e4e7eb\",\n    activeBackground: \"#e4e7eb\",\n    defaultBackground: \"#f8f9fb\",\n    inputBackground: \"#ffffff\",\n    accent: \"#6caedd\",\n    errorBackground: \"#ffcdca\",\n    errorForeground: \"#811e18\",\n  },\n\n  syntax: {\n    plain: \"#1F2933\",\n    comment: { color: \"#A7B6C2\", fontStyle: \"italic\" },\n    keyword: \"#1A56DB\",\n    tag: \"#1A56DB\",\n    punctuation: \"#394b59\",\n    definition: \"#A23DAD\",\n    property: \"#14919B\",\n    static: \"#1A56DB\",\n    string: \"#1992D4\",\n  },\n  typography: {\n    bodyFont:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    monoFont:\n      '\"Fira Mono\", \"DejaVu Sans Mono\", Menlo, Consolas, \"Liberation Mono\", Monaco, \"Lucida Console\", monospace',\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n};\n\n/**\n * @category Theme\n */\nexport const githubLightTheme: SandpackTheme = {\n  palette: {\n    activeText: \"#24292e\",\n    defaultText: \"#959da5\",\n    inactiveText: \"#e4e7eb\",\n    activeBackground: \"#e4e7eb\",\n    defaultBackground: \"#ffffff\",\n    inputBackground: \"#ffffff\",\n    accent: \"#c8c8fa\",\n    errorBackground: \"#ffcdca\",\n    errorForeground: \"#811e18\",\n  },\n  syntax: {\n    keyword: \"#d73a49\",\n    property: \"#005cc5\",\n    plain: \"#24292e\",\n    static: \"#032f62\",\n    string: \"#032f62\",\n    definition: \"#6f42c1\",\n    punctuation: \"#24292e\",\n    tag: \"#22863a\",\n    comment: {\n      color: \"#6a737d\",\n      fontStyle: \"normal\",\n    },\n  },\n  typography: {\n    bodyFont:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    monoFont:\n      '\"Fira Mono\", \"DejaVu Sans Mono\", Menlo, Consolas, \"Liberation Mono\", Monaco, \"Lucida Console\", monospace',\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n};\n\n/**\n * @category Theme\n */\nexport const nightOwlTheme: SandpackTheme = {\n  palette: {\n    activeText: \"rgb(197, 228, 253)\",\n    defaultText: \"rgb(105, 136, 161)\",\n    inactiveText: \"rgb(78, 82, 97)\",\n    activeBackground: \"rgb(58, 62, 77)\",\n    defaultBackground: \"rgb(1, 22, 39)\",\n    inputBackground: \"rgb(11, 41, 66)\",\n    accent: \"#7fdbca\",\n    errorBackground: \"#ffcdca\",\n    errorForeground: \"#811e18\",\n  },\n  syntax: {\n    plain: \"#d6deeb\",\n    comment: { color: \"#999999\", fontStyle: \"italic\" },\n    keyword: { color: \"#c792ea\", fontStyle: \"italic\" },\n    tag: \"#7fdbca\",\n    punctuation: \"#7fdbca\",\n    definition: \"#82aaff\",\n    property: { color: \"#addb67\", fontStyle: \"italic\" },\n    static: \"#f78c6c\",\n    string: \"#ecc48d\",\n  },\n  typography: {\n    bodyFont:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    monoFont:\n      '\"Fira Mono\", \"DejaVu Sans Mono\", Menlo, Consolas, \"Liberation Mono\", Monaco, \"Lucida Console\", monospace',\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n};\n\n/**\n * @category Theme\n */\nexport const monokaiProTheme: SandpackTheme = {\n  palette: {\n    activeText: \"rgb(252, 252, 250)\",\n    defaultText: \"rgb(147, 146, 147)\",\n    inactiveText: \"#444344\",\n    activeBackground: \"#444344\",\n    defaultBackground: \"rgb(45, 42, 46)\",\n    inputBackground: \"rgb(25, 24, 26)\",\n    accent: \"rgb(255, 216, 102)\",\n    errorBackground: \"#ffcdca\",\n    errorForeground: \"#811e18\",\n  },\n  syntax: {\n    plain: \"rgb(252, 252, 250)\",\n    comment: { color: \"#757575\", fontStyle: \"italic\" },\n    keyword: \"rgb(255, 97, 136)\",\n    tag: \"rgb(120, 220, 232)\",\n    punctuation: \"rgb(147, 146, 147)\",\n    definition: \"rgb(169, 220, 118)\",\n    property: { color: \"rgb(120, 220, 232)\", fontStyle: \"italic\" },\n    static: \"rgb(171, 157, 242)\",\n    string: \"rgb(255, 216, 102)\",\n  },\n  typography: {\n    bodyFont:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    monoFont:\n      '\"Fira Mono\", \"DejaVu Sans Mono\", Menlo, Consolas, \"Liberation Mono\", Monaco, \"Lucida Console\", monospace',\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n};\n\n/**\n * @category Theme\n */\nexport const SANDPACK_THEMES: Record<SandpackPredefinedTheme, SandpackTheme> = {\n  light: defaultLight,\n  dark: defaultDark,\n  \"sandpack-dark\": sandpackDark,\n  \"night-owl\": nightOwlTheme,\n  \"aqua-blue\": aquaBlueTheme,\n  \"monokai-pro\": monokaiProTheme,\n  \"github-light\": githubLightTheme,\n};\n\n/**\n * @category Theme\n */\nexport const createThemeObject = (\n  inputTheme?: SandpackThemeProp\n): { id: string; theme: SandpackTheme } => {\n  const defaultLightTheme = defaultLight;\n  const defaultLightThemeKey = \"default\";\n\n  const defaultDarkTheme = defaultDark;\n  const defaultDarkThemeKey = \"default-dark\";\n\n  if (inputTheme === undefined) {\n    return {\n      theme: defaultLightTheme,\n      id: defaultLightThemeKey,\n    };\n  }\n\n  if (inputTheme === \"auto\") {\n    return getDarkModePreference()\n      ? {\n          theme: defaultDarkTheme,\n          id: defaultDarkThemeKey,\n        }\n      : {\n          theme: defaultLightTheme,\n          id: defaultLightThemeKey,\n        };\n  }\n\n  if (typeof inputTheme === \"string\") {\n    const predefinedTheme = SANDPACK_THEMES[inputTheme];\n    if (!predefinedTheme) {\n      throw new Error(`Invalid theme '${inputTheme}' provided.`);\n    }\n\n    return {\n      theme: predefinedTheme,\n      id: inputTheme ?? defaultLightThemeKey,\n    };\n  }\n\n  const theme = {\n    palette: { ...defaultLightTheme.palette, ...inputTheme?.palette },\n    syntax: { ...defaultLightTheme.syntax, ...inputTheme?.syntax },\n    typography: {\n      ...defaultLightTheme.typography,\n      ...inputTheme?.typography,\n    },\n  };\n\n  const id = simpleHashFunction(JSON.stringify(theme));\n\n  return {\n    theme,\n    id: `sp-${id}`,\n  };\n};\n\nconst simpleHashFunction = (str: string): number => {\n  let hash = 0;\n  for (let i = 0; i < str.length; hash &= hash) {\n    hash = 31 * hash + str.charCodeAt(i++);\n  }\n  return Math.abs(hash);\n};\n\n// inactive fg and active bg are interchangable to limit the number of colors in the theme\n// bg-default-overlay is determined by adjusting the alpha channel on the default bg to 80%\n/**\n * @category Theme\n */\nexport const getThemeStyleSheet = (\n  theme: SandpackTheme,\n  themeId: string\n): string => `\n.sp-wrapper.sp-${themeId} {\n  --sp-colors-fg-active: ${theme.palette.activeText};\n  --sp-colors-fg-default: ${theme.palette.defaultText};\n  --sp-colors-fg-inactive: ${\n    theme.palette.inactiveText || theme.palette.activeBackground\n  };\n  --sp-colors-bg-active: ${\n    theme.palette.activeBackground || theme.palette.inactiveText\n  };\n  --sp-colors-bg-default: ${theme.palette.defaultBackground};\n  --sp-colors-bg-default-overlay: ${hexToCSSRGBa(\n    theme.palette.defaultBackground,\n    0.8\n  )};\n  --sp-colors-bg-input: ${theme.palette.inputBackground};\n  --sp-colors-accent: ${theme.palette.accent};\n  --sp-colors-bg-error: ${theme.palette.errorBackground};\n  --sp-colors-fg-error: ${theme.palette.errorForeground};\n  --sp-font-size: ${theme.typography.fontSize};\n  --sp-font-body: ${theme.typography.bodyFont};\n  --sp-font-mono: ${theme.typography.monoFont};\n  --sp-line-height: ${theme.typography.lineHeight};\n`;\n\n/**\n * @category Theme\n */\nexport const getSyntaxStyle = (\n  token: string | SandpackSyntaxStyle\n): SandpackSyntaxStyle => {\n  if (typeof token === \"string\") {\n    return { color: token };\n  }\n\n  return token;\n};\n", "import * as React from \"react\";\n\nimport { SandpackReactContext } from \"../contexts/sandpackContext\";\nimport type {\n  SandpackClientDispatch,\n  SandpackClientListen,\n  SandpackState,\n} from \"../types\";\n\nexport interface UseSandpackReturnType {\n  sandpack: SandpackState;\n  dispatch: SandpackClientDispatch;\n  listen: SandpackClientListen;\n}\n\n/**\n * @category Hooks\n */\nexport function useSandpack(): UseSandpackReturnType {\n  const sandpack = React.useContext(SandpackReactContext);\n\n  if (sandpack === null) {\n    throw new Error(\n      `useSandpack can only be used inside components wrapped by 'SandpackProvider'`\n    );\n  }\n\n  const { dispatch, listen, ...rest } = sandpack;\n\n  return {\n    sandpack: { ...rest } as SandpackState,\n    dispatch,\n    listen,\n  };\n}\n", "import type {\n  BundlerState,\n  ListenerFunction,\n  SandpackBundlerFiles,\n  SandpackError,\n  SandpackMessage,\n  UnsubscribeFunction,\n  ReactDevToolsMode,\n  SandpackLogLevel,\n} from \"@codesandbox/sandpack-client\";\nimport {\n  SandpackClient,\n  extractErrorDetails,\n} from \"@codesandbox/sandpack-client\";\nimport isEqual from \"lodash.isequal\";\nimport * as React from \"react\";\n\nimport type {\n  SandpackContext,\n  SandboxEnvironment,\n  FileResolver,\n  SandpackStatus,\n  EditorState,\n  SandpackPredefinedTemplate,\n  SandpackSetup,\n  SandpackInitMode,\n} from \"../types\";\nimport { getSandpackStateFromProps } from \"../utils/sandpackUtils\";\nimport { generateRandomId } from \"../utils/stringUtils\";\n\n/**\n * @category Provider\n */\nconst Sandpack = React.createContext<SandpackContext | null>(null);\nconst BUNDLER_TIMEOUT = 30000; // 30 seconds timeout for the bundler to respond.\n\nexport interface SandpackProviderState {\n  files: SandpackBundlerFiles;\n  environment?: SandboxEnvironment;\n  activePath: string;\n  openPaths: string[];\n  startRoute?: string;\n  bundlerState?: BundlerState;\n  error: SandpackError | null;\n  sandpackStatus: SandpackStatus;\n  editorState: EditorState;\n  renderHiddenIframe: boolean;\n  initMode: SandpackInitMode;\n  reactDevTools?: ReactDevToolsMode;\n}\n\nexport interface SandpackProviderProps {\n  template?: SandpackPredefinedTemplate;\n  customSetup?: SandpackSetup;\n\n  // editor state (override values)\n  activePath?: string;\n  openPaths?: string[];\n\n  // execution and recompile\n  recompileMode?: \"immediate\" | \"delayed\";\n  recompileDelay?: number;\n  autorun?: boolean;\n\n  /**\n   * This provides a way to control how some components are going to\n   * be initialized on the page. The CodeEditor and the Preview components\n   * are quite expensive and might overload the memory usage, so this gives\n   * a certain control of when to initialize them.\n   */\n  initMode?: SandpackInitMode;\n  initModeObserverOptions?: IntersectionObserverInit;\n\n  // bundler options\n  bundlerURL?: string;\n  logLevel?: SandpackLogLevel;\n  startRoute?: string;\n  skipEval?: boolean;\n  fileResolver?: FileResolver;\n  externalResources?: string[];\n}\n\n/**\n * Main context provider that should wraps your entire component.\n * Use * [`useSandpack`](/api/react/#usesandpack) hook, which gives you the entire context object to play with.\n *\n * @category Provider\n * @noInheritDoc\n */\nclass SandpackProvider extends React.PureComponent<\n  SandpackProviderProps,\n  SandpackProviderState\n> {\n  static defaultProps = {\n    skipEval: false,\n    recompileMode: \"delayed\",\n    recompileDelay: 500,\n    autorun: true,\n  };\n\n  lazyAnchorRef: React.RefObject<HTMLDivElement>;\n\n  preregisteredIframes: Record<string, HTMLIFrameElement>;\n  clients: Record<string, SandpackClient>;\n\n  errorScreenRegistered: React.MutableRefObject<boolean>;\n  openInCSBRegistered: React.MutableRefObject<boolean>;\n  loadingScreenRegistered: React.MutableRefObject<boolean>;\n\n  intersectionObserver?: IntersectionObserver;\n  queuedListeners: Record<string, Record<string, ListenerFunction>>;\n  unsubscribeQueuedListeners: Record<\n    string,\n    Record<string, UnsubscribeFunction>\n  >;\n  unsubscribe?: UnsubscribeFunction;\n  debounceHook?: number;\n  timeoutHook: NodeJS.Timer | null = null;\n  initializeSandpackIframeHook: NodeJS.Timer | null = null;\n\n  constructor(props: SandpackProviderProps) {\n    super(props);\n\n    const { activePath, openPaths, files, environment } =\n      getSandpackStateFromProps(props);\n\n    this.state = {\n      files,\n      environment,\n      openPaths,\n      activePath,\n      startRoute: this.props.startRoute,\n      bundlerState: undefined,\n      error: null,\n      sandpackStatus: this.props.autorun ? \"initial\" : \"idle\",\n      editorState: \"pristine\",\n      renderHiddenIframe: false,\n      initMode: this.props.initMode || \"lazy\",\n      reactDevTools: undefined,\n    };\n\n    /**\n     * List of functions to be registered in the client, once it has been created\n     *\n     * Use cases:\n     * - Set a listener, but the client hasn't been created yet;\n     * - Set a listener, but the client has already been created;\n     * - A client already exists, set a new listener and then one more client has been created;\n     */\n    this.queuedListeners = { global: {} };\n    /**\n     * Global list of unsubscribe function for the listeners\n     */\n    this.unsubscribeQueuedListeners = {};\n    this.preregisteredIframes = {};\n    this.clients = {};\n\n    this.lazyAnchorRef = React.createRef<HTMLDivElement>();\n    this.errorScreenRegistered =\n      React.createRef<boolean>() as React.MutableRefObject<boolean>;\n    this.openInCSBRegistered =\n      React.createRef<boolean>() as React.MutableRefObject<boolean>;\n    this.loadingScreenRegistered =\n      React.createRef<boolean>() as React.MutableRefObject<boolean>;\n  }\n\n  /**\n   * @hidden\n   */\n  handleMessage = (msg: SandpackMessage): void => {\n    if (this.timeoutHook) {\n      clearTimeout(this.timeoutHook);\n    }\n\n    if (msg.type === \"state\") {\n      this.setState({ bundlerState: msg.state });\n    } else if (msg.type === \"done\" && !msg.compilatonError) {\n      this.setState({ error: null });\n    } else if (msg.type === \"action\" && msg.action === \"show-error\") {\n      this.setState({ error: extractErrorDetails(msg) });\n    } else if (\n      msg.type === \"action\" &&\n      msg.action === \"notification\" &&\n      msg.notificationType === \"error\"\n    ) {\n      this.setState({\n        error: { message: msg.title },\n      });\n    }\n  };\n\n  /**\n   * @hidden\n   */\n  registerReactDevTools = (value: ReactDevToolsMode): void => {\n    this.setState({ reactDevTools: value });\n  };\n\n  /**\n   * @hidden\n   */\n  updateCurrentFile = (newCode: string): void => {\n    this.updateFile(this.state.activePath, newCode);\n  };\n\n  /**\n   * @hidden\n   */\n  updateFile = (path: string, newCode: string): void => {\n    if (newCode === this.state.files[this.state.activePath]?.code) {\n      return;\n    }\n\n    const { files } = this.state;\n    const newFiles = {\n      ...files,\n      [path]: { code: newCode },\n    };\n\n    this.setState({ files: newFiles }, this.updateClients);\n  };\n\n  /**\n   * @hidden\n   */\n  updateClients = (): void => {\n    const { files, sandpackStatus } = this.state;\n    const { recompileMode, recompileDelay } = this.props;\n    if (sandpackStatus !== \"running\") {\n      return;\n    }\n\n    if (recompileMode === \"immediate\") {\n      Object.values(this.clients).forEach((client) => {\n        client.updatePreview({\n          files,\n        });\n      });\n    }\n\n    if (recompileMode === \"delayed\") {\n      window.clearTimeout(this.debounceHook);\n      this.debounceHook = window.setTimeout(() => {\n        Object.values(this.clients).forEach((client) => {\n          client.updatePreview({\n            files: this.state.files,\n          });\n        });\n      }, recompileDelay);\n    }\n  };\n\n  /**\n   * @hidden\n   */\n  initializeSandpackIframe(): void {\n    if (!this.props.autorun) {\n      return;\n    }\n\n    const observerOptions = this.props.initModeObserverOptions ?? {\n      rootMargin: `1000px 0px`,\n    };\n\n    if (this.intersectionObserver && this.lazyAnchorRef.current) {\n      this.intersectionObserver?.unobserve(this.lazyAnchorRef.current);\n    }\n\n    if (this.lazyAnchorRef.current && this.state.initMode === \"lazy\") {\n      // If any component registerd a lazy anchor ref component, use that for the intersection observer\n      this.intersectionObserver = new IntersectionObserver((entries) => {\n        if (entries.some((entry) => entry.isIntersecting)) {\n          // Delay a cycle so all hooks register the refs for the sub-components (open in csb, loading, error overlay)\n          this.initializeSandpackIframeHook = setTimeout(() => {\n            this.runSandpack();\n          }, 50);\n\n          if (this.lazyAnchorRef.current) {\n            this.intersectionObserver?.unobserve(this.lazyAnchorRef.current);\n          }\n        }\n      }, observerOptions);\n\n      this.intersectionObserver.observe(this.lazyAnchorRef.current);\n    } else if (\n      this.lazyAnchorRef.current &&\n      this.state.initMode === \"user-visible\"\n    ) {\n      this.intersectionObserver = new IntersectionObserver((entries) => {\n        if (entries.some((entry) => entry.isIntersecting)) {\n          // Delay a cycle so all hooks register the refs for the sub-components (open in csb, loading, error overlay)\n          this.initializeSandpackIframeHook = setTimeout(() => {\n            this.runSandpack();\n          }, 50);\n        } else {\n          if (this.initializeSandpackIframeHook) {\n            clearTimeout(this.initializeSandpackIframeHook);\n          }\n\n          Object.keys(this.clients).map(this.unregisterBundler);\n          this.unregisterAllClients();\n        }\n      }, observerOptions);\n\n      this.intersectionObserver.observe(this.lazyAnchorRef.current);\n    } else {\n      // else run the sandpack on mount, with a slight delay to allow all subcomponents to mount/register components\n      this.initializeSandpackIframeHook = setTimeout(\n        () => this.runSandpack(),\n        50\n      );\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  componentDidMount(): void {\n    this.initializeSandpackIframe();\n  }\n\n  /**\n   * @hidden\n   */\n  componentDidUpdate(prevProps: SandpackProviderProps): void {\n    /**\n     * Watch the changes on the initMode prop\n     */\n    if (prevProps.initMode !== this.props.initMode && this.props.initMode) {\n      this.setState(\n        { initMode: this.props.initMode },\n        this.initializeSandpackIframe\n      );\n    }\n\n    /**\n     * Custom setup derived from props\n     */\n    const { activePath, openPaths, files, environment } =\n      getSandpackStateFromProps(this.props);\n\n    /**\n     * What the changes on the customSetup props\n     */\n    if (\n      prevProps.template !== this.props.template ||\n      prevProps.activePath !== this.props.activePath ||\n      !isEqual(prevProps.openPaths, this.props.openPaths) ||\n      !isEqual(prevProps.customSetup, this.props.customSetup)\n    ) {\n      /* eslint-disable react/no-did-update-set-state */\n      this.setState({ activePath, openPaths, files, environment });\n\n      if (this.state.sandpackStatus !== \"running\") {\n        return;\n      }\n\n      Object.values(this.clients).forEach((client) =>\n        client.updatePreview({\n          files,\n          template: environment,\n        })\n      );\n    }\n\n    /**\n     * Watch the changes on editorState\n     */\n    const editorState = isEqual(files, this.state.files) ? \"pristine\" : \"dirty\";\n    if (editorState !== this.state.editorState) {\n      this.setState({ editorState });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  componentWillUnmount(): void {\n    if (typeof this.unsubscribe === \"function\") {\n      this.unsubscribe();\n    }\n\n    if (this.timeoutHook) {\n      clearTimeout(this.timeoutHook);\n    }\n\n    if (this.debounceHook) {\n      clearTimeout(this.debounceHook);\n    }\n\n    if (this.initializeSandpackIframeHook) {\n      clearTimeout(this.initializeSandpackIframeHook);\n    }\n\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  createClient = (\n    iframe: HTMLIFrameElement,\n    clientId: string\n  ): SandpackClient => {\n    const client = new SandpackClient(\n      iframe,\n      {\n        files: this.state.files,\n        template: this.state.environment,\n      },\n      {\n        externalResources: this.props.externalResources,\n        bundlerURL: this.props.bundlerURL,\n        logLevel: this.props.logLevel,\n        startRoute: this.props.startRoute,\n        fileResolver: this.props.fileResolver,\n        skipEval: this.props.skipEval,\n        showOpenInCodeSandbox: !this.openInCSBRegistered.current,\n        showErrorScreen: !this.errorScreenRegistered.current,\n        showLoadingScreen: !this.loadingScreenRegistered.current,\n        reactDevTools: this.state.reactDevTools,\n      }\n    );\n\n    /**\n     * Subscribe inside the context with the first client that gets instantiated.\n     * This subscription is for global states like error and timeout, so no need for a per client listen\n     * Also, set the timeout timer only when the first client is instantiated\n     */\n    if (typeof this.unsubscribe !== \"function\") {\n      this.unsubscribe = client.listen(this.handleMessage);\n\n      this.timeoutHook = setTimeout(() => {\n        this.setState({ sandpackStatus: \"timeout\" });\n      }, BUNDLER_TIMEOUT);\n    }\n\n    /**\n     * Register any potential listeners that subscribed before sandpack ran\n     */\n    if (this.queuedListeners[clientId]) {\n      Object.keys(this.queuedListeners[clientId]).forEach((listenerId) => {\n        const listener = this.queuedListeners[clientId][listenerId];\n        const unsubscribe = client.listen(listener) as () => void;\n        this.unsubscribeQueuedListeners[clientId][listenerId] = unsubscribe;\n      });\n\n      // Clear the queued listeners after they were registered\n      this.queuedListeners[clientId] = {};\n    }\n\n    /**\n     * Register global listeners\n     */\n    const globalListeners = Object.entries(this.queuedListeners.global);\n    globalListeners.forEach(([listenerId, listener]) => {\n      const unsubscribe = client.listen(listener) as () => void;\n      this.unsubscribeQueuedListeners[clientId][listenerId] = unsubscribe;\n\n      /**\n       * Important: Do not clean the global queue\n       * Instead of cleaning the queue, keep it there for the\n       * following clients that might be created\n       */\n    });\n\n    return client;\n  };\n\n  /**\n   * @hidden\n   */\n  runSandpack = (): void => {\n    Object.keys(this.preregisteredIframes).forEach((clientId) => {\n      const iframe = this.preregisteredIframes[clientId];\n      this.clients[clientId] = this.createClient(iframe, clientId);\n    });\n\n    this.setState({ sandpackStatus: \"running\" });\n  };\n\n  /**\n   * @hidden\n   */\n  registerBundler = (iframe: HTMLIFrameElement, clientId: string): void => {\n    if (this.state.sandpackStatus === \"running\") {\n      this.clients[clientId] = this.createClient(iframe, clientId);\n    } else {\n      this.preregisteredIframes[clientId] = iframe;\n    }\n  };\n\n  /**\n   * @hidden\n   */\n  unregisterBundler = (clientId: string): void => {\n    const client = this.clients[clientId];\n    if (client) {\n      client.cleanup();\n      client.iframe.contentWindow?.location.replace(\"about:blank\");\n      delete this.clients[clientId];\n    } else {\n      delete this.preregisteredIframes[clientId];\n    }\n\n    if (this.timeoutHook) {\n      clearTimeout(this.timeoutHook);\n    }\n\n    this.setState({ sandpackStatus: \"idle\" });\n  };\n\n  /**\n   * @hidden\n   */\n  unregisterAllClients = (): void => {\n    Object.keys(this.clients).map(this.unregisterBundler);\n\n    if (typeof this.unsubscribe === \"function\") {\n      this.unsubscribe();\n      this.unsubscribe = undefined;\n    }\n  };\n\n  /**\n   * @hidden\n   */\n  setActiveFile = (activePath: string): void => {\n    this.setState({ activePath });\n  };\n\n  /**\n   * @hidden\n   */\n  openFile = (path: string): void => {\n    this.setState(({ openPaths }) => {\n      const newPaths = openPaths.includes(path)\n        ? openPaths\n        : [...openPaths, path];\n\n      return {\n        activePath: path,\n        openPaths: newPaths,\n      };\n    });\n  };\n\n  /**\n   * @hidden\n   */\n  closeFile = (path: string): void => {\n    if (this.state.openPaths.length === 1) {\n      return;\n    }\n\n    this.setState(({ openPaths, activePath }) => {\n      const indexOfRemovedPath = openPaths.indexOf(path);\n      const newPaths = openPaths.filter((openPath) => openPath !== path);\n\n      return {\n        activePath:\n          path === activePath\n            ? indexOfRemovedPath === 0\n              ? openPaths[1]\n              : openPaths[indexOfRemovedPath - 1]\n            : activePath,\n        openPaths: newPaths,\n      };\n    });\n  };\n\n  /**\n   * @hidden\n   */\n  deleteFile = (path: string): void => {\n    this.setState(({ openPaths, files }) => {\n      const newPaths = openPaths.filter((openPath) => openPath !== path);\n      const newFiles = Object.keys(files).reduce(\n        (acc: SandpackBundlerFiles, filePath) => {\n          if (filePath === path) {\n            return acc;\n          }\n          acc[filePath] = files[filePath];\n          return acc;\n        },\n        {}\n      );\n\n      return {\n        openPaths: newPaths,\n        files: newFiles,\n      };\n    });\n    this.updateClients();\n  };\n\n  /**\n   * @hidden\n   */\n  dispatchMessage = (message: SandpackMessage, clientId?: string): void => {\n    if (this.state.sandpackStatus !== \"running\") {\n      console.warn(\"dispatch cannot be called while in idle mode\");\n      return;\n    }\n\n    if (clientId) {\n      this.clients[clientId].dispatch(message);\n    } else {\n      Object.values(this.clients).forEach((client) => {\n        client.dispatch(message);\n      });\n    }\n  };\n\n  /**\n   * @hidden\n   */\n  addListener = (\n    listener: ListenerFunction,\n    clientId?: string\n  ): UnsubscribeFunction => {\n    if (clientId) {\n      if (this.clients[clientId]) {\n        const unsubscribeListener = this.clients[clientId].listen(listener);\n\n        return unsubscribeListener;\n      } else {\n        // When listeners are added before the client is instantiated, they are stored with an unique id\n        // When the client is eventually instantiated, the listeners are registered on the spot\n        // Their unsubscribe functions are stored in unsubscribeQueuedListeners for future cleanup\n        const listenerId = generateRandomId();\n        this.queuedListeners[clientId] = this.queuedListeners[clientId] || {};\n        this.unsubscribeQueuedListeners[clientId] =\n          this.unsubscribeQueuedListeners[clientId] || {};\n\n        this.queuedListeners[clientId][listenerId] = listener;\n\n        const unsubscribeListener = (): void => {\n          if (this.queuedListeners[clientId][listenerId]) {\n            // unsubscribe was called before the client was instantiated\n            // common example - a component with autorun=false that unmounted\n            delete this.queuedListeners[clientId][listenerId];\n          } else if (this.unsubscribeQueuedListeners[clientId][listenerId]) {\n            // unsubscribe was called for a listener that got added before the client was instantiated\n            // call the unsubscribe function and remove it from memory\n            this.unsubscribeQueuedListeners[clientId][listenerId]();\n            delete this.unsubscribeQueuedListeners[clientId][listenerId];\n          }\n        };\n\n        return unsubscribeListener;\n      }\n    } else {\n      // Push to the **global** queue\n      const listenerId = generateRandomId();\n      this.queuedListeners.global[listenerId] = listener;\n\n      // Add to the current clients\n      const clients = Object.values(this.clients);\n      const currentClientUnsubscribeListeners = clients.map((client) =>\n        client.listen(listener)\n      );\n\n      const unsubscribeListener = (): void => {\n        const unsubscribeQueuedClients = Object.values(\n          this.unsubscribeQueuedListeners\n        );\n\n        // Unsubscribing all listener registered\n        unsubscribeQueuedClients.forEach((listenerOfClient) => {\n          const listenerFunctions = Object.values(listenerOfClient);\n          listenerFunctions.forEach((unsubscribe) => unsubscribe());\n        });\n\n        // Unsubscribing from the clients already created\n        currentClientUnsubscribeListeners.forEach((unsubscribe) =>\n          unsubscribe()\n        );\n      };\n\n      return unsubscribeListener;\n    }\n  };\n\n  /**\n   * @hidden\n   */\n  resetFile = (path: string): void => {\n    const { files } = getSandpackStateFromProps(this.props);\n\n    this.setState(\n      (prevState) => ({\n        files: { ...prevState.files, [path]: files[path] },\n      }),\n      this.updateClients\n    );\n  };\n\n  /**\n   * @hidden\n   */\n  resetAllFiles = (): void => {\n    const { files } = getSandpackStateFromProps(this.props);\n\n    this.setState({ files }, this.updateClients);\n  };\n\n  /**\n   * @hidden\n   */\n  _getSandpackState = (): SandpackContext => {\n    const {\n      files,\n      activePath,\n      openPaths,\n      startRoute,\n      bundlerState,\n      editorState,\n      error,\n      sandpackStatus,\n      environment,\n      initMode,\n    } = this.state;\n\n    return {\n      files,\n      environment,\n      openPaths,\n      activePath,\n      startRoute,\n      error,\n      bundlerState,\n      status: sandpackStatus,\n      editorState,\n      initMode,\n      clients: this.clients,\n      closeFile: this.closeFile,\n      deleteFile: this.deleteFile,\n      dispatch: this.dispatchMessage,\n      errorScreenRegisteredRef: this.errorScreenRegistered,\n      lazyAnchorRef: this.lazyAnchorRef,\n      listen: this.addListener,\n      loadingScreenRegisteredRef: this.loadingScreenRegistered,\n      openFile: this.openFile,\n      openInCSBRegisteredRef: this.openInCSBRegistered,\n      registerBundler: this.registerBundler,\n      resetAllFiles: this.resetAllFiles,\n      resetFile: this.resetFile,\n      runSandpack: this.runSandpack,\n      setActiveFile: this.setActiveFile,\n      unregisterBundler: this.unregisterBundler,\n      updateCurrentFile: this.updateCurrentFile,\n      updateFile: this.updateFile,\n      registerReactDevTools: this.registerReactDevTools,\n    };\n  };\n\n  /**\n   * @hidden\n   */\n  render(): React.ReactElement {\n    const { children } = this.props;\n\n    return (\n      <Sandpack.Provider value={this._getSandpackState()}>\n        {children}\n      </Sandpack.Provider>\n    );\n  }\n}\n\n/**\n * @category Provider\n */\nconst SandpackConsumer = Sandpack.Consumer;\n\nexport { SandpackProvider, SandpackConsumer, Sandpack as SandpackReactContext };\n", "import type {\n  SandpackBundlerFile,\n  SandpackBundlerFiles,\n} from \"@codesandbox/sandpack-client\";\nimport { addPackageJSONIfNeeded } from \"@codesandbox/sandpack-client\";\n\nimport type { SandpackProviderProps } from \"../contexts/sandpackContext\";\nimport { SANDBOX_TEMPLATES } from \"../templates\";\nimport type {\n  SandboxEnvironment,\n  SandboxTemplate,\n  SandpackPredefinedTemplate,\n  SandpackSetup,\n} from \"../types\";\n\nexport interface SandpackContextInfo {\n  activePath: string;\n  openPaths: string[];\n  files: Record<string, SandpackBundlerFile>;\n  environment: SandboxEnvironment;\n}\n\nexport const getSandpackStateFromProps = (\n  props: SandpackProviderProps\n): SandpackContextInfo => {\n  // Merge predefined template with custom setup\n  const projectSetup = getSetup(props.template, props.customSetup);\n\n  // openPaths and activePath override the setup flags\n  let openPaths = props.openPaths ?? [];\n  let activePath = props.activePath;\n\n  if (openPaths.length === 0 && props.customSetup?.files) {\n    const inputFiles = props.customSetup.files;\n\n    // extract open and active files from the custom input files\n    Object.keys(inputFiles).forEach((filePath) => {\n      const file = inputFiles[filePath];\n      if (typeof file === \"string\") {\n        openPaths.push(filePath);\n        return;\n      }\n\n      if (!activePath && file.active) {\n        activePath = filePath;\n        if (file.hidden === true) {\n          openPaths.push(filePath); // active file needs to be available even if someone sets it as hidden by accident\n        }\n      }\n\n      if (!file.hidden) {\n        openPaths.push(filePath);\n      }\n    });\n  }\n\n  if (openPaths.length === 0) {\n    // If no files are received, use the project setup / template\n    openPaths = Object.keys(projectSetup.files).reduce<string[]>((acc, key) => {\n      if (!projectSetup.files[key].hidden) {\n        acc.push(key);\n      }\n\n      return acc;\n    }, []);\n  }\n\n  // If no activePath is specified, use the first open file\n  if (!activePath || !projectSetup.files[activePath]) {\n    activePath = projectSetup.main || openPaths[0];\n  }\n\n  // If for whatever reason the active path was not set as open, set it\n  if (!openPaths.includes(activePath)) {\n    openPaths.push(activePath);\n  }\n\n  if (!projectSetup.files[activePath]) {\n    throw new Error(\n      `${activePath} was set as the active file but was not provided`\n    );\n  }\n\n  const files = addPackageJSONIfNeeded(\n    projectSetup.files,\n    projectSetup.dependencies || {},\n    projectSetup.devDependencies || {},\n    projectSetup.entry\n  );\n\n  const environment = projectSetup.environment;\n  const existOpenPath = openPaths.filter((file) => files[file]);\n\n  return { openPaths: existOpenPath, activePath, files, environment };\n};\n\n// The template is predefined (eg: react, vue, vanilla)\n// The setup can overwrite anything from the template (eg: files, dependencies, environment, etc.)\nexport const getSetup = (\n  template?: SandpackPredefinedTemplate,\n  inputSetup?: SandpackSetup\n): SandboxTemplate => {\n  // The input setup might have files in the simple form Record<string, string>\n  // so we convert them to the sandbox template format\n\n  const setup = createSetupFromUserInput(inputSetup);\n\n  if (!template) {\n    // If not input, default to vanilla\n    if (!setup) {\n      return SANDBOX_TEMPLATES.vanilla;\n    }\n\n    if (!setup.files || Object.keys(setup.files).length === 0) {\n      throw new Error(\n        `When using the customSetup without a template, you must pass at least one file for sandpack to work`\n      );\n    }\n\n    // If not template specified, use the setup entirely\n    return setup as SandboxTemplate;\n  }\n\n  const baseTemplate = SANDBOX_TEMPLATES[template];\n  if (!baseTemplate) {\n    throw new Error(`Invalid template '${template}' provided.`);\n  }\n\n  // If no setup, the template is used entirely\n  if (!setup) {\n    return baseTemplate;\n  }\n\n  // Merge the setup on top of the template\n  return {\n    files: { ...baseTemplate.files, ...setup.files },\n    dependencies: {\n      ...baseTemplate.dependencies,\n      ...setup.dependencies,\n    },\n    devDependencies: {\n      ...baseTemplate.devDependencies,\n      ...setup.devDependencies,\n    },\n    entry: setup.entry || baseTemplate.entry,\n    main: setup.main || baseTemplate.main,\n    environment: setup.environment || baseTemplate.environment,\n  };\n};\n\nexport const createSetupFromUserInput = (\n  setup?: SandpackSetup\n): Partial<SandboxTemplate> | null => {\n  if (!setup) {\n    return null;\n  }\n\n  if (!setup.files) {\n    return setup as Partial<SandboxTemplate>;\n  }\n\n  const { files } = setup;\n\n  const convertedFiles = Object.keys(files).reduce(\n    (acc: SandpackBundlerFiles, key) => {\n      if (typeof files[key] === \"string\") {\n        acc[key] = { code: files[key] as string };\n      } else {\n        acc[key] = files[key] as SandpackBundlerFile;\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  return {\n    ...setup,\n    files: convertedFiles,\n  };\n};\n", "import type { SandboxTemplate } from \"../types\";\n\nexport const ANGULAR_TEMPLATE: SandboxTemplate = {\n  files: {\n    \"/src/app/app.component.css\": {\n      code: `div {\n    text-align: center;\n}              \n`,\n    },\n    \"/src/app/app.component.html\": {\n      code: `<div>\n<h1>\n    {{ helloWorld }}\n</h1>\n</div>         \n`,\n    },\n    \"/src/app/app.component.ts\": {\n      code: `import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"app-root\",\n    templateUrl: \"./app.component.html\",\n     styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n    helloWorld = \"hello world\";\n}                   \n`,\n    },\n    \"/src/app/app.module.ts\": {\n      code: `import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n            \nimport { AppComponent } from \"./app.component\";\n            \n@NgModule({\n    declarations: [AppComponent],\n    imports: [BrowserModule],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}           \n`,\n    },\n    \"/src/index.html\": {\n      code: `<!doctype html>\n<html lang=\"en\">\n            \n<head>\n    <meta charset=\"utf-8\">\n    <title>Angular</title>\n    <base href=\"/\">\n            \n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n            \n<body>\n   <app-root></app-root>\n</body>\n            \n</html>\n`,\n    },\n    \"/src/main.ts\": {\n      code: `import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n            \nimport { AppModule } from \"./app/app.module\";            \n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n            \n`,\n    },\n    \"/src/polyfills.ts\": {\n      code: `import \"core-js/proposals/reflect-metadata\";   \n            import \"zone.js/dist/zone\";\n`,\n    },\n  },\n  dependencies: {\n    \"@angular/core\": \"^11.2.0\",\n    \"@angular/platform-browser\": \"^11.2.0\",\n    \"@angular/platform-browser-dynamic\": \"^11.2.0\",\n    \"@angular/common\": \"^11.2.0\",\n    \"@angular/compiler\": \"^11.2.0\",\n    \"zone.js\": \"0.11.3\",\n    \"core-js\": \"3.8.3\",\n    rxjs: \"6.6.3\",\n  },\n  entry: \"/src/main.ts\",\n  main: \"/src/app/app.component.ts\",\n  environment: \"angular-cli\",\n};\n", "import type { SandboxTemplate } from \"../types\";\n\nexport const REACT_TEMPLATE: SandboxTemplate = {\n  files: {\n    \"/App.js\": {\n      code: `export default function App() {\n  return <h1>Hello World</h1>\n}\n`,\n    },\n    \"/index.js\": {\n      code: `import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);`,\n    },\n    \"/styles.css\": {\n      code: `body {\n  font-family: sans-serif;\n  -webkit-font-smoothing: auto;\n  -moz-font-smoothing: auto;\n  -moz-osx-font-smoothing: grayscale;\n  font-smoothing: auto;\n  text-rendering: optimizeLegibility;\n  font-smooth: always;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n}\n\nh1 {\n  font-size: 1.5rem;\n}`,\n    },\n    \"/public/index.html\": {\n      code: `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>`,\n    },\n  },\n  dependencies: {\n    react: \"^17.0.0\",\n    \"react-dom\": \"^17.0.0\",\n    \"react-scripts\": \"^4.0.0\",\n  },\n  entry: \"/index.js\",\n  main: \"/App.js\",\n  environment: \"create-react-app\",\n};\n", "import type { SandboxTemplate } from \"../types\";\n\nexport const REACT_TYPESCRIPT_TEMPLATE: SandboxTemplate = {\n  files: {\n    \"tsconfig.json\": {\n      code: `{\n    \"include\": [\n        \"./**/*\"\n    ],\n    \"compilerOptions\": {\n        \"strict\": true,\n        \"esModuleInterop\": true,\n        \"lib\": [\n            \"dom\",\n            \"es2015\"\n        ],\n        \"jsx\": \"react-jsx\"\n    }\n}`,\n    },\n    \"/App.tsx\": {\n      code: `export default function App(): JSX.Element {\n  return <h1>Hello World</h1>\n}\n`,\n    },\n    \"/index.tsx\": {\n      code: `import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);`,\n    },\n    \"/styles.css\": {\n      code: `body {\n  font-family: sans-serif;\n  -webkit-font-smoothing: auto;\n  -moz-font-smoothing: auto;\n  -moz-osx-font-smoothing: grayscale;\n  font-smoothing: auto;\n  text-rendering: optimizeLegibility;\n  font-smooth: always;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n}\n\nh1 {\n  font-size: 1.5rem;\n}`,\n    },\n    \"/public/index.html\": {\n      code: `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>`,\n    },\n  },\n  dependencies: {\n    react: \"^17.0.0\",\n    \"react-dom\": \"^17.0.0\",\n    \"react-scripts\": \"^4.0.0\",\n  },\n  devDependencies: {\n    \"@types/react\": \"^17.0.0\",\n    \"@types/react-dom\": \"^17.0.0\",\n    typescript: \"^4.0.0\",\n  },\n  entry: \"/index.tsx\",\n  main: \"/App.tsx\",\n  environment: \"create-react-app\",\n};\n", "import type { SandboxTemplate } from \"../types\";\n\nexport const SVELTE_TEMPLATE: SandboxTemplate = {\n  environment: \"svelte\",\n  main: \"/index.js\",\n  entry: \"/index.js\",\n\n  files: {\n    \"/App.svelte\": {\n      code: `<style>\n  main {\n    font-family: sans-serif;\n    text-align: center;\n  }\n</style>\n\n<script>\n  let name = 'world';\n</script>\n\n<main>\n  <h1>Hello {name}!</h1>\n</main>`,\n    },\n    \"/index.js\": {\n      code: `import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body\n});\n\nexport default app;\n      `,\n    },\n    \"/public/index.html\": {\n      code: `<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n\n    <title>Svelte app</title>\n\n    <link rel=\"stylesheet\" href=\"public/bundle.css\" />\n  </head>\n\n  <body>\n    <script src=\"bundle.js\"></script>\n  </body>\n</html>`,\n    },\n  },\n  dependencies: {\n    svelte: \"^3.0.0\",\n  },\n};\n", "import type { SandboxTemplate } from \"../types\";\n\nexport const VANILLA_TEMPLATE: SandboxTemplate = {\n  files: {\n    \"/src/index.js\": {\n      code: `import \"./styles.css\";\n\ndocument.getElementById(\"app\").innerHTML = \\`\n<h1>Hello Vanilla!</h1>\n<div>\n  We use the same configuration as Parcel to bundle this sandbox, you can find more\n  info about Parcel \n  <a href=\"https://parceljs.org\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\n</div>\n\\`;\n`,\n    },\n    \"/src/styles.css\": {\n      code: `body {\n  font-family: sans-serif;\n}\n      `,\n    },\n    \"/index.html\": {\n      code: `<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Parcel Sandbox</title>\n  <meta charset=\"UTF-8\" />\n</head>\n\n<body>\n  <div id=\"app\"></div>\n\n  <script src=\"src/index.js\">\n  </script>\n</body>\n\n</html>`,\n    },\n  },\n  dependencies: {},\n  entry: \"/src/index.js\",\n  main: \"/src/index.js\",\n  environment: \"parcel\",\n};\n", "import type { SandboxTemplate } from \"../types\";\n\nexport const VANILLA_TYPESCRIPT_TEMPLATE: SandboxTemplate = {\n  files: {\n    \"tsconfig.json\": {\n      code: `{\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"module\": \"commonjs\",\n    \"jsx\": \"preserve\",\n    \"esModuleInterop\": true,\n    \"sourceMap\": true,\n    \"allowJs\": true,\n    \"lib\": [\n      \"es6\",\n      \"dom\"\n    ],\n    \"rootDir\": \"src\",\n    \"moduleResolution\": \"node\"\n  }\n}`,\n    },\n    \"/src/index.ts\": {\n      code: `import \"./styles.css\";\n\ndocument.getElementById(\"app\").innerHTML = \\`\n<h1>Hello Vanilla!</h1>\n<div>\n  We use the same configuration as Parcel to bundle this sandbox, you can find more\n  info about Parcel \n  <a href=\"https://parceljs.org\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\n</div>\n\\`;\n`,\n    },\n    \"/src/styles.css\": {\n      code: `body {\n  font-family: sans-serif;\n}\n      `,\n    },\n    \"/index.html\": {\n      code: `<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Parcel Sandbox</title>\n  <meta charset=\"UTF-8\" />\n</head>\n\n<body>\n  <div id=\"app\"></div>\n\n  <script src=\"src/index.ts\">\n  </script>\n</body>\n\n</html>`,\n    },\n  },\n  dependencies: {},\n  devDependencies: {\n    typescript: \"^4.0.0\",\n  },\n  entry: \"/src/index.ts\",\n  main: \"/src/index.ts\",\n  environment: \"parcel\",\n};\n", "import type { SandboxTemplate } from \"../types\";\n\nexport const VUE_TEMPLATE: SandboxTemplate = {\n  files: {\n    \"/src/App.vue\": {\n      code: `<template>\n  <main id=\"app\">\n    <h1>Hello world</h1>\n  </main>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n`,\n    },\n    \"/src/main.js\": {\n      code: `import Vue from \"vue\";\nimport App from \"./App.vue\";\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: h => h(App)\n}).$mount(\"#app\");\n`,\n    },\n    \"/public/index.html\": {\n      code: `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\" />\n    <title>codesandbox</title>\n  </head>\n  <body>\n    <noscript>\n      <strong\n        >We're sorry but codesandbox doesn't work properly without JavaScript\n        enabled. Please enable it to continue.</strong\n      >\n    </noscript>\n    <div id=\"app\"></div>\n    <!-- built files will be auto injected -->\n  </body>\n</html>\n`,\n    },\n  },\n  dependencies: {\n    vue: \"^2.6.11\",\n    \"@vue/cli-plugin-babel\": \"4.1.1\",\n  },\n  entry: \"/src/main.js\",\n  main: \"/src/App.vue\",\n  environment: \"vue-cli\",\n};\n", "import type { SandboxTemplate } from \"../types\";\n\nexport const VUE_TEMPLATE_3: SandboxTemplate = {\n  files: {\n    \"/src/App.vue\": {\n      code: `<template>\n  <main id=\"app\">\n    <h1>{{ helloWorld }}</h1>\n  </main>\n</template>\n                             \n<script>\nimport { ref } from \"vue\";\nexport default {\n   name: \"App\",\n   setup() {\n      const helloWorld = ref(\"hello world\");\n      return { helloWorld };\n   }\n};\n</script>\n                             \n<style>\n#app {\nfont-family: Avenir, Helvetica, Arial, sans-serif;\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\ntext-align: center;\ncolor: #2c3e50;\nmargin-top: 60px;\n}\n</style>   \n`,\n    },\n    \"/src/main.js\": {\n      code: `import { createApp } from 'vue'\nimport App from './App.vue'\n            \ncreateApp(App).mount('#app')            \n`,\n    },\n    \"/public/index.html\": {\n      code: `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n    <title>codesandbox</title>\n  </head>\n  <body>\n    <noscript>\n      <strong\n        >We're sorry but codesandbox doesn't work properly without JavaScript\n        enabled. Please enable it to continue.</strong\n      >\n    </noscript>\n    <div id=\"app\"></div>\n    <!-- built files will be auto injected -->\n  </body>\n</html>\n`,\n    },\n  },\n  dependencies: {\n    \"core-js\": \"^3.6.5\",\n    vue: \"^3.0.0-0\",\n    \"@vue/cli-plugin-babel\": \"4.5.0\",\n  },\n  entry: \"/src/main.js\",\n  main: \"/src/App.vue\",\n  environment: \"vue-cli\",\n};\n", "import type { SandpackPredefinedTemplate, SandboxTemplate } from \"../types\";\n\nimport { ANGULAR_TEMPLATE } from \"./angular\";\nimport { REACT_TEMPLATE } from \"./react\";\nimport { REACT_TYPESCRIPT_TEMPLATE } from \"./react-typescript\";\nimport { SVELTE_TEMPLATE } from \"./svelte\";\nimport { VANILLA_TEMPLATE } from \"./vanilla\";\nimport { VANILLA_TYPESCRIPT_TEMPLATE } from \"./vanilla-typescript\";\nimport { VUE_TEMPLATE } from \"./vue\";\nimport { VUE_TEMPLATE_3 } from \"./vue3\";\n\nexport const SANDBOX_TEMPLATES: Record<\n  SandpackPredefinedTemplate,\n  SandboxTemplate\n> = {\n  react: REACT_TEMPLATE,\n  \"react-ts\": REACT_TYPESCRIPT_TEMPLATE,\n  vue: VUE_TEMPLATE,\n  vanilla: VANILLA_TEMPLATE,\n  \"vanilla-ts\": VANILLA_TYPESCRIPT_TEMPLATE,\n  vue3: VUE_TEMPLATE_3,\n  angular: ANGULAR_TEMPLATE,\n  svelte: SVELTE_TEMPLATE,\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport type { Extension } from \"@codemirror/state\";\nimport type { KeyBinding } from \"@codemirror/view\";\nimport * as React from \"react\";\n\nimport { RunButton } from \"../../common/RunButton\";\nimport { SandpackStack } from \"../../common/Stack\";\nimport { useActiveCode } from \"../../hooks/useActiveCode\";\nimport { useSandpack } from \"../../hooks/useSandpack\";\nimport type { SandpackInitMode } from \"../../types\";\nimport { FileTabs } from \"../FileTabs\";\n\nimport { CodeMirror } from \"./CodeMirror\";\nimport type { CodeMirrorRef } from \"./CodeMirror\";\n\nexport type CodeEditorRef = CodeMirrorRef;\nexport interface CodeEditorProps {\n  customStyle?: React.CSSProperties;\n  showTabs?: boolean;\n  showLineNumbers?: boolean;\n  showInlineErrors?: boolean;\n  showRunButton?: boolean;\n  wrapContent?: boolean;\n  closableTabs?: boolean;\n  /**\n   * This provides a way to control how some components are going to\n   * be initialized on the page. The CodeEditor and the Preview components\n   * are quite expensive and might overload the memory usage, so this gives\n   * a certain control of when to initialize them.\n   */\n  initMode?: SandpackInitMode;\n  /**\n   * CodeMirror extensions for the editor state, which can\n   * provide extra features and functionalities to the editor component.\n   */\n  extensions?: Extension[];\n  /**\n   * Property to register CodeMirror extension keymap.\n   */\n  extensionsKeymap?: Array<readonly KeyBinding[]>;\n  id?: string;\n  /**\n   * This disables editing of the editor content by the user.\n   */\n  readOnly?: boolean;\n  /**\n   * Controls the visibility of Read-only label, which will only\n   * appears when `readOnly` is `true`\n   */\n  showReadOnly?: boolean;\n}\n\nexport { CodeMirror as CodeEditor };\n\n/**\n * @category Components\n */\nexport const SandpackCodeEditor = React.forwardRef<\n  CodeMirrorRef,\n  CodeEditorProps\n>(\n  (\n    {\n      customStyle,\n      showTabs,\n      showLineNumbers = false,\n      showInlineErrors = false,\n      showRunButton = true,\n      wrapContent = false,\n      closableTabs = false,\n      initMode,\n      extensions,\n      extensionsKeymap,\n      id,\n      readOnly,\n      showReadOnly,\n    },\n    ref\n  ) => {\n    const { sandpack } = useSandpack();\n    const { code, updateCode, readOnly: readOnlyFile } = useActiveCode();\n    const { activePath, status, editorState } = sandpack;\n    const shouldShowTabs = showTabs ?? sandpack.openPaths.length > 1;\n\n    const c = useClasser(\"sp\");\n\n    const handleCodeUpdate = (newCode: string): void => {\n      updateCode(newCode);\n    };\n\n    return (\n      <SandpackStack customStyle={customStyle}>\n        {shouldShowTabs && <FileTabs closableTabs={closableTabs} />}\n\n        <div className={c(\"code-editor\")}>\n          <CodeMirror\n            key={activePath}\n            ref={ref}\n            code={code}\n            editorState={editorState}\n            extensions={extensions}\n            extensionsKeymap={extensionsKeymap}\n            filePath={activePath}\n            id={id}\n            initMode={initMode || sandpack.initMode}\n            onCodeUpdate={handleCodeUpdate}\n            readOnly={readOnly || readOnlyFile}\n            showInlineErrors={showInlineErrors}\n            showLineNumbers={showLineNumbers}\n            showReadOnly={showReadOnly}\n            wrapContent={wrapContent}\n          />\n\n          {showRunButton && status === \"idle\" ? <RunButton /> : null}\n        </div>\n      </SandpackStack>\n    );\n  }\n);\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { useSandpack } from \"../hooks/useSandpack\";\nimport { RunIcon } from \"../icons\";\n\n/**\n * @category Components\n */\nexport const RunButton = (): JSX.Element | null => {\n  const c = useClasser(\"sp\");\n  const { sandpack } = useSandpack();\n\n  return (\n    <button\n      className={c(\"button\")}\n      onClick={(): void => sandpack.runSandpack()}\n      style={{\n        position: \"absolute\",\n        bottom: \"var(--sp-space-2)\",\n        right: \"var(--sp-space-2)\",\n      }}\n      type=\"button\"\n    >\n      <RunIcon />\n      Run\n    </button>\n  );\n};\n", "import * as React from \"react\";\n\nconst SVG: React.FC<React.SVGAttributes<unknown>> = (props) => (\n  <svg\n    fill=\"currentColor\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  />\n);\n\nexport const RunIcon = (): React.ReactElement => (\n  <SVG viewBox=\"0 0 17 16\">\n    <path d=\"M11.0792 8.1078C11.2793 8.25007 11.27 8.55012 11.0616 8.67981L6.02535 11.8135C5.79638 11.956 5.5 11.7913 5.5 11.5216L5.5 8.40703L5.5 4.80661C5.5 4.52735 5.81537 4.36463 6.04296 4.52647L11.0792 8.1078Z\" />\n  </SVG>\n);\n\nexport const BackwardIcon = (): React.ReactElement => (\n  <SVG>\n    <path d=\"M8.99126 12.2106L14.0455 6.98196L13.2998 6.21057L7.5 12.2106L13.2998 18.2106L14.0455 17.3924L8.99126 12.2106Z\" />\n  </SVG>\n);\n\nexport const ForwardIcon = (): React.ReactElement => (\n  <SVG>\n    <path d=\"M13.5087 12.2105L8.45455 17.4392L9.2002 18.2106L15 12.2106L9.2002 6.21057L8.45455 7.02875L13.5087 12.2105Z\" />\n  </SVG>\n);\n\nexport const RefreshIcon = (): React.ReactElement => (\n  <SVG>\n    <path\n      clipRule=\"evenodd\"\n      d=\"M16.48 12.8571C16.0883 15.1705 14.1389 16.9286 11.7931 16.9286C9.16499 16.9286 7.03448 14.722 7.03448 12C7.03448 9.27803 9.16499 7.07143 11.7931 7.07143C13.6797 7.07143 15.3099 8.20855 16.0796 9.85714L14.2759 9.85714V11.1429H16.48H16.7586H17.5275H18V6.85714L16.7586 6.85714V8.90778C15.7449 7.16536 13.9004 6 11.7931 6C8.59366 6 6 8.68629 6 12C6 15.3137 8.59366 18 11.7931 18C14.7116 18 17.126 15.7648 17.5275 12.8571H16.48Z\"\n      fillRule=\"evenodd\"\n    />\n  </SVG>\n);\n\nexport const ExportIcon = (): React.ReactElement => (\n  <svg\n    stroke=\"currentColor\"\n    fill=\"none\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M10.5714 7H8.07143C7.4797 7 7 7.4797 7 8.07143V15.9286C7 16.5203 7.4797 17 8.07143 17H15.9286C16.5203 17 17 16.5203 17 15.9286V13.4286\" />\n    <path d=\"M14.1429 7H16.8929C16.952 7 17 7.04798 17 7.10714V9.85715\" />\n    <path d=\"M11.2858 12.7143L16.8572 7.14282\" />\n  </svg>\n);\n\nexport const DirectoryIcon = ({\n  isOpen = false,\n}: {\n  isOpen?: boolean;\n}): React.ReactElement => (\n  <SVG height=\"20\" viewBox=\"0 0 1024 1024\" width=\"20\">\n    {isOpen ? (\n      <path d=\"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2c-1.5-1.4-3.5-2.2-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32z m-180 0H238c-13 0-24.8 7.9-29.7 20L136 643.2V256h188.5l119.6 114.4H748V444z\" />\n    ) : (\n      <path d=\"M880 298.4H521L403.7 186.2c-1.5-1.4-3.5-2.2-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32z\" />\n    )}\n  </SVG>\n);\n\nexport const FileIcon = (): React.ReactElement => (\n  <SVG height=\"20\" viewBox=\"0 0 1024 1024\" width=\"20\">\n    <path d=\"M309.333333 192a32 32 0 0 0-32 32v576c0 17.664 14.336 32 32 32h384a32 32 0 0 0 32-32v-384h-128a96 96 0 0 1-96-96v-128h-192z m256 45.226667l114.773334 114.773333H597.333333a32 32 0 0 1-32-32V237.226667zM213.333333 224A96 96 0 0 1 309.333333 128h224a32 32 0 0 1 22.613334 9.386667l224 224c6.016 5.973333 9.386667 14.122667 9.386666 22.613333v416A96 96 0 0 1 693.333333 896h-384A96 96 0 0 1 213.333333 800V224z\"></path>\n  </SVG>\n);\n\nexport const CloseIcon = (): React.ReactElement => (\n  <SVG height=\"8\" viewBox=\"0 0 16 16\" width=\"8\">\n    <path d=\"M1.293 1.293a1 1 0 0 1 1.414 0L8 6.586l5.293-5.293a1 1 0 1 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8 1.293 2.707a1 1 0 0 1 0-1.414z\" />\n  </SVG>\n);\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\n/**\n * @category Components\n */\nexport const SandpackStack: React.FC<{ customStyle?: React.CSSProperties }> = ({\n  children,\n  customStyle,\n}) => {\n  const c = useClasser(\"sp\");\n\n  return (\n    <div className={c(\"stack\")} style={customStyle}>\n      {children}\n    </div>\n  );\n};\n", "import { useSandpack } from \"./useSandpack\";\n\n/**\n * This returns the current state of the active file\n * and a method to update its content.\n *\n * @category Hooks\n */\nexport const useActiveCode = (): {\n  code: string;\n  readOnly: boolean;\n  updateCode: (newCode: string) => void;\n} => {\n  const { sandpack } = useSandpack();\n\n  return {\n    code: sandpack.files[sandpack.activePath].code,\n    readOnly: sandpack.files[sandpack.activePath].readOnly ?? false,\n    updateCode: sandpack.updateCurrentFile,\n  };\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { useSandpack } from \"../../hooks/useSandpack\";\nimport { CloseIcon } from \"../../icons\";\nimport {\n  calculateNearestUniquePath,\n  getFileName,\n} from \"../../utils/stringUtils\";\n\nexport interface FileTabsProps {\n  /**\n   * This adds a close button next to each file with a unique trigger to close it.\n   */\n  closableTabs?: boolean;\n}\n\n/**\n * FileTabs is a list of all open files, the active file, and its state.\n *\n * @category Components\n */\nexport const FileTabs = ({ closableTabs }: FileTabsProps): JSX.Element => {\n  const { sandpack } = useSandpack();\n  const c = useClasser(\"sp\");\n\n  const { activePath, openPaths, setActiveFile } = sandpack;\n\n  const handleCloseFile = (ev: React.MouseEvent<HTMLDivElement>): void => {\n    ev.stopPropagation();\n    const tabElm = (ev.target as HTMLElement).closest(\n      \"[data-active]\"\n    ) as HTMLElement;\n    const pathToClose = tabElm?.getAttribute(\"title\");\n    if (!pathToClose) {\n      return;\n    }\n    sandpack.closeFile(pathToClose);\n  };\n\n  const getTriggerText = (currentPath: string): string => {\n    const documentFileName = getFileName(currentPath);\n\n    const pathsWithDuplicateFileNames = openPaths.reduce((prev, curr) => {\n      if (curr === currentPath) {\n        return prev;\n      }\n\n      const fileName = getFileName(curr);\n\n      if (fileName === documentFileName) {\n        prev.push(curr);\n        return prev;\n      }\n\n      return prev;\n    }, [] as string[]);\n\n    if (pathsWithDuplicateFileNames.length === 0) {\n      return documentFileName;\n    } else {\n      return calculateNearestUniquePath(\n        currentPath,\n        pathsWithDuplicateFileNames\n      );\n    }\n  };\n\n  return (\n    <div className={c(\"tabs\")} translate=\"no\">\n      <div\n        aria-label=\"Select active file\"\n        className={c(\"tabs-scrollable-container\")}\n        role=\"tablist\"\n      >\n        {openPaths.map((filePath) => (\n          <button\n            key={filePath}\n            aria-selected={filePath === activePath}\n            className={c(\"tab-button\")}\n            data-active={filePath === activePath}\n            onClick={(): void => setActiveFile(filePath)}\n            role=\"tab\"\n            title={filePath}\n            type=\"button\"\n          >\n            {getTriggerText(filePath)}\n            {closableTabs && openPaths.length > 1 && (\n              <span className={c(\"close-button\")} onClick={handleCloseFile}>\n                <CloseIcon />\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport { closeBrackets, closeBracketsKeymap } from \"@codemirror/closebrackets\";\nimport {\n  defaultKeymap,\n  indentLess,\n  deleteGroupBackward,\n  insertTab,\n} from \"@codemirror/commands\";\nimport { commentKeymap } from \"@codemirror/comment\";\nimport { lineNumbers } from \"@codemirror/gutter\";\nimport { defaultHighlightStyle } from \"@codemirror/highlight\";\nimport { history, historyKeymap } from \"@codemirror/history\";\nimport { bracketMatching } from \"@codemirror/matchbrackets\";\nimport { EditorState } from \"@codemirror/state\";\nimport type { Annotation, Extension } from \"@codemirror/state\";\nimport {\n  highlightSpecialChars,\n  highlightActiveLine,\n  keymap,\n  EditorView,\n} from \"@codemirror/view\";\nimport type { KeyBinding } from \"@codemirror/view\";\nimport useIntersectionObserver from \"@react-hook/intersection-observer\";\nimport * as React from \"react\";\n\nimport { useSandpack } from \"../../hooks/useSandpack\";\nimport { useSandpackTheme } from \"../../hooks/useSandpackTheme\";\nimport type {\n  EditorState as SandpackEditorState,\n  SandpackInitMode,\n} from \"../../types\";\nimport { getFileName, generateRandomId } from \"../../utils/stringUtils\";\n\nimport { highlightDecorators } from \"./highlightDecorators\";\nimport { highlightInlineError } from \"./highlightInlineError\";\nimport {\n  getCodeMirrorLanguage,\n  getLanguageFromFile,\n  getEditorTheme,\n  getSyntaxHighlight,\n  useCombinedRefs,\n} from \"./utils\";\n\nexport type Decorators = Array<{\n  className?: string;\n  line: number;\n  startColumn?: number;\n  endColumn?: number;\n  elementAttributes?: Record<string, string>;\n}>;\n\ninterface CodeMirrorProps {\n  code: string;\n  filePath?: string;\n  fileType?:\n    | \"js\"\n    | \"jsx\"\n    | \"ts\"\n    | \"tsx\"\n    | \"css\"\n    | \"scss\"\n    | \"less\"\n    | \"html\"\n    | \"vue\";\n  onCodeUpdate?: (newCode: string) => void;\n  showLineNumbers?: boolean;\n  showInlineErrors?: boolean;\n  wrapContent?: boolean;\n  editorState?: SandpackEditorState;\n  /**\n   * This disables editing of content by the user in all files.\n   */\n  readOnly?: boolean;\n  /**\n   * Controls the visibility of Read-only label, which will only\n   * appears when `readOnly` is `true`\n   */\n  showReadOnly?: boolean;\n  /**\n   * Provides a way to draw or style a piece of the content.\n   */\n  decorators?: Decorators;\n  initMode: SandpackInitMode;\n  id?: string;\n  extensions?: Extension[];\n  extensionsKeymap?: Array<readonly KeyBinding[]>;\n}\n\nexport interface CodeMirrorRef {\n  getCodemirror: () => EditorView | undefined;\n}\n\n/**\n * @category Components\n */\nexport const CodeMirror = React.forwardRef<CodeMirrorRef, CodeMirrorProps>(\n  (\n    {\n      code,\n      filePath,\n      fileType,\n      onCodeUpdate,\n      showLineNumbers = false,\n      showInlineErrors = false,\n      wrapContent = false,\n      editorState = \"pristine\",\n      readOnly = false,\n      showReadOnly = true,\n      decorators,\n      initMode = \"lazy\",\n      id,\n      extensions = [],\n      extensionsKeymap = [],\n    },\n    ref\n  ) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const wrapper = React.useRef<any | HTMLElement>(null);\n    const cmView = React.useRef<EditorView>();\n    const { theme, themeId } = useSandpackTheme();\n    const [internalCode, setInternalCode] = React.useState<string>(code);\n    const [shouldInitEditor, setShouldInitEditor] = React.useState(\n      initMode === \"immediate\"\n    );\n\n    const c = useClasser(\"sp\");\n    const { listen } = useSandpack();\n    const ariaId = React.useRef<string>(id ?? generateRandomId());\n\n    const { isIntersecting } = useIntersectionObserver(wrapper, {\n      rootMargin: \"600px 0px\",\n      threshold: 0.2,\n    });\n\n    React.useImperativeHandle(ref, () => ({\n      getCodemirror: (): EditorView | undefined => cmView.current,\n    }));\n\n    React.useEffect(() => {\n      const mode = initMode === \"lazy\" || initMode === \"user-visible\";\n\n      if (mode && isIntersecting) {\n        setShouldInitEditor(true);\n      }\n    }, [initMode, isIntersecting]);\n\n    const languageExtension = getLanguageFromFile(filePath, fileType);\n    const langSupport = getCodeMirrorLanguage(languageExtension);\n\n    // decorators need to be sorted by `line`, otherwise it will throw error\n    // see https://github.com/codesandbox/sandpack/issues/383\n    const sortedDecorators = React.useMemo(\n      () =>\n        decorators\n          ? decorators.sort((d1, d2) => d1.line - d2.line)\n          : decorators,\n      [decorators]\n    );\n\n    React.useEffect(() => {\n      if (!wrapper.current || !shouldInitEditor) return;\n\n      /**\n       * TODO: replace this time out to something more efficient\n       * waiting for \"postTask scheduler\" API be ready\n       */\n      const timer = setTimeout(function delayCodeEditorInit() {\n        const customCommandsKeymap: KeyBinding[] = [\n          {\n            key: \"Tab\",\n            run: insertTab,\n          },\n          {\n            key: \"Shift-Tab\",\n            run: indentLess,\n          },\n          {\n            key: \"Escape\",\n            run: (): boolean => {\n              if (readOnly) return true;\n\n              if (wrapper.current) {\n                wrapper.current.focus();\n              }\n\n              return true;\n            },\n          },\n          {\n            key: \"mod-Backspace\",\n            run: deleteGroupBackward,\n          },\n        ];\n\n        const extensionList = [\n          highlightSpecialChars(),\n          history(),\n          closeBrackets(),\n\n          keymap.of([\n            ...closeBracketsKeymap,\n            ...defaultKeymap,\n            ...historyKeymap,\n            ...commentKeymap,\n            ...customCommandsKeymap,\n            ...extensionsKeymap,\n          ] as KeyBinding[]),\n          langSupport,\n\n          defaultHighlightStyle.fallback,\n\n          getEditorTheme(theme),\n          getSyntaxHighlight(theme),\n          ...extensions,\n        ];\n\n        if (readOnly) {\n          extensionList.push(EditorState.readOnly.of(true));\n          extensionList.push(EditorView.editable.of(false));\n        } else {\n          extensionList.push(bracketMatching());\n          extensionList.push(highlightActiveLine());\n        }\n\n        if (sortedDecorators) {\n          extensionList.push(highlightDecorators(sortedDecorators));\n        }\n\n        if (wrapContent) {\n          extensionList.push(EditorView.lineWrapping);\n        }\n\n        if (showLineNumbers) {\n          extensionList.push(lineNumbers());\n        }\n\n        if (showInlineErrors) {\n          extensionList.push(highlightInlineError());\n        }\n\n        const startState = EditorState.create({\n          doc: code,\n          extensions: extensionList,\n        });\n\n        const parentDiv = wrapper.current;\n        const existingPlaceholder = parentDiv.querySelector(\n          \".sp-pre-placeholder\"\n        );\n        if (existingPlaceholder) {\n          parentDiv.removeChild(existingPlaceholder);\n        }\n\n        const view = new EditorView({\n          state: startState,\n          parent: parentDiv,\n          dispatch: (tr): void => {\n            view.update([tr]);\n\n            if (tr.docChanged) {\n              const newCode = tr.newDoc.sliceString(0, tr.newDoc.length);\n              setInternalCode(newCode);\n              onCodeUpdate?.(newCode);\n            }\n          },\n        });\n\n        view.contentDOM.setAttribute(\"data-gramm\", \"false\");\n\n        if (!readOnly) {\n          view.contentDOM.setAttribute(\"tabIndex\", \"-1\");\n          view.contentDOM.setAttribute(\n            \"aria-describedby\",\n            `exit-instructions-${ariaId.current}`\n          );\n        }\n\n        cmView.current = view;\n      }, 0);\n\n      return (): void => {\n        cmView.current?.destroy();\n\n        clearTimeout(timer);\n      };\n\n      // TODO: Would be nice to reconfigure the editor when these change, instead of recreating with all the extensions from scratch\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n      shouldInitEditor,\n      showLineNumbers,\n      wrapContent,\n      themeId,\n      sortedDecorators,\n    ]);\n\n    React.useEffect(() => {\n      // When the user clicks on a tab button on a larger screen\n      // Avoid autofocus on mobile as it leads to a bad experience and an unexpected layout shift\n      if (\n        cmView.current &&\n        editorState === \"dirty\" &&\n        window.matchMedia(\"(min-width: 768px)\").matches\n      ) {\n        cmView.current.contentDOM.focus();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Update editor when code passed as prop from outside sandpack changes\n    React.useEffect(() => {\n      if (cmView.current && code !== internalCode) {\n        const view = cmView.current;\n        view.dispatch({\n          changes: { from: 0, to: view.state.doc.length, insert: code },\n          selection: view.state.selection,\n        });\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [code]);\n\n    React.useEffect(\n      function messageToInlineError() {\n        if (!showInlineErrors) return;\n\n        const unsubscribe = listen((message) => {\n          const view = cmView.current;\n\n          if (message.type === \"success\") {\n            view?.dispatch({\n              // Pass message to clean up inline error\n              annotations: [\n                {\n                  type: \"clean-error\",\n                  value: null,\n                } as unknown as Annotation<unknown>,\n              ],\n\n              // Trigger a doc change to remove inline error\n              changes: {\n                from: 0,\n                to: view.state.doc.length,\n                insert: view.state.doc,\n              },\n              selection: view.state.selection,\n            });\n          }\n\n          if (\n            message.type === \"action\" &&\n            message.action === \"show-error\" &&\n            \"line\" in message\n          ) {\n            view?.dispatch({\n              annotations: [\n                {\n                  type: \"error\",\n                  value: message.line,\n                } as unknown as Annotation<unknown>,\n              ],\n            });\n          }\n        });\n\n        return (): void => unsubscribe();\n      },\n      [listen, showInlineErrors]\n    );\n\n    const handleContainerKeyDown = (evt: React.KeyboardEvent): void => {\n      if (evt.key === \"Enter\" && cmView.current) {\n        evt.preventDefault();\n        cmView.current.contentDOM.focus();\n      }\n    };\n\n    const combinedRef = useCombinedRefs(wrapper, ref);\n\n    if (readOnly) {\n      return (\n        <pre\n          ref={combinedRef}\n          className={c(\"cm\", editorState, languageExtension)}\n          translate=\"no\"\n        >\n          <code className={c(\"pre-placeholder\")}>{code}</code>\n\n          {readOnly && showReadOnly && (\n            <span className={c(\"read-only\")}>Read-only</span>\n          )}\n        </pre>\n      );\n    }\n\n    return (\n      /* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n      /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n      <div\n        ref={combinedRef}\n        aria-describedby={`enter-instructions-${ariaId.current}`}\n        aria-label={\n          filePath ? `Code Editor for ${getFileName(filePath)}` : `Code Editor`\n        }\n        className={c(\"cm\", editorState, languageExtension)}\n        onKeyDown={handleContainerKeyDown}\n        role=\"group\"\n        tabIndex={0}\n        translate=\"no\"\n      >\n        <pre\n          className={c(\"pre-placeholder\")}\n          style={{\n            marginLeft: showLineNumbers ? 28 : 0, // gutter line offset\n          }}\n        >\n          {code}\n        </pre>\n\n        <>\n          <p\n            id={`enter-instructions-${ariaId.current}`}\n            style={{ display: \"none\" }}\n          >\n            To enter the code editing mode, press Enter. To exit the edit mode,\n            press Escape\n          </p>\n          <p\n            id={`exit-instructions-${ariaId.current}`}\n            style={{ display: \"none\" }}\n          >\n            You are editing the code. To exit the edit mode, press Escape\n          </p>\n        </>\n      </div>\n    );\n  }\n);\n", "import * as React from \"react\";\n\nimport { SandpackThemeContext } from \"../contexts/themeContext\";\nimport type { SandpackTheme } from \"../types\";\n\n/**\n * @category Hooks\n */\nexport const useSandpackTheme = (): {\n  theme: SandpackTheme;\n  themeId: string;\n} => {\n  const { theme, id } = React.useContext(SandpackThemeContext);\n  return { theme, themeId: id };\n};\n", "import type { Extension } from \"@codemirror/state\";\nimport type { DecorationSet, EditorView, ViewUpdate } from \"@codemirror/view\";\nimport { Decoration, ViewPlugin } from \"@codemirror/view\";\n\nimport type { Decorators } from \"../CodeEditor/CodeMirror\";\n\nimport { getCodeMirrorPosition } from \"./utils\";\n\nexport function highlightDecorators(positions: Decorators): Extension {\n  return ViewPlugin.fromClass(\n    class {\n      decorations: DecorationSet;\n\n      constructor(view: EditorView) {\n        this.decorations = this.getDecoration(view);\n      }\n\n      update(update: ViewUpdate): void {\n        return;\n      }\n\n      getDecoration(view: EditorView): DecorationSet {\n        if (!positions) return Decoration.none;\n\n        const rangesDecorators = positions.map((item) => {\n          const lineDeco = Decoration.line({\n            attributes: { class: item.className ?? \"\" },\n          });\n\n          const markDeco = Decoration.mark({\n            class: item.className ?? \"\",\n            attributes: item.elementAttributes ?? undefined,\n          });\n\n          const positionLineStart =\n            getCodeMirrorPosition(view.state.doc, {\n              line: item.line,\n              column: item.startColumn,\n            }) + 1;\n\n          if (item.startColumn && item.endColumn) {\n            const positionLineEnd =\n              getCodeMirrorPosition(view.state.doc, {\n                line: item.line,\n                column: item.endColumn,\n              }) + 1;\n\n            return markDeco.range(positionLineStart, positionLineEnd);\n          }\n\n          return lineDeco.range(positionLineStart);\n        });\n\n        return Decoration.set(rangesDecorators);\n      }\n    },\n    {\n      decorations: (v) => v.decorations,\n    }\n  );\n}\n", "import { HighlightStyle, tags } from \"@codemirror/highlight\";\nimport { css } from \"@codemirror/lang-css\";\nimport { html } from \"@codemirror/lang-html\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport type { LanguageSupport } from \"@codemirror/language\";\nimport type { Extension } from \"@codemirror/state\";\nimport type { Text } from \"@codemirror/text\";\nimport { EditorView } from \"@codemirror/view\";\nimport * as React from \"react\";\n\nimport { getSyntaxStyle } from \"../../themes\";\nimport type { SandpackTheme } from \"../../types\";\nimport { hexToCSSRGBa } from \"../../utils/stringUtils\";\n\nexport const getCodeMirrorPosition = (\n  doc: Text,\n  { line, column }: { line: number; column?: number }\n): number => {\n  return doc.line(line).from + (column ?? 0) - 1;\n};\n\nexport const getEditorTheme = (theme: SandpackTheme): Extension =>\n  EditorView.theme({\n    \"&\": {\n      backgroundColor: theme.palette.defaultBackground,\n      color:\n        getSyntaxStyle(theme.syntax.plain).color || theme.palette.activeText,\n      height: \"100%\",\n    },\n\n    \"&.cm-editor.cm-focused\": {\n      outline: \"none\",\n    },\n\n    \".cm-activeLine\": {\n      backgroundColor: hexToCSSRGBa(theme.palette.activeBackground, 0.5),\n    },\n\n    \".cm-errorLine\": {\n      backgroundColor: hexToCSSRGBa(theme.palette.errorBackground, 0.2),\n    },\n\n    \".cm-matchingBracket, .cm-nonmatchingBracket\": {\n      color: \"inherit\",\n      background: theme.palette.activeBackground,\n    },\n\n    \".cm-content\": {\n      padding: 0,\n      caretColor: theme.palette.activeText,\n    },\n\n    \".cm-scroller\": {\n      fontFamily: theme.typography.monoFont,\n      lineHeight: theme.typography.lineHeight,\n    },\n\n    \".cm-gutters\": {\n      backgroundColor: theme.palette.defaultBackground,\n      color: theme.palette.defaultText,\n      border: \"none\",\n    },\n\n    \".cm-gutter.cm-lineNumbers\": {\n      paddingLeft: \"var(--sp-space-1)\",\n      paddingRight: \"var(--sp-space-1)\",\n    },\n\n    \".cm-lineNumbers .cm-gutterElement\": {\n      padding: 0,\n    },\n\n    \".cm-line\": {\n      padding: \"0 var(--sp-space-3)\",\n    },\n  });\n\nexport const getSyntaxHighlight = (theme: SandpackTheme): HighlightStyle =>\n  HighlightStyle.define([\n    { tag: tags.link, textDecoration: \"underline\" },\n    { tag: tags.emphasis, fontStyle: \"italic\" },\n    { tag: tags.strong, fontWeight: \"bold\" },\n\n    {\n      tag: tags.keyword,\n      ...getSyntaxStyle(theme.syntax.keyword),\n    },\n    {\n      tag: [tags.atom, tags.number, tags.bool],\n      ...getSyntaxStyle(theme.syntax.static),\n    },\n    {\n      tag: tags.tagName,\n      ...getSyntaxStyle(theme.syntax.tag),\n    },\n    { tag: tags.variableName, ...getSyntaxStyle(theme.syntax.plain) },\n    {\n      // Highlight function call\n      tag: tags.function(tags.variableName),\n      ...getSyntaxStyle(theme.syntax.definition),\n    },\n    {\n      // Highlight function definition differently (eg: functional component def in React)\n      tag: tags.definition(tags.function(tags.variableName)),\n      ...getSyntaxStyle(theme.syntax.definition),\n    },\n    {\n      tag: tags.propertyName,\n      ...getSyntaxStyle(theme.syntax.property),\n    },\n    {\n      tag: [tags.literal, tags.inserted],\n      ...getSyntaxStyle(theme.syntax.string ?? theme.syntax.static),\n    },\n    { tag: tags.punctuation, ...getSyntaxStyle(theme.syntax.punctuation) },\n    { tag: tags.comment, ...getSyntaxStyle(theme.syntax.comment) },\n  ]);\n\ntype SandpackLanguageSupport = \"javascript\" | \"typescript\" | \"html\" | \"css\";\n\nexport const getLanguageFromFile = (\n  filePath?: string,\n  fileType?: string\n): SandpackLanguageSupport => {\n  if (!filePath && !fileType) return \"javascript\";\n\n  let extension = fileType;\n  if (!extension && filePath) {\n    const extensionDotIndex = filePath.lastIndexOf(\".\");\n    extension = filePath.slice(extensionDotIndex + 1);\n  }\n\n  switch (extension) {\n    case \"js\":\n    case \"jsx\":\n      return \"javascript\";\n    case \"ts\":\n    case \"tsx\":\n      return \"typescript\";\n    case \"html\":\n    case \"svelte\":\n    case \"vue\":\n      return \"html\";\n    case \"css\":\n    case \"less\":\n    case \"scss\":\n      return \"css\";\n    default:\n      return \"javascript\";\n  }\n};\n\nexport const getCodeMirrorLanguage = (\n  extension: SandpackLanguageSupport\n): LanguageSupport => {\n  const options: Record<SandpackLanguageSupport, LanguageSupport> = {\n    javascript: javascript({ jsx: true, typescript: false }),\n    typescript: javascript({ jsx: true, typescript: true }),\n    html: html(),\n    css: css(),\n  };\n\n  return options[extension];\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const useCombinedRefs = <T extends any>(\n  ...refs: Array<React.Ref<T>>\n): React.Ref<T> =>\n  React.useCallback(\n    (element: T) =>\n      refs.forEach((ref) => {\n        if (!ref) {\n          return;\n        }\n\n        // Ref can have two types - a function or an object. We treat each case.\n        if (typeof ref === \"function\") {\n          return ref(element);\n        }\n\n        // As per https://github.com/facebook/react/issues/13029\n        // it should be fine to set current this way.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (ref as any).current = element;\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs\n  );\n", "import type { Extension } from \"@codemirror/state\";\nimport type { DecorationSet, EditorView, ViewUpdate } from \"@codemirror/view\";\nimport { Decoration, ViewPlugin } from \"@codemirror/view\";\n\nimport { getCodeMirrorPosition } from \"../CodeEditor/utils\";\n\nexport function highlightInlineError(): Extension {\n  return activeLineHighlighter;\n}\n\nconst lineDeco = Decoration.line({ attributes: { class: \"cm-errorLine\" } });\n\nconst activeLineHighlighter = ViewPlugin.fromClass(\n  class {\n    decorations: DecorationSet;\n\n    constructor() {\n      this.decorations = Decoration.none;\n    }\n\n    update(update: ViewUpdate): void {\n      let message = null;\n\n      update.transactions.forEach((trans) => {\n        // Overlap the types, it seems the original\n        // doesn't match what it really is.\n        interface Annotations {\n          annotations: Array<{ type: string }>;\n        }\n\n        (trans as unknown as Annotations).annotations?.forEach((element) => {\n          if (element.type === \"error\") {\n            message = element;\n          }\n\n          if (element.type === \"clean-error\") {\n            message = element;\n          }\n        });\n      });\n\n      if (message !== null) {\n        this.decorations = this.getDecoration(update.view, message);\n      }\n    }\n\n    getDecoration(\n      view: EditorView,\n      message: { type: \"clean-error\" } | { type: \"error\"; value: number } | null\n    ): DecorationSet {\n      if (message === null || message.type === \"clean-error\") {\n        return Decoration.none;\n      }\n\n      if (message.type === \"error\") {\n        const position =\n          getCodeMirrorPosition(view.state.doc, {\n            line: message.value,\n          }) + 1;\n\n        return Decoration.set([lineDeco.range(position)]);\n      }\n\n      return Decoration.none;\n    }\n  },\n  {\n    decorations: (v) => v.decorations,\n  }\n);\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { ErrorOverlay } from \"../../common/ErrorOverlay\";\nimport { LoadingOverlay } from \"../../common/LoadingOverlay\";\nimport { OpenInCodeSandboxButton } from \"../../common/OpenInCodeSandboxButton\";\nimport { SandpackStack } from \"../../common/Stack\";\nimport { useSandpack } from \"../../hooks/useSandpack\";\nimport { generateRandomId } from \"../../utils/stringUtils\";\nimport { Navigator } from \"../Navigator\";\n\nimport { RefreshButton } from \"./RefreshButton\";\n\nexport type ViewportSizePreset =\n  | \"iPhone X\"\n  | \"Pixel 2\"\n  | \"iPad\"\n  | \"Moto G4\"\n  | \"Surface Duo\";\n\nexport type ViewportSize =\n  | ViewportSizePreset\n  | \"auto\"\n  | { width: number; height: number };\n\nexport type ViewportOrientation = \"portrait\" | \"landscape\";\nexport interface PreviewProps {\n  customStyle?: React.CSSProperties;\n  viewportSize?: ViewportSize;\n  viewportOrientation?: ViewportOrientation;\n  showNavigator?: boolean;\n  showOpenInCodeSandbox?: boolean;\n  showRefreshButton?: boolean;\n  showSandpackErrorOverlay?: boolean;\n}\n\nexport { RefreshButton };\n\n/**\n * @category Components\n */\nexport const SandpackPreview = ({\n  customStyle,\n  showNavigator = false,\n  showRefreshButton = true,\n  showOpenInCodeSandbox = true,\n  showSandpackErrorOverlay = true,\n  viewportSize = \"auto\",\n  viewportOrientation = \"portrait\",\n}: PreviewProps): JSX.Element => {\n  const { sandpack, listen } = useSandpack();\n  const [iframeComputedHeight, setComputedAutoHeight] = React.useState<\n    number | null\n  >(null);\n  const {\n    status,\n    registerBundler,\n    unregisterBundler,\n    errorScreenRegisteredRef,\n    openInCSBRegisteredRef,\n    loadingScreenRegisteredRef,\n  } = sandpack;\n\n  const c = useClasser(\"sp\");\n  const clientId = React.useRef<string>(generateRandomId());\n  const iframeRef = React.useRef<HTMLIFrameElement | null>(null);\n\n  // SandpackPreview immediately registers the custom screens/components so the bundler does not render any of them\n  openInCSBRegisteredRef.current = true;\n  errorScreenRegisteredRef.current = true;\n  loadingScreenRegisteredRef.current = true;\n\n  React.useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const iframeElement = iframeRef.current!;\n    const clientIdValue = clientId.current;\n\n    registerBundler(iframeElement, clientIdValue);\n\n    const unsubscribe = listen((message) => {\n      if (message.type === \"resize\") {\n        setComputedAutoHeight(message.height);\n      }\n    }, clientIdValue);\n\n    return (): void => {\n      unsubscribe();\n      unregisterBundler(clientIdValue);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleNewURL = (newUrl: string): void => {\n    if (!iframeRef.current) {\n      return;\n    }\n\n    iframeRef.current.src = newUrl;\n  };\n\n  const viewportStyle = computeViewportSize(viewportSize, viewportOrientation);\n\n  return (\n    <SandpackStack\n      customStyle={{\n        ...customStyle,\n        ...viewportStyle,\n      }}\n    >\n      {showNavigator ? (\n        <Navigator clientId={clientId.current} onURLChange={handleNewURL} />\n      ) : null}\n\n      <div className={c(\"preview-container\")}>\n        <iframe\n          ref={iframeRef}\n          className={c(\"preview-iframe\")}\n          style={{\n            // set height based on the content only in auto mode\n            // and when the computed height was returned by the bundler\n            height:\n              viewportSize === \"auto\" && iframeComputedHeight\n                ? iframeComputedHeight\n                : undefined,\n          }}\n          title=\"Sandpack Preview\"\n        />\n\n        {showSandpackErrorOverlay ? <ErrorOverlay /> : null}\n\n        <div className={c(\"preview-actions\")}>\n          {!showNavigator && showRefreshButton && status === \"running\" ? (\n            <RefreshButton clientId={clientId.current} />\n          ) : null}\n\n          {showOpenInCodeSandbox ? <OpenInCodeSandboxButton /> : null}\n        </div>\n\n        <LoadingOverlay clientId={clientId.current} />\n      </div>\n    </SandpackStack>\n  );\n};\n\nconst VIEWPORT_SIZE_PRESET_MAP: Record<\n  ViewportSizePreset,\n  { x: number; y: number }\n> = {\n  \"iPhone X\": { x: 375, y: 812 },\n  iPad: { x: 768, y: 1024 },\n  \"Pixel 2\": { x: 411, y: 731 },\n  \"Moto G4\": { x: 360, y: 640 },\n  \"Surface Duo\": { x: 540, y: 720 },\n};\n\nconst computeViewportSize = (\n  viewport: ViewportSize,\n  orientation: ViewportOrientation\n): { width?: number; height?: number } => {\n  if (viewport === \"auto\") {\n    return {};\n  }\n\n  if (typeof viewport === \"string\") {\n    const { x, y } = VIEWPORT_SIZE_PRESET_MAP[viewport];\n    return orientation === \"portrait\"\n      ? { width: x, height: y }\n      : { width: y, height: x };\n  }\n\n  return viewport;\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { useErrorMessage } from \"../hooks/useErrorMessage\";\n\n/**\n * @category Components\n */\nexport const ErrorOverlay: React.FC = ({ children }) => {\n  const errorMessage = useErrorMessage();\n  const c = useClasser(\"sp\");\n\n  if (!errorMessage && !children) {\n    return null;\n  }\n\n  return (\n    <div className={c(\"overlay\", \"error\")} translate=\"no\">\n      <div className={c(\"error-message\")}>{errorMessage || children}</div>\n    </div>\n  );\n};\n", "import * as React from \"react\";\n\nimport { useSandpack } from \"./useSandpack\";\n\n/**\n * @category Hooks\n */\nexport const useErrorMessage = (): string | null => {\n  const { sandpack } = useSandpack();\n  const { error } = sandpack;\n\n  React.useEffect(() => {\n    sandpack.errorScreenRegisteredRef.current = true;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return error?.message ?? null;\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport {\n  useLoadingOverlayState,\n  FADE_ANIMATION_DURATION,\n} from \"../hooks/useLoadingOverlayState\";\n\nimport { OpenInCodeSandboxButton } from \"./OpenInCodeSandboxButton\";\n\nexport interface LoadingOverlayProps {\n  clientId?: string;\n\n  /**\n   * It enforces keeping the loading state visible,\n   * which is helpful for external loading states.\n   */\n  loading?: boolean;\n}\n\n/**\n * @category Components\n */\nexport const LoadingOverlay: React.FC<LoadingOverlayProps> = ({\n  clientId,\n  loading,\n}) => {\n  const loadingOverlayState = useLoadingOverlayState(clientId, loading);\n  const c = useClasser(\"sp\");\n\n  if (loadingOverlayState === \"HIDDEN\") {\n    return null;\n  }\n\n  if (loadingOverlayState === \"TIMEOUT\") {\n    return (\n      <div className={c(\"overlay\", \"error\")}>\n        <div className={c(\"error-message\")}>\n          Unable to establish connection with the sandpack bundler. Make sure\n          you are online or try again later. If the problem persists, please\n          report it via{\" \"}\n          <a\n            className={c(\"error-message\")}\n            href=\"mailto:hello@codesandbox.io?subject=Sandpack Timeout Error\"\n          >\n            email\n          </a>{\" \"}\n          or submit an issue on{\" \"}\n          <a\n            className={c(\"error-message\")}\n            href=\"https://github.com/codesandbox/sandpack/issues\"\n            rel=\"noreferrer noopener\"\n            target=\"_blank\"\n          >\n            GitHub.\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  const stillLoading =\n    loadingOverlayState === \"LOADING\" || loadingOverlayState === \"PRE_FADING\";\n\n  return (\n    <div\n      className={c(\"overlay\", \"loading\")}\n      style={{\n        opacity: stillLoading ? 1 : 0,\n        transition: `opacity ${FADE_ANIMATION_DURATION}ms ease-out`,\n      }}\n    >\n      <div className=\"sp-cube-wrapper\" title=\"Open in CodeSandbox\">\n        <OpenInCodeSandboxButton />\n        <div className=\"sp-cube\">\n          <div className=\"sp-sides\">\n            <div className=\"sp-top\" />\n            <div className=\"sp-right\" />\n            <div className=\"sp-bottom\" />\n            <div className=\"sp-left\" />\n            <div className=\"sp-front\" />\n            <div className=\"sp-back\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n", "import * as React from \"react\";\n\nimport { useSandpack } from \"./useSandpack\";\n\nexport type LoadingOverlayState =\n  | \"LOADING\"\n  | \"PRE_FADING\"\n  | \"FADING\"\n  | \"HIDDEN\"\n  | \"TIMEOUT\";\n\nexport const FADE_ANIMATION_DURATION = 200;\n\n/**\n * @category Hooks\n */\nexport const useLoadingOverlayState = (\n  clientId?: string,\n  externalLoading?: boolean\n): LoadingOverlayState => {\n  const { sandpack, listen } = useSandpack();\n  const [state, setState] = React.useState<LoadingOverlayState>(\"LOADING\");\n\n  /**\n   * Sandpack listener\n   */\n  React.useEffect(() => {\n    sandpack.loadingScreenRegisteredRef.current = true;\n\n    const unsubscribe = listen((message) => {\n      if (message.type === \"start\" && message.firstLoad === true) {\n        setState(\"LOADING\");\n      }\n\n      if (message.type === \"done\") {\n        setState((prev) => {\n          return prev === \"LOADING\" ? \"PRE_FADING\" : \"HIDDEN\";\n        });\n      }\n    }, clientId);\n\n    return (): void => {\n      unsubscribe();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clientId, sandpack.status === \"idle\"]);\n\n  /**\n   * Fading transient state\n   */\n  React.useEffect(() => {\n    let fadeTimeout: NodeJS.Timer;\n\n    if (state === \"PRE_FADING\" && !externalLoading) {\n      setState(\"FADING\");\n    } else if (state === \"FADING\") {\n      fadeTimeout = setTimeout(\n        () => setState(\"HIDDEN\"),\n        FADE_ANIMATION_DURATION\n      );\n    }\n\n    return (): void => {\n      clearTimeout(fadeTimeout);\n    };\n  }, [state, externalLoading]);\n\n  if (sandpack.status === \"timeout\") {\n    return \"TIMEOUT\";\n  }\n\n  if (sandpack.status !== \"running\") {\n    return \"HIDDEN\";\n  }\n\n  return state;\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { ExportIcon } from \"../../icons\";\n\nimport { UnstyledOpenInCodeSandboxButton } from \"./UnstyledOpenInCodeSandboxButton\";\n\n/**\n * @category Components\n */\nexport const OpenInCodeSandboxButton = (): JSX.Element | null => {\n  const c = useClasser(\"sp\");\n\n  return (\n    <UnstyledOpenInCodeSandboxButton className={c(\"button\", \"icon-standalone\")}>\n      <ExportIcon />\n    </UnstyledOpenInCodeSandboxButton>\n  );\n};\n", "import type { SandpackBundlerFiles } from \"@codesandbox/sandpack-client\";\nimport { getParameters } from \"codesandbox-import-utils/lib/api/define\";\nimport * as React from \"react\";\n\nimport { useSandpack } from \"../../hooks/useSandpack\";\nimport type { SandboxEnvironment } from \"../../types\";\n\nconst CSB_URL = \"https://codesandbox.io/api/v1/sandboxes/define\";\n\nconst getFileParameters = (\n  files: SandpackBundlerFiles,\n  environment?: SandboxEnvironment\n): string => {\n  type NormalizedFiles = Record<\n    string,\n    {\n      content: string;\n      isBinary: boolean;\n    }\n  >;\n\n  const normalizedFiles = Object.keys(files).reduce((prev, next) => {\n    const fileName = next.replace(\"/\", \"\");\n    const value = {\n      content: files[next].code,\n      isBinary: false,\n    };\n\n    return { ...prev, [fileName]: value };\n  }, {} as NormalizedFiles);\n\n  return getParameters({\n    files: normalizedFiles,\n    ...(environment ? { template: environment } : null),\n  });\n};\n\nexport const UnstyledOpenInCodeSandboxButton: React.FC<\n  React.HtmlHTMLAttributes<unknown>\n> = ({ children, ...props }) => {\n  const { sandpack } = useSandpack();\n  const formRef = React.useRef<HTMLFormElement>(null);\n\n  const [paramsValues, setParamsValues] = React.useState<URLSearchParams>();\n\n  React.useEffect(\n    function debounce() {\n      const timer = setTimeout(() => {\n        const params = getFileParameters(sandpack.files, sandpack.environment);\n\n        const searchParams = new URLSearchParams({\n          parameters: params,\n          query: new URLSearchParams({\n            file: sandpack.activePath,\n            \"from-sandpack\": \"true\",\n          }).toString(),\n        });\n\n        setParamsValues(searchParams);\n      }, 600);\n\n      return (): void => {\n        clearTimeout(timer);\n      };\n    },\n    [sandpack.activePath, sandpack.environment, sandpack.files]\n  );\n\n  // Register the usage of the codesandbox link\n  React.useEffect(function registerUsage() {\n    sandpack.openInCSBRegisteredRef.current = true;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * This is a safe limit to avoid too long requests (401),\n   * as all parameters are attached in the URL\n   */\n  if ((paramsValues?.get?.(\"parameters\")?.length ?? 0) > 1500) {\n    return (\n      <button\n        onClick={(): void => formRef.current?.submit()}\n        title=\"Open in CodeSandbox\"\n        {...props}\n      >\n        <form ref={formRef} action={CSB_URL} method=\"POST\" target=\"_blank\">\n          {Array.from(\n            paramsValues as unknown as Array<[string, string]>,\n            ([k, v]) => (\n              <input key={k} name={k} type=\"hidden\" value={v} />\n            )\n          )}\n        </form>\n        {children}\n      </button>\n    );\n  }\n\n  return (\n    <a\n      href={`${CSB_URL}?${paramsValues?.toString()}`}\n      rel=\"noreferrer noopener\"\n      target=\"_blank\"\n      title=\"Open in CodeSandbox\"\n      {...props}\n    >\n      {children}\n    </a>\n  );\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { useSandpack } from \"../../hooks/useSandpack\";\nimport { BackwardIcon, ForwardIcon, RefreshIcon } from \"../../icons\";\n\nimport { splitUrl } from \"./utils\";\n\nexport interface NavigatorProps {\n  clientId?: string;\n  onURLChange?: (newURL: string) => void;\n}\n\n/**\n * @category Components\n */\nexport const Navigator = ({\n  clientId,\n  onURLChange,\n}: NavigatorProps): JSX.Element => {\n  const [baseUrl, setBaseUrl] = React.useState<string>(\"\");\n  const { sandpack, dispatch, listen } = useSandpack();\n\n  const [relativeUrl, setRelativeUrl] = React.useState<string>(\n    sandpack.startRoute ?? \"/\"\n  );\n\n  const [backEnabled, setBackEnabled] = React.useState(false);\n  const [forwardEnabled, setForwardEnabled] = React.useState(false);\n\n  const c = useClasser(\"sp\");\n\n  React.useEffect(() => {\n    const unsub = listen((message) => {\n      if (message.type === \"urlchange\") {\n        const { url, back, forward } = message;\n\n        const [newBaseUrl, newRelativeUrl] = splitUrl(url);\n\n        setBaseUrl(newBaseUrl);\n        setRelativeUrl(newRelativeUrl);\n        setBackEnabled(back);\n        setForwardEnabled(forward);\n      }\n    }, clientId);\n\n    return (): void => unsub();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const path = e.target.value.startsWith(\"/\")\n      ? e.target.value\n      : `/${e.target.value}`;\n\n    setRelativeUrl(path);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.code === \"Enter\") {\n      //  Enter\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (typeof onURLChange === \"function\") {\n        onURLChange(baseUrl + e.currentTarget.value);\n      }\n    }\n  };\n\n  const handleRefresh = (): void => {\n    dispatch({ type: \"refresh\" });\n  };\n\n  const handleBack = (): void => {\n    dispatch({ type: \"urlback\" });\n  };\n\n  const handleForward = (): void => {\n    dispatch({ type: \"urlforward\" });\n  };\n\n  return (\n    <div className={c(\"navigator\")}>\n      <button\n        aria-label=\"Go back one page\"\n        className={c(\"button\", \"icon\")}\n        disabled={!backEnabled}\n        onClick={handleBack}\n        type=\"button\"\n      >\n        <BackwardIcon />\n      </button>\n      <button\n        aria-label=\"Go forward one page\"\n        className={c(\"button\", \"icon\")}\n        disabled={!forwardEnabled}\n        onClick={handleForward}\n        type=\"button\"\n      >\n        <ForwardIcon />\n      </button>\n      <button\n        aria-label=\"Refresh page\"\n        className={c(\"button\", \"icon\")}\n        onClick={handleRefresh}\n        type=\"button\"\n      >\n        <RefreshIcon />\n      </button>\n\n      <input\n        aria-label=\"Current Sandpack URL\"\n        className={c(\"input\")}\n        name=\"Current Sandpack URL\"\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        type=\"text\"\n        value={relativeUrl}\n      />\n    </div>\n  );\n};\n", "export const splitUrl = (url: string): string[] => {\n  const match = url.match(/(https?:\\/\\/.*?)\\//);\n\n  if (match && match[1]) {\n    return [match[1], url.replace(match[1], \"\")];\n  }\n\n  return [url, \"/\"];\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { useSandpackNavigation } from \"../../hooks/useSandpackNavigation\";\nimport { RefreshIcon } from \"../../icons\";\n\ninterface RefreshButtonProps {\n  clientId?: string;\n}\n\n/**\n * @category Components\n */\nexport const RefreshButton = ({\n  clientId,\n}: RefreshButtonProps): JSX.Element => {\n  const { refresh } = useSandpackNavigation(clientId);\n  const c = useClasser(\"sp\");\n\n  return (\n    <button\n      className={c(\"button\", \"icon-standalone\")}\n      onClick={refresh}\n      title=\"Refresh Sandpack\"\n      type=\"button\"\n    >\n      <RefreshIcon />\n    </button>\n  );\n};\n", "import { useSandpack } from \"./useSandpack\";\n\n/**\n * @category Hooks\n */\nexport const useSandpackNavigation = (\n  clientId?: string\n): {\n  refresh: () => void;\n  back: () => void;\n  forward: () => void;\n} => {\n  const { dispatch } = useSandpack();\n\n  return {\n    refresh: (): void => dispatch({ type: \"refresh\" }, clientId),\n    back: (): void => dispatch({ type: \"urlback\" }, clientId),\n    forward: (): void => dispatch({ type: \"urlforward\" }, clientId),\n  };\n};\n", "import { ClasserProvider } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { SandpackLayout } from \"../common/Layout\";\nimport { SandpackPreview } from \"../components/Preview\";\nimport { SandpackProvider } from \"../contexts/sandpackContext\";\nimport { SANDBOX_TEMPLATES } from \"../templates\";\nimport type {\n  SandpackPredefinedTemplate,\n  SandpackSetup,\n  SandpackThemeProp,\n} from \"../types\";\n\nexport interface SandpackRunnerProps {\n  code?: string;\n  template?: SandpackPredefinedTemplate;\n  customSetup?: SandpackSetup;\n  theme?: SandpackThemeProp;\n  options?: {\n    showNavigator?: boolean;\n    bundlerUrl?: string;\n    startRoute?: string;\n    classes?: Record<string, string>;\n  };\n}\n\n/**\n * @category Components\n */\nexport const SandpackRunner: React.FC<SandpackRunnerProps> = ({\n  code,\n  template,\n  customSetup,\n  options,\n  theme,\n}) => {\n  const mainFile =\n    customSetup?.main ?? SANDBOX_TEMPLATES[template || \"vanilla\"].main;\n\n  // Override the main file of the sandbox\n  const userInput = code\n    ? {\n        ...customSetup,\n        files: {\n          ...customSetup?.files,\n          [mainFile]: code,\n        },\n      }\n    : customSetup;\n\n  return (\n    <SandpackProvider\n      bundlerURL={options?.bundlerUrl}\n      customSetup={userInput}\n      startRoute={options?.startRoute}\n      template={template}\n    >\n      <ClasserProvider classes={options?.classes}>\n        <SandpackLayout theme={theme}>\n          <SandpackPreview showNavigator={options?.showNavigator} />\n        </SandpackLayout>\n      </ClasserProvider>\n    </SandpackProvider>\n  );\n};\n", "import * as React from \"react\";\n\nimport type { SandpackInitMode } from \"../..\";\nimport { RunButton } from \"../../common/RunButton\";\nimport { SandpackStack } from \"../../common/Stack\";\nimport { useActiveCode } from \"../../hooks/useActiveCode\";\nimport { useSandpack } from \"../../hooks/useSandpack\";\nimport { CodeEditor } from \"../CodeEditor\";\nimport type { CodeEditorRef } from \"../CodeEditor\";\nimport type { Decorators } from \"../CodeEditor/CodeMirror\";\nimport { FileTabs } from \"../FileTabs\";\n\nexport interface CodeViewerProps {\n  showTabs?: boolean;\n  showLineNumbers?: boolean;\n  /**\n   * Provides a way to draw or style a piece of the content.\n   */\n  decorators?: Decorators;\n  code?: string;\n  wrapContent?: boolean;\n  /**\n   * This provides a way to control how some components are going to\n   * be initialized on the page. The CodeEditor and the Preview components\n   * are quite expensive and might overload the memory usage, so this gives\n   * a certain control of when to initialize them.\n   */\n  initMode?: SandpackInitMode;\n}\n\n/**\n * @category Components\n */\nexport const SandpackCodeViewer = React.forwardRef<\n  CodeEditorRef,\n  CodeViewerProps\n>(\n  (\n    {\n      showTabs,\n      showLineNumbers,\n      decorators,\n      code: propCode,\n      initMode,\n      wrapContent,\n    },\n    ref\n  ) => {\n    const { sandpack } = useSandpack();\n    const { code } = useActiveCode();\n\n    const shouldShowTabs = showTabs ?? sandpack.openPaths.length > 1;\n\n    return (\n      <SandpackStack>\n        {shouldShowTabs ? <FileTabs /> : null}\n\n        <CodeEditor\n          ref={ref}\n          code={propCode ?? code}\n          decorators={decorators}\n          filePath={sandpack.activePath}\n          initMode={initMode || sandpack.initMode}\n          showLineNumbers={showLineNumbers}\n          showReadOnly={false}\n          wrapContent={wrapContent}\n          readOnly\n        />\n\n        {sandpack.status === \"idle\" ? <RunButton /> : null}\n      </SandpackStack>\n    );\n  }\n);\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { ErrorOverlay } from \"../../common/ErrorOverlay\";\nimport { LoadingOverlay } from \"../../common/LoadingOverlay\";\nimport { useSandpack } from \"../../hooks/useSandpack\";\nimport { useTranspiledCode } from \"../../hooks/useTranspiledCode\";\nimport type { CodeViewerProps } from \"../CodeViewer\";\nimport { SandpackCodeViewer } from \"../CodeViewer\";\n\n/**\n * @category Components\n */\nexport const SandpackTranspiledCode = (props: CodeViewerProps): JSX.Element => {\n  const { sandpack } = useSandpack();\n  const transpiledCode = useTranspiledCode();\n  const c = useClasser(\"sp\");\n\n  const hiddenIframeRef = React.useRef<HTMLIFrameElement | null>(null);\n  React.useEffect(() => {\n    const hiddenIframe = hiddenIframeRef.current;\n\n    if (hiddenIframe) {\n      sandpack.registerBundler(hiddenIframe, \"hidden\");\n    }\n    return (): void => {\n      sandpack.unregisterBundler(\"hidden\");\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={c(\"transpiled-code\")}>\n      {transpiledCode && (\n        <SandpackCodeViewer\n          code={transpiledCode}\n          initMode={sandpack.initMode}\n          {...props}\n        />\n      )}\n      <iframe\n        ref={hiddenIframeRef}\n        style={{ display: \"none\" }}\n        title=\"transpiled sandpack code\"\n      />\n      <ErrorOverlay />\n      <LoadingOverlay clientId=\"hidden\" />\n    </div>\n  );\n};\n", "import type { SandpackState } from \"../types\";\n\nimport { useSandpack } from \"./useSandpack\";\n\nfunction getTranspiledCode(sandpack: SandpackState): string | null {\n  const { activePath, bundlerState } = sandpack;\n  if (bundlerState == null) {\n    return null;\n  }\n\n  const tModule = bundlerState.transpiledModules[activePath + \":\"];\n  return tModule?.source?.compiledCode ?? null;\n}\n\n/**\n * @category Hooks\n */\nexport const useTranspiledCode = (): string | null => {\n  const { sandpack } = useSandpack();\n  if (sandpack.status !== \"running\") {\n    return null;\n  }\n\n  return getTranspiledCode(sandpack);\n};\n", "import { useClasser } from \"@code-hike/classer\";\nimport * as React from \"react\";\n\nimport { useSandpackTheme } from \"../..\";\nimport { useSandpack } from \"../../hooks/useSandpack\";\nimport { isDarkColor } from \"../../utils/stringUtils\";\n\ntype DevToolsTheme = \"dark\" | \"light\";\n\nexport const SandpackReactDevTools = ({\n  clientId,\n  theme,\n  ...props\n}: {\n  clientId?: string;\n  theme?: DevToolsTheme;\n} & React.HtmlHTMLAttributes<unknown>): JSX.Element | null => {\n  const { listen, sandpack } = useSandpack();\n  const { theme: sandpackTheme } = useSandpackTheme();\n  const c = useClasser(\"sp\");\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const reactDevtools = React.useRef<any>();\n\n  const [ReactDevTools, setDevTools] = React.useState<React.FunctionComponent<{\n    browserTheme: DevToolsTheme;\n  }> | null>(null);\n\n  React.useEffect(() => {\n    import(\"react-devtools-inline/frontend\").then((module) => {\n      reactDevtools.current = module;\n    });\n  }, []);\n\n  React.useEffect(() => {\n    const unsubscribe = listen((msg) => {\n      if (msg.type === \"activate-react-devtools\") {\n        const client = clientId\n          ? sandpack.clients[clientId]\n          : Object.values(sandpack.clients)[0];\n        const contentWindow = client?.iframe?.contentWindow;\n\n        if (reactDevtools.current && contentWindow) {\n          setDevTools(reactDevtools.current.initialize(contentWindow));\n        }\n      }\n    });\n\n    return unsubscribe;\n  }, [reactDevtools, clientId, listen, sandpack.clients]);\n\n  React.useEffect(() => {\n    sandpack.registerReactDevTools(\"legacy\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!ReactDevTools) return null;\n\n  const getBrowserTheme = (): DevToolsTheme => {\n    if (theme) return theme;\n\n    const isDarkTheme = isDarkColor(sandpackTheme.palette.defaultBackground);\n\n    return isDarkTheme ? \"dark\" : \"light\";\n  };\n\n  return (\n    <div className={c(\"devtools\")} {...props}>\n      <ReactDevTools browserTheme={getBrowserTheme()} />\n    </div>\n  );\n};\n"],
  "mappings": "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",
  "names": []
}
