{"version":3,"sources":["../../src/utils/webpack-error-utils.ts"],"names":["stageCodeToReadableLabel","StageEnum","BuildJavascript","BuildHTML","DevelopHTML","Develop","transformWebpackError","stage","webpackError","castedWebpackError","location","loc","start","end","error","matches","message","match","line","Number","column","id","context","stageLabel","sourceMessage","name","packageName","BreakingChangeRegex","test","breakingMatch","deprecationReason","filePath","module","resource","file","structureWebpackErrors","Array","isArray","map","e","reportWebpackWarnings","warnings","reporter","warningMessages","moduleName","warning","errors","forEach","warn"],"mappings":"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","sourcesContent":["import { Reporter } from \"gatsby-cli/lib/reporter/reporter\"\nimport { WebpackError, StatsCompilation, Module, NormalModule } from \"webpack\"\nimport { Stage as StageEnum } from \"../commands/types\"\nimport formatWebpackMessages from \"react-dev-utils/formatWebpackMessages\"\n\nconst stageCodeToReadableLabel: Record<StageEnum, string> = {\n  [StageEnum.BuildJavascript]: `Generating JavaScript bundles`,\n  [StageEnum.BuildHTML]: `Generating SSR bundle`,\n  [StageEnum.DevelopHTML]: `Generating development SSR bundle`,\n  [StageEnum.Develop]: `Generating development JavaScript bundle`,\n}\n\ninterface IFileLocation {\n  line: number\n  column: number\n}\n\ninterface IWebpackError {\n  name: string\n  message: string\n  file?: string\n  error?: {\n    message: string\n    loc?: {\n      start: IFileLocation\n      end: IFileLocation\n    }\n  }\n  module: Module\n  loc?: {\n    start: IFileLocation\n    end: IFileLocation\n  }\n}\n\ninterface ITransformedWebpackError {\n  id: string\n  filePath: string\n  location?: {\n    start: IFileLocation\n    end: IFileLocation\n  }\n  context: {\n    stage: StageEnum\n    stageLabel: string\n    sourceMessage?: string\n    [key: string]: unknown\n  }\n}\n\nconst transformWebpackError = (\n  stage: StageEnum,\n  webpackError: WebpackError\n): ITransformedWebpackError => {\n  const castedWebpackError = webpackError as unknown as IWebpackError\n\n  let location\n  if (castedWebpackError.loc && castedWebpackError.loc.start) {\n    location = {\n      start: castedWebpackError.loc.start,\n      end: castedWebpackError.loc.end,\n    }\n  }\n\n  if (!location && castedWebpackError.error?.loc) {\n    if (castedWebpackError.error.loc.start) {\n      location = castedWebpackError.error.loc\n    } else {\n      location = {\n        start: castedWebpackError.error.loc,\n      }\n    }\n  }\n\n  // try to get location out of stacktrace\n  if (!location) {\n    const matches = castedWebpackError.message.match(/\\((\\d+):(\\d+)\\)/)\n    if (matches && matches[1] && matches[2]) {\n      location = {\n        start: {\n          line: Number(matches[1]),\n          column: Number(matches[2]),\n        },\n      }\n    }\n  }\n\n  let id = `98123`\n  const context: ITransformedWebpackError[\"context\"] = {\n    stage,\n    stageLabel: stageCodeToReadableLabel[stage],\n    // TODO use formatWebpackMessages like in warnings\n    sourceMessage:\n      castedWebpackError.error?.message ?? castedWebpackError.message,\n  }\n\n  // When a module cannot be found we can short circuit\n  if (castedWebpackError.name === `ModuleNotFoundError`) {\n    const matches =\n      castedWebpackError.error?.message.match(\n        /Can't resolve '(.*?)' in '(.*?)'/m\n      ) ?? []\n\n    id = `98124`\n    context.packageName = matches?.[1]\n    context.sourceMessage = matches?.[0]\n\n    // get Breaking change message out of error\n    // it shows extra information for things that changed with webpack\n    const BreakingChangeRegex = /BREAKING CHANGE[\\D\\n\\d]+$/\n    if (BreakingChangeRegex.test(castedWebpackError.message)) {\n      const breakingMatch =\n        castedWebpackError.message.match(BreakingChangeRegex)\n\n      context.deprecationReason = breakingMatch?.[0]\n    }\n  }\n\n  return {\n    id,\n    filePath:\n      (castedWebpackError?.module as NormalModule)?.resource ??\n      castedWebpackError.file,\n    location,\n    context,\n    // We use original error to display stack trace for the most part.\n    // In case of webpack error stack will include internals of webpack\n    // or one of loaders (for example babel-loader) and doesn't provide\n    // much value to user, so it's purposely omitted.\n\n    // error: webpackError?.error || webpackError,\n  }\n}\n\nexport const structureWebpackErrors = (\n  stage: StageEnum,\n  webpackError: WebpackError | Array<WebpackError>\n): Array<ITransformedWebpackError> | ITransformedWebpackError => {\n  if (Array.isArray(webpackError)) {\n    return webpackError.map(e => transformWebpackError(stage, e))\n  }\n\n  return transformWebpackError(stage, webpackError)\n}\n\nexport const reportWebpackWarnings = (\n  warnings: StatsCompilation[\"warnings\"] = [],\n  reporter: Reporter\n): void => {\n  let warningMessages: Array<string> = []\n  if (typeof warnings[0] === `string`) {\n    warningMessages = warnings as unknown as Array<string>\n  } else if (warnings[0]?.message && warnings[0]?.moduleName) {\n    warningMessages = warnings.map(\n      warning => `${warning.moduleName}\\n\\n${warning.message}`\n    )\n  } else if (warnings[0]?.message) {\n    warningMessages = warnings.map(warning => warning.message)\n  }\n\n  formatWebpackMessages({\n    errors: [],\n    warnings: warningMessages,\n  }).warnings.forEach(warning => reporter.warn(warning))\n}\n"],"file":"webpack-error-utils.js"}