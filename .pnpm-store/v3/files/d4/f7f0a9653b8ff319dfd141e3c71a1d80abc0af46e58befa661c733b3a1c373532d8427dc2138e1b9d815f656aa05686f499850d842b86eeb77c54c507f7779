{"mappings":"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","sources":["packages/utils/fs-write-stream-atomic/node_modules/iferr/iferr.js","packages/core/fs/src/index.js","packages/core/fs/src/NodeFS.js","node_modules/graceful-fs/graceful-fs.js","node_modules/graceful-fs/polyfills.js","node_modules/graceful-fs/legacy-streams.js","node_modules/graceful-fs/clone.js","node_modules/ncp/lib/ncp.js","packages/utils/fs-write-stream-atomic/index.js","node_modules/imurmurhash/imurmurhash.js","packages/utils/fs-write-stream-atomic/thread-id.js","packages/core/fs/package.json","packages/core/fs/src/find.js","packages/core/fs/src/MemoryFS.js","node_modules/nullthrows/nullthrows.js","packages/core/fs/src/OverlayFS.js"],"sourcesContent":["// Delegates to `succ` on sucecss or to `fail` on error\n// ex: Thing.load(123, iferr(cb, thing => ...))\nconst iferr = (fail, succ) => (err, ...a) => err ? fail(err) : succ(...a)\n\n// Like iferr, but also catches errors thrown from `succ` and passes to `fail`\nconst tiferr = (fail, succ) => iferr(fail, (...a) => {\n  try { succ(...a) }\n  catch (err) { fail(err) }\n})\n\n// Delegate to the success function on success, throws the error otherwise\n// ex: Thing.load(123, throwerr(thing => ...))\nconst throwerr = iferr.bind(null, err => { throw err })\n\n// Prints errors when one is passed, or does nothing otherwise\n// ex: Thing.load(123, printerr)\nconst printerr = iferr(err => console.error(err), () => {})\n\nmodule.exports = exports = iferr\nexports.iferr = iferr\nexports.tiferr = tiferr\nexports.throwerr = throwerr\nexports.printerr = printerr\n","// @flow strict-local\nimport type {FileSystem} from './types';\nimport type {FilePath} from '@parcel/types';\nimport path from 'path';\n\nexport type * from './types';\nexport * from './NodeFS';\nexport * from './MemoryFS';\nexport * from './OverlayFS';\n\n// Recursively copies a directory from the sourceFS to the destinationFS\nexport async function ncp(\n  sourceFS: FileSystem,\n  source: FilePath,\n  destinationFS: FileSystem,\n  destination: FilePath,\n) {\n  await destinationFS.mkdirp(destination);\n  let files = await sourceFS.readdir(source);\n  for (let file of files) {\n    let sourcePath = path.join(source, file);\n    let destPath = path.join(destination, file);\n    let stats = await sourceFS.stat(sourcePath);\n    if (stats.isFile()) {\n      await new Promise((resolve, reject) => {\n        sourceFS\n          .createReadStream(sourcePath)\n          .pipe(destinationFS.createWriteStream(destPath))\n          .on('finish', () => resolve())\n          .on('error', reject);\n      });\n    } else if (stats.isDirectory()) {\n      await ncp(sourceFS, sourcePath, destinationFS, destPath);\n    }\n  }\n}\n","// @flow\nimport type {ReadStream, Stats} from 'fs';\nimport type {Writable} from 'stream';\nimport type {FileOptions, FileSystem, Encoding} from './types';\nimport type {FilePath} from '@parcel/types';\nimport type {\n  Event,\n  Options as WatcherOptions,\n  AsyncSubscription,\n} from '@parcel/watcher';\n\nimport fs from 'graceful-fs';\nimport nativeFS from 'fs';\nimport ncp from 'ncp';\nimport {promisify} from 'util';\nimport {registerSerializableClass} from '@parcel/core';\nimport fsWriteStreamAtomic from '@parcel/fs-write-stream-atomic';\nimport watcher from '@parcel/watcher';\nimport packageJSON from '../package.json';\n\nimport * as searchNative from '@parcel/fs-search';\nimport * as searchJS from './find';\n\n// Most of this can go away once we only support Node 10+, which includes\n// require('fs').promises\n\nconst realpath = promisify(\n  process.platform === 'win32' ? fs.realpath : fs.realpath.native,\n);\nconst isPnP = process.versions.pnp != null;\n\nexport class NodeFS implements FileSystem {\n  readFile: any = promisify(fs.readFile);\n  copyFile: any = promisify(fs.copyFile);\n  stat: any = promisify(fs.stat);\n  readdir: any = promisify(fs.readdir);\n  unlink: any = promisify(fs.unlink);\n  utimes: any = promisify(fs.utimes);\n  ncp: any = promisify(ncp);\n  createReadStream: (path: string, options?: any) => ReadStream =\n    fs.createReadStream;\n  cwd: () => string = () => process.cwd();\n  chdir: (directory: string) => void = directory => process.chdir(directory);\n\n  statSync: (path: string) => Stats = path => fs.statSync(path);\n  realpathSync: (path: string, cache?: any) => string =\n    process.platform === 'win32' ? fs.realpathSync : fs.realpathSync.native;\n  existsSync: (path: string) => boolean = fs.existsSync;\n  readdirSync: any = (fs.readdirSync: any);\n  findAncestorFile: any = isPnP\n    ? (...args) => searchJS.findAncestorFile(this, ...args)\n    : searchNative.findAncestorFile;\n  findNodeModule: any = isPnP\n    ? (...args) => searchJS.findNodeModule(this, ...args)\n    : searchNative.findNodeModule;\n  findFirstFile: any = isPnP\n    ? (...args) => searchJS.findFirstFile(this, ...args)\n    : searchNative.findFirstFile;\n\n  createWriteStream(filePath: string, options: any): Writable {\n    return fsWriteStreamAtomic(filePath, options);\n  }\n\n  async writeFile(\n    filePath: FilePath,\n    contents: Buffer | string,\n    options: ?FileOptions,\n  ): Promise<void> {\n    let tmpFilePath = getTempFilePath(filePath);\n    await fs.promises.writeFile(\n      tmpFilePath,\n      contents,\n      // $FlowFixMe\n      options,\n    );\n    await fs.promises.rename(tmpFilePath, filePath);\n  }\n\n  readFileSync(filePath: FilePath, encoding?: Encoding): any {\n    if (encoding != null) {\n      return fs.readFileSync(filePath, encoding);\n    }\n    return fs.readFileSync(filePath);\n  }\n\n  async realpath(originalPath: string): Promise<string> {\n    try {\n      return await realpath(originalPath, 'utf8');\n    } catch (e) {\n      // do nothing\n    }\n\n    return originalPath;\n  }\n\n  exists(filePath: FilePath): Promise<boolean> {\n    return new Promise(resolve => {\n      fs.exists(filePath, resolve);\n    });\n  }\n\n  watch(\n    dir: FilePath,\n    fn: (err: ?Error, events: Array<Event>) => mixed,\n    opts: WatcherOptions,\n  ): Promise<AsyncSubscription> {\n    return watcher.subscribe(dir, fn, opts);\n  }\n\n  getEventsSince(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<Array<Event>> {\n    return watcher.getEventsSince(dir, snapshot, opts);\n  }\n\n  async writeSnapshot(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<void> {\n    await watcher.writeSnapshot(dir, snapshot, opts);\n  }\n\n  static deserialize(): NodeFS {\n    return new NodeFS();\n  }\n\n  serialize(): null {\n    return null;\n  }\n\n  async mkdirp(filePath: FilePath): Promise<void> {\n    await nativeFS.promises.mkdir(filePath, {recursive: true});\n  }\n\n  async rimraf(filePath: FilePath): Promise<void> {\n    if (fs.promises.rm) {\n      await fs.promises.rm(filePath, {recursive: true, force: true});\n      return;\n    }\n\n    // fs.promises.rm is not supported in node 12...\n    let stat;\n    try {\n      stat = await this.stat(filePath);\n    } catch (err) {\n      return;\n    }\n\n    if (stat.isDirectory()) {\n      // $FlowFixMe\n      await nativeFS.promises.rmdir(filePath, {recursive: true});\n    } else {\n      await nativeFS.promises.unlink(filePath);\n    }\n  }\n}\n\nregisterSerializableClass(`${packageJSON.version}:NodeFS`, NodeFS);\n\nlet writeStreamCalls = 0;\n\nlet threadId;\ntry {\n  ({threadId} = require('worker_threads'));\n} catch {\n  //\n}\n\n// Generate a temporary file path used for atomic writing of files.\nfunction getTempFilePath(filePath: FilePath) {\n  writeStreamCalls = writeStreamCalls % Number.MAX_SAFE_INTEGER;\n  return (\n    filePath +\n    '.' +\n    process.pid +\n    (threadId != null ? '.' + threadId : '') +\n    '.' +\n    (writeStreamCalls++).toString(36)\n  );\n}\n","var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          retry()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      retry()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n}\n\nfunction retry () {\n  var elem = fs[gracefulQueue].shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n","var constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      var backoff = 0;\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 60000) {\n          setTimeout(function() {\n            fs.stat(to, function (stater, st) {\n              if (stater && stater.code === \"ENOENT\")\n                fs$rename(from, to, CB);\n              else\n                cb(er)\n            })\n          }, backoff)\n          if (backoff < 100)\n            backoff += 10;\n          return;\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) {\n    function read (fd, buffer, offset, length, position, callback_) {\n      var callback\n      if (callback_ && typeof callback_ === 'function') {\n        var eagCounter = 0\n        callback = function (er, _, __) {\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter ++\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n          }\n          callback_.apply(this, arguments)\n        }\n      }\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n    }\n\n    // This ensures `util.promisify` works as it does for native `fs.read`.\n    read.__proto__ = fs$read\n    return read\n  })(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options, cb) {\n      if (typeof options === 'function') {\n        cb = options\n        options = null\n      }\n      function callback (er, stats) {\n        if (stats) {\n          if (stats.uid < 0) stats.uid += 0x100000000\n          if (stats.gid < 0) stats.gid += 0x100000000\n        }\n        if (cb) cb.apply(this, arguments)\n      }\n      return options ? orig.call(fs, target, options, callback)\n        : orig.call(fs, target, callback)\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options) {\n      var stats = options ? orig.call(fs, target, options)\n        : orig.call(fs, target)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n","var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = clone\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: obj.__proto__ }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n","var fs = require('fs'),\n    path = require('path');\n\nmodule.exports = ncp;\nncp.ncp = ncp;\n\nfunction ncp (source, dest, options, callback) {\n  var cback = callback;\n\n  if (!callback) {\n    cback = options;\n    options = {};\n  }\n\n  var basePath = process.cwd(),\n      currentPath = path.resolve(basePath, source),\n      targetPath = path.resolve(basePath, dest),\n      filter = options.filter,\n      rename = options.rename,\n      transform = options.transform,\n      clobber = options.clobber !== false,\n      modified = options.modified,\n      dereference = options.dereference,\n      errs = null,\n      started = 0,\n      finished = 0,\n      running = 0,\n      limit = options.limit || ncp.limit || 16;\n\n  limit = (limit < 1) ? 1 : (limit > 512) ? 512 : limit;\n\n  startCopy(currentPath);\n  \n  function startCopy(source) {\n    started++;\n    if (filter) {\n      if (filter instanceof RegExp) {\n        if (!filter.test(source)) {\n          return cb(true);\n        }\n      }\n      else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return cb(true);\n        }\n      }\n    }\n    return getStats(source);\n  }\n\n  function getStats(source) {\n    var stat = dereference ? fs.stat : fs.lstat;\n    if (running >= limit) {\n      return setImmediate(function () {\n        getStats(source);\n      });\n    }\n    running++;\n    stat(source, function (err, stats) {\n      var item = {};\n      if (err) {\n        return onError(err);\n      }\n\n      // We need to get the mode from the stats object and preserve it.\n      item.name = source;\n      item.mode = stats.mode;\n      item.mtime = stats.mtime; //modified time\n      item.atime = stats.atime; //access time\n\n      if (stats.isDirectory()) {\n        return onDir(item);\n      }\n      else if (stats.isFile()) {\n        return onFile(item);\n      }\n      else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source);\n      }\n    });\n  }\n\n  function onFile(file) {\n    var target = file.name.replace(currentPath, targetPath);\n    if(rename) {\n      target =  rename(target);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return copyFile(file, target);\n      }\n      if(clobber) {\n        rmFile(target, function () {\n          copyFile(file, target);\n        });\n      }\n      if (modified) {\n        var stat = dereference ? fs.stat : fs.lstat;\n        stat(target, function(err, stats) {\n            //if souce modified time greater to target modified time copy file\n            if (file.mtime.getTime()>stats.mtime.getTime())\n                copyFile(file, target);\n            else return cb();\n        });\n      }\n      else {\n        return cb();\n      }\n    });\n  }\n\n  function copyFile(file, target) {\n    var readStream = fs.createReadStream(file.name),\n        writeStream = fs.createWriteStream(target, { mode: file.mode });\n    \n    readStream.on('error', onError);\n    writeStream.on('error', onError);\n    \n    if(transform) {\n      transform(readStream, writeStream, file);\n    } else {\n      writeStream.on('open', function() {\n        readStream.pipe(writeStream);\n      });\n    }\n    writeStream.once('finish', function() {\n        if (modified) {\n            //target file modified date sync.\n            fs.utimesSync(target, file.atime, file.mtime);\n            cb();\n        }\n        else cb();\n    });\n  }\n\n  function rmFile(file, done) {\n    fs.unlink(file, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return done();\n    });\n  }\n\n  function onDir(dir) {\n    var target = dir.name.replace(currentPath, targetPath);\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target);\n      }\n      copyDir(dir.name);\n    });\n  }\n\n  function mkDir(dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      copyDir(dir.name);\n    });\n  }\n\n  function copyDir(dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) {\n        return onError(err);\n      }\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item));\n      });\n      return cb();\n    });\n  }\n\n  function onLink(link) {\n    var target = link.replace(currentPath, targetPath);\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) {\n        return onError(err);\n      }\n      checkLink(resolvedPath, target);\n    });\n  }\n\n  function checkLink(resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target);\n      }\n      fs.readlink(target, function (err, targetDest) {\n        if (err) {\n          return onError(err);\n        }\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest);\n        }\n        if (targetDest === resolvedPath) {\n          return cb();\n        }\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target);\n        });\n      });\n    });\n  }\n\n  function makeLink(linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return cb();\n    });\n  }\n\n  function isWritable(path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true);\n        return done(false);\n      }\n      return done(false);\n    });\n  }\n\n  function onError(err) {\n    if (options.stopOnError) {\n      return cback(err);\n    }\n    else if (!errs && options.errs) {\n      errs = fs.createWriteStream(options.errs);\n    }\n    else if (!errs) {\n      errs = [];\n    }\n    if (typeof errs.write === 'undefined') {\n      errs.push(err);\n    }\n    else { \n      errs.write(err.stack + '\\n\\n');\n    }\n    return cb();\n  }\n\n  function cb(skipped) {\n    if (!skipped) running--;\n    finished++;\n    if ((started === finished) && (running === 0)) {\n      if (cback !== undefined ) {\n        return errs ? cback(errs) : cback(null);\n      }\n    }\n  }\n}\n\n\n","var fs = require('graceful-fs');\nvar Writable = require('stream').Writable;\nvar util = require('util');\nvar MurmurHash3 = require('imurmurhash');\nvar iferr = require('iferr');\nvar crypto = require('crypto');\nvar threadId = require('./thread-id');\n\nfunction murmurhex() {\n  var hash = MurmurHash3('');\n  for (var ii = 0; ii < arguments.length; ++ii) {\n    hash.hash('' + arguments[ii]);\n  }\n  return hash.result();\n}\n\nvar invocations = 0;\nfunction getTmpname(filename) {\n  return (\n    filename + '.' + murmurhex(__filename, process.pid, threadId, ++invocations)\n  );\n}\n\nvar setImmediate = global.setImmediate || setTimeout;\n\nmodule.exports = WriteStreamAtomic;\n\n// Requirements:\n//   1. Write everything written to the stream to a temp file.\n//   2. If there are no errors:\n//      a. moves the temp file into its final destination\n//      b. emits `finish` & `closed` ONLY after the file is\n//         fully flushed and renamed.\n//   3. If there's an error, removes the temp file.\n\nutil.inherits(WriteStreamAtomic, Writable);\nfunction WriteStreamAtomic(path, options) {\n  if (!(this instanceof WriteStreamAtomic)) {\n    return new WriteStreamAtomic(path, options);\n  }\n  Writable.call(this, options);\n\n  this.__isWin =\n    options && options.hasOwnProperty('isWin')\n      ? options.isWin\n      : process.platform === 'win32';\n\n  this.__atomicTarget = path;\n  this.__atomicTmp = getTmpname(path);\n\n  this.__atomicChown = options && options.chown;\n\n  this.__atomicClosed = false;\n\n  this.__atomicStream = fs.WriteStream(this.__atomicTmp, options);\n\n  this.__atomicStream.once('open', handleOpen(this));\n  this.__atomicStream.once('close', handleClose(this));\n  this.__atomicStream.once('error', handleError(this));\n}\n\n// We have to suppress default finish emitting, because ordinarily it\n// would happen as soon as `end` is called on us and all of the\n// data has been written to our target stream. So we suppress\n// finish from being emitted here, and only emit it after our\n// target stream is closed and we've moved everything around.\nWriteStreamAtomic.prototype.emit = function (event) {\n  if (event === 'finish') return this.__atomicStream.end();\n  return Writable.prototype.emit.apply(this, arguments);\n};\n\nWriteStreamAtomic.prototype._write = function (buffer, encoding, cb) {\n  var flushed = this.__atomicStream.write(buffer, encoding);\n  if (flushed) return cb();\n  this.__atomicStream.once('drain', cb);\n};\n\nfunction handleOpen(writeStream) {\n  return function (fd) {\n    writeStream.emit('open', fd);\n  };\n}\n\nfunction handleClose(writeStream) {\n  return function () {\n    if (writeStream.__atomicClosed) return;\n    writeStream.__atomicClosed = true;\n    if (writeStream.__atomicChown) {\n      var uid = writeStream.__atomicChown.uid;\n      var gid = writeStream.__atomicChown.gid;\n      return fs.chown(\n        writeStream.__atomicTmp,\n        uid,\n        gid,\n        iferr(cleanup, moveIntoPlace),\n      );\n    } else {\n      moveIntoPlace();\n    }\n  };\n\n  function moveIntoPlace() {\n    fs.rename(\n      writeStream.__atomicTmp,\n      writeStream.__atomicTarget,\n      iferr(trapWindowsEPERM, end),\n    );\n  }\n\n  function trapWindowsEPERM(err) {\n    if (\n      writeStream.__isWin &&\n      err.syscall &&\n      err.syscall === 'rename' &&\n      err.code &&\n      err.code === 'EPERM'\n    ) {\n      checkFileHashes(err);\n    } else {\n      cleanup(err);\n    }\n  }\n\n  function checkFileHashes(eperm) {\n    var inprocess = 2;\n    var tmpFileHash = crypto.createHash('sha512');\n    var targetFileHash = crypto.createHash('sha512');\n\n    fs.createReadStream(writeStream.__atomicTmp)\n      .on('data', function (data, enc) {\n        tmpFileHash.update(data, enc);\n      })\n      .on('error', fileHashError)\n      .on('end', fileHashComplete);\n    fs.createReadStream(writeStream.__atomicTarget)\n      .on('data', function (data, enc) {\n        targetFileHash.update(data, enc);\n      })\n      .on('error', fileHashError)\n      .on('end', fileHashComplete);\n\n    function fileHashError() {\n      if (inprocess === 0) return;\n      inprocess = 0;\n      cleanup(eperm);\n    }\n\n    function fileHashComplete() {\n      if (inprocess === 0) return;\n      if (--inprocess) return;\n      if (tmpFileHash.digest('hex') === targetFileHash.digest('hex')) {\n        return cleanup();\n      } else {\n        return cleanup(eperm);\n      }\n    }\n  }\n\n  function cleanup(err) {\n    fs.unlink(writeStream.__atomicTmp, function () {\n      if (err) {\n        writeStream.emit('error', err);\n        writeStream.emit('close');\n      } else {\n        end();\n      }\n    });\n  }\n\n  function end() {\n    // We have to use our parent class directly because we suppress `finish`\n    // events fired via our own emit method.\n    Writable.prototype.emit.call(writeStream, 'finish');\n\n    // Delay the close to provide the same temporal separation a physical\n    // file operation would have– that is, the close event is emitted only\n    // after the async close operation completes.\n    setImmediate(function () {\n      writeStream.emit('close');\n    });\n  }\n}\n\nfunction handleError(writeStream) {\n  return function (er) {\n    cleanupSync();\n    writeStream.emit('error', er);\n    writeStream.__atomicClosed = true;\n    writeStream.emit('close');\n  };\n  function cleanupSync() {\n    try {\n      fs.unlinkSync(writeStream.__atomicTmp);\n    } finally {\n      return;\n    }\n  }\n}\n","/**\n * @preserve\n * JS Implementation of incremental MurmurHash3 (r150) (as of May 10, 2013)\n *\n * @author <a href=\"mailto:jensyt@gmail.com\">Jens Taylor</a>\n * @see http://github.com/homebrewing/brauhaus-diff\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n */\n(function(){\n    var cache;\n\n    // Call this function without `new` to use the cached object (good for\n    // single-threaded environments), or with `new` to create a new object.\n    //\n    // @param {string} key A UTF-16 or ASCII string\n    // @param {number} seed An optional positive integer\n    // @return {object} A MurmurHash3 object for incremental hashing\n    function MurmurHash3(key, seed) {\n        var m = this instanceof MurmurHash3 ? this : cache;\n        m.reset(seed)\n        if (typeof key === 'string' && key.length > 0) {\n            m.hash(key);\n        }\n\n        if (m !== this) {\n            return m;\n        }\n    };\n\n    // Incrementally add a string to this hash\n    //\n    // @param {string} key A UTF-16 or ASCII string\n    // @return {object} this\n    MurmurHash3.prototype.hash = function(key) {\n        var h1, k1, i, top, len;\n\n        len = key.length;\n        this.len += len;\n\n        k1 = this.k1;\n        i = 0;\n        switch (this.rem) {\n            case 0: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) : 0;\n            case 1: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 8 : 0;\n            case 2: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 16 : 0;\n            case 3:\n                k1 ^= len > i ? (key.charCodeAt(i) & 0xff) << 24 : 0;\n                k1 ^= len > i ? (key.charCodeAt(i++) & 0xff00) >> 8 : 0;\n        }\n\n        this.rem = (len + this.rem) & 3; // & 3 is same as % 4\n        len -= this.rem;\n        if (len > 0) {\n            h1 = this.h1;\n            while (1) {\n                k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\n                k1 = (k1 << 15) | (k1 >>> 17);\n                k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\n\n                h1 ^= k1;\n                h1 = (h1 << 13) | (h1 >>> 19);\n                h1 = (h1 * 5 + 0xe6546b64) & 0xffffffff;\n\n                if (i >= len) {\n                    break;\n                }\n\n                k1 = ((key.charCodeAt(i++) & 0xffff)) ^\n                     ((key.charCodeAt(i++) & 0xffff) << 8) ^\n                     ((key.charCodeAt(i++) & 0xffff) << 16);\n                top = key.charCodeAt(i++);\n                k1 ^= ((top & 0xff) << 24) ^\n                      ((top & 0xff00) >> 8);\n            }\n\n            k1 = 0;\n            switch (this.rem) {\n                case 3: k1 ^= (key.charCodeAt(i + 2) & 0xffff) << 16;\n                case 2: k1 ^= (key.charCodeAt(i + 1) & 0xffff) << 8;\n                case 1: k1 ^= (key.charCodeAt(i) & 0xffff);\n            }\n\n            this.h1 = h1;\n        }\n\n        this.k1 = k1;\n        return this;\n    };\n\n    // Get the result of this hash\n    //\n    // @return {number} The 32-bit hash\n    MurmurHash3.prototype.result = function() {\n        var k1, h1;\n        \n        k1 = this.k1;\n        h1 = this.h1;\n\n        if (k1 > 0) {\n            k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\n            h1 ^= k1;\n        }\n\n        h1 ^= this.len;\n\n        h1 ^= h1 >>> 16;\n        h1 = (h1 * 0xca6b + (h1 & 0xffff) * 0x85eb0000) & 0xffffffff;\n        h1 ^= h1 >>> 13;\n        h1 = (h1 * 0xae35 + (h1 & 0xffff) * 0xc2b20000) & 0xffffffff;\n        h1 ^= h1 >>> 16;\n\n        return h1 >>> 0;\n    };\n\n    // Reset the hash object for reuse\n    //\n    // @param {number} seed An optional positive integer\n    MurmurHash3.prototype.reset = function(seed) {\n        this.h1 = typeof seed === 'number' ? seed : 0;\n        this.rem = this.k1 = this.len = 0;\n        return this;\n    };\n\n    // A cached object to use. This can be safely used if you're in a single-\n    // threaded environment, otherwise you need to create new hashes to use.\n    cache = new MurmurHash3();\n\n    if (typeof(module) != 'undefined') {\n        module.exports = MurmurHash3;\n    } else {\n        this.MurmurHash3 = MurmurHash3;\n    }\n}());\n","'use strict';\n\nvar threadId;\ntry {\n  var Worker = require('worker_threads');\n  if (Worker.isMainThread) {\n    threadId = -1;\n  } else {\n    threadId = Worker.threadId;\n  }\n} catch (e) {\n  // no worker support\n  threadId = -1;\n}\n\nmodule.exports = threadId;\n","{\n  \"name\": \"@parcel/fs\",\n  \"version\": \"2.4.0\",\n  \"description\": \"Blazing fast, zero configuration web application bundler\",\n  \"license\": \"MIT\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"funding\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/parcel\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/parcel-bundler/parcel.git\"\n  },\n  \"main\": \"lib/index.js\",\n  \"source\": \"src/index.js\",\n  \"types\": \"index.d.ts\",\n  \"engines\": {\n    \"node\": \">= 12.0.0\"\n  },\n  \"targets\": {\n    \"types\": false,\n    \"main\": {\n      \"includeNodeModules\": {\n        \"@parcel/core\": false,\n        \"@parcel/fs-search\": false,\n        \"@parcel/types\": false,\n        \"@parcel/utils\": false,\n        \"@parcel/watcher\": false,\n        \"@parcel/workers\": false\n      }\n    },\n    \"browser\": {\n      \"includeNodeModules\": {\n        \"@parcel/core\": false,\n        \"@parcel/fs-search\": false,\n        \"@parcel/types\": false,\n        \"@parcel/utils\": false,\n        \"@parcel/watcher\": false,\n        \"@parcel/workers\": false\n      }\n    }\n  },\n  \"scripts\": {\n    \"build-ts\": \"mkdir -p lib && flow-to-ts src/types.js > lib/types.d.ts\",\n    \"check-ts\": \"tsc --noEmit index.d.ts\"\n  },\n  \"dependencies\": {\n    \"@parcel/fs-search\": \"2.4.0\",\n    \"@parcel/types\": \"2.4.0\",\n    \"@parcel/utils\": \"2.4.0\",\n    \"@parcel/watcher\": \"^2.0.0\",\n    \"@parcel/workers\": \"2.4.0\"\n  },\n  \"devDependencies\": {\n    \"@parcel/fs-write-stream-atomic\": \"2.4.0\",\n    \"graceful-fs\": \"^4.2.4\",\n    \"ncp\": \"^2.0.0\",\n    \"nullthrows\": \"^1.1.1\",\n    \"utility-types\": \"^3.10.0\"\n  },\n  \"peerDependencies\": {\n    \"@parcel/core\": \"^2.4.0\"\n  },\n  \"browser\": {\n    \"@parcel/fs\": \"./lib/browser.js\",\n    \"./src/NodeFS.js\": \"./src/NodeFS.browser.js\"\n  },\n  \"gitHead\": \"b1bbfdab2e902d33c0b6ff75bfba2d22283a8de6\"\n}\n","// @flow\nimport type {FilePath} from '@parcel/types';\nimport type {FileSystem} from './types';\nimport path from 'path';\n\nexport function findNodeModule(\n  fs: FileSystem,\n  moduleName: string,\n  dir: FilePath,\n): ?FilePath {\n  let {root} = path.parse(dir);\n  while (dir !== root) {\n    // Skip node_modules directories\n    if (path.basename(dir) === 'node_modules') {\n      dir = path.dirname(dir);\n    }\n\n    try {\n      let moduleDir = path.join(dir, 'node_modules', moduleName);\n      let stats = fs.statSync(moduleDir);\n      if (stats.isDirectory()) {\n        return moduleDir;\n      }\n    } catch (err) {\n      // ignore\n    }\n\n    // Move up a directory\n    dir = path.dirname(dir);\n  }\n\n  return null;\n}\n\nexport function findAncestorFile(\n  fs: FileSystem,\n  fileNames: Array<string>,\n  dir: FilePath,\n  root: FilePath,\n): ?FilePath {\n  let {root: pathRoot} = path.parse(dir);\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (path.basename(dir) === 'node_modules') {\n      return null;\n    }\n\n    for (const fileName of fileNames) {\n      let filePath = path.join(dir, fileName);\n      try {\n        if (fs.statSync(filePath).isFile()) {\n          return filePath;\n        }\n      } catch (err) {\n        // ignore\n      }\n    }\n\n    if (dir === root || dir === pathRoot) {\n      break;\n    }\n\n    dir = path.dirname(dir);\n  }\n\n  return null;\n}\n\nexport function findFirstFile(\n  fs: FileSystem,\n  filePaths: Array<FilePath>,\n): ?FilePath {\n  for (let filePath of filePaths) {\n    try {\n      if (fs.statSync(filePath).isFile()) {\n        return filePath;\n      }\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n","// @flow\n\nimport type {FileSystem, FileOptions, ReaddirOptions, Encoding} from './types';\nimport type {FilePath} from '@parcel/types';\nimport type {\n  Event,\n  Options as WatcherOptions,\n  AsyncSubscription,\n} from '@parcel/watcher';\n\nimport path from 'path';\nimport {Readable, Writable} from 'stream';\nimport {registerSerializableClass} from '@parcel/core';\nimport {SharedBuffer} from '@parcel/utils';\nimport packageJSON from '../package.json';\nimport WorkerFarm, {Handle} from '@parcel/workers';\nimport nullthrows from 'nullthrows';\nimport EventEmitter from 'events';\nimport {findAncestorFile, findNodeModule, findFirstFile} from './find';\n\nconst instances: Map<number, MemoryFS> = new Map();\nlet id = 0;\n\ntype HandleFunction = (...args: Array<any>) => any;\ntype SerializedMemoryFS = {\n  id: number,\n  handle: any,\n  dirs: Map<FilePath, Directory>,\n  files: Map<FilePath, File>,\n  symlinks: Map<FilePath, FilePath>,\n  ...\n};\n\ntype WorkerEvent = {|\n  type: 'writeFile' | 'unlink' | 'mkdir' | 'symlink',\n  path: FilePath,\n  entry?: Entry,\n  target?: FilePath,\n|};\n\ntype ResolveFunction = () => mixed;\n\nexport class MemoryFS implements FileSystem {\n  dirs: Map<FilePath, Directory>;\n  files: Map<FilePath, File>;\n  symlinks: Map<FilePath, FilePath>;\n  watchers: Map<FilePath, Set<Watcher>>;\n  events: Array<Event>;\n  id: number;\n  handle: Handle;\n  farm: WorkerFarm;\n  _cwd: FilePath;\n  _eventQueue: Array<Event>;\n  _watcherTimer: TimeoutID;\n  _numWorkerInstances: number = 0;\n  _workerHandles: Array<Handle>;\n  _workerRegisterResolves: Array<ResolveFunction> = [];\n  _emitter: EventEmitter = new EventEmitter();\n\n  constructor(workerFarm: WorkerFarm) {\n    this.farm = workerFarm;\n    this.dirs = new Map([['/', new Directory()]]);\n    this.files = new Map();\n    this.symlinks = new Map();\n    this.watchers = new Map();\n    this.events = [];\n    this.id = id++;\n    this._cwd = '/';\n    this._workerHandles = [];\n    this._eventQueue = [];\n    instances.set(this.id, this);\n    this._emitter.on('allWorkersRegistered', () => {\n      for (let resolve of this._workerRegisterResolves) {\n        resolve();\n      }\n      this._workerRegisterResolves = [];\n    });\n  }\n\n  static deserialize(opts: SerializedMemoryFS): MemoryFS | WorkerFS {\n    let existing = instances.get(opts.id);\n    if (existing != null) {\n      // Correct the count of worker instances since serialization assumes a new instance is created\n      WorkerFarm.getWorkerApi().runHandle(opts.handle, [\n        'decrementWorkerInstance',\n        [],\n      ]);\n      return existing;\n    }\n\n    let fs = new WorkerFS(opts.id, nullthrows(opts.handle));\n    fs.dirs = opts.dirs;\n    fs.files = opts.files;\n    fs.symlinks = opts.symlinks;\n    return fs;\n  }\n\n  serialize(): SerializedMemoryFS {\n    if (!this.handle) {\n      this.handle = this.farm.createReverseHandle(\n        (fn: string, args: Array<mixed>) => {\n          // $FlowFixMe\n          return this[fn](...args);\n        },\n      );\n    }\n\n    // If a worker instance already exists, it will decrement this number\n    this._numWorkerInstances++;\n\n    return {\n      $$raw: false,\n      id: this.id,\n      handle: this.handle,\n      dirs: this.dirs,\n      files: this.files,\n      symlinks: this.symlinks,\n    };\n  }\n\n  decrementWorkerInstance() {\n    this._numWorkerInstances--;\n    if (this._numWorkerInstances === this._workerHandles.length) {\n      this._emitter.emit('allWorkersRegistered');\n    }\n  }\n\n  cwd(): FilePath {\n    return this._cwd;\n  }\n\n  chdir(dir: FilePath) {\n    this._cwd = dir;\n  }\n\n  _normalizePath(filePath: FilePath, realpath: boolean = true): FilePath {\n    filePath = path.resolve(this.cwd(), filePath);\n\n    // get realpath by following symlinks\n    if (realpath) {\n      let {root, dir, base} = path.parse(filePath);\n      let parts = dir.slice(root.length).split(path.sep).concat(base);\n      let res = root;\n      for (let part of parts) {\n        res = path.join(res, part);\n        let symlink = this.symlinks.get(res);\n        if (symlink) {\n          res = symlink;\n        }\n      }\n\n      return res;\n    }\n\n    return filePath;\n  }\n\n  async writeFile(\n    filePath: FilePath,\n    contents: Buffer | string,\n    options?: ?FileOptions,\n  ) {\n    filePath = this._normalizePath(filePath);\n    if (this.dirs.has(filePath)) {\n      throw new FSError('EISDIR', filePath, 'is a directory');\n    }\n\n    let dir = path.dirname(filePath);\n    if (!this.dirs.has(dir)) {\n      throw new FSError('ENOENT', dir, 'does not exist');\n    }\n\n    let buffer = makeShared(contents);\n    let file = this.files.get(filePath);\n    let mode = (options && options.mode) || 0o666;\n    if (file) {\n      file.write(buffer, mode);\n      this.files.set(filePath, file);\n    } else {\n      this.files.set(filePath, new File(buffer, mode));\n    }\n\n    await this._sendWorkerEvent({\n      type: 'writeFile',\n      path: filePath,\n      entry: this.files.get(filePath),\n    });\n\n    this._triggerEvent({\n      type: file ? 'update' : 'create',\n      path: filePath,\n    });\n  }\n\n  // eslint-disable-next-line require-await\n  async readFile(filePath: FilePath, encoding?: Encoding): Promise<any> {\n    return this.readFileSync(filePath, encoding);\n  }\n\n  readFileSync(filePath: FilePath, encoding?: Encoding): any {\n    filePath = this._normalizePath(filePath);\n    let file = this.files.get(filePath);\n    if (file == null) {\n      throw new FSError('ENOENT', filePath, 'does not exist');\n    }\n\n    let buffer = file.read();\n    if (encoding) {\n      return buffer.toString(encoding);\n    }\n\n    return buffer;\n  }\n\n  async copyFile(source: FilePath, destination: FilePath) {\n    let contents = await this.readFile(source);\n    await this.writeFile(destination, contents);\n  }\n\n  statSync(filePath: FilePath): Stat {\n    filePath = this._normalizePath(filePath);\n\n    let dir = this.dirs.get(filePath);\n    if (dir) {\n      return dir.stat();\n    }\n\n    let file = this.files.get(filePath);\n    if (file == null) {\n      throw new FSError('ENOENT', filePath, 'does not exist');\n    }\n\n    return file.stat();\n  }\n\n  // eslint-disable-next-line require-await\n  async stat(filePath: FilePath): Promise<Stat> {\n    return this.statSync(filePath);\n  }\n\n  readdirSync(dir: FilePath, opts?: ReaddirOptions): any {\n    dir = this._normalizePath(dir);\n    if (!this.dirs.has(dir)) {\n      throw new FSError('ENOENT', dir, 'does not exist');\n    }\n\n    dir += path.sep;\n\n    let res = [];\n    for (let [filePath, entry] of this.dirs) {\n      if (\n        filePath.startsWith(dir) &&\n        filePath.indexOf(path.sep, dir.length) === -1\n      ) {\n        let name = filePath.slice(dir.length);\n        if (opts?.withFileTypes) {\n          res.push(new Dirent(name, entry));\n        } else {\n          res.push(name);\n        }\n      }\n    }\n\n    for (let [filePath, entry] of this.files) {\n      if (\n        filePath.startsWith(dir) &&\n        filePath.indexOf(path.sep, dir.length) === -1\n      ) {\n        let name = filePath.slice(dir.length);\n        if (opts?.withFileTypes) {\n          res.push(new Dirent(name, entry));\n        } else {\n          res.push(name);\n        }\n      }\n    }\n\n    for (let [from] of this.symlinks) {\n      if (from.startsWith(dir) && from.indexOf(path.sep, dir.length) === -1) {\n        let name = from.slice(dir.length);\n        if (opts?.withFileTypes) {\n          res.push(new Dirent(name, {mode: S_IFLNK}));\n        } else {\n          res.push(name);\n        }\n      }\n    }\n\n    return res;\n  }\n\n  // eslint-disable-next-line require-await\n  async readdir(dir: FilePath, opts?: ReaddirOptions): Promise<any> {\n    return this.readdirSync(dir, opts);\n  }\n\n  async unlink(filePath: FilePath): Promise<void> {\n    filePath = this._normalizePath(filePath);\n    if (!this.files.has(filePath) && !this.dirs.has(filePath)) {\n      throw new FSError('ENOENT', filePath, 'does not exist');\n    }\n\n    this.files.delete(filePath);\n    this.dirs.delete(filePath);\n    this.watchers.delete(filePath);\n\n    await this._sendWorkerEvent({\n      type: 'unlink',\n      path: filePath,\n    });\n\n    this._triggerEvent({\n      type: 'delete',\n      path: filePath,\n    });\n\n    return Promise.resolve();\n  }\n\n  async mkdirp(dir: FilePath): Promise<void> {\n    dir = this._normalizePath(dir);\n    if (this.dirs.has(dir)) {\n      return Promise.resolve();\n    }\n\n    if (this.files.has(dir)) {\n      throw new FSError('ENOENT', dir, 'is not a directory');\n    }\n\n    let root = path.parse(dir).root;\n    while (dir !== root) {\n      if (this.dirs.has(dir)) {\n        break;\n      }\n\n      this.dirs.set(dir, new Directory());\n      await this._sendWorkerEvent({\n        type: 'mkdir',\n        path: dir,\n      });\n\n      this._triggerEvent({\n        type: 'create',\n        path: dir,\n      });\n\n      dir = path.dirname(dir);\n    }\n\n    return Promise.resolve();\n  }\n\n  async rimraf(filePath: FilePath): Promise<void> {\n    filePath = this._normalizePath(filePath);\n\n    if (this.dirs.has(filePath)) {\n      let dir = filePath + path.sep;\n      for (let filePath of this.files.keys()) {\n        if (filePath.startsWith(dir)) {\n          this.files.delete(filePath);\n          await this._sendWorkerEvent({\n            type: 'unlink',\n            path: filePath,\n          });\n\n          this._triggerEvent({\n            type: 'delete',\n            path: filePath,\n          });\n        }\n      }\n\n      for (let dirPath of this.dirs.keys()) {\n        if (dirPath.startsWith(dir)) {\n          this.dirs.delete(dirPath);\n          this.watchers.delete(dirPath);\n          await this._sendWorkerEvent({\n            type: 'unlink',\n            path: filePath,\n          });\n\n          this._triggerEvent({\n            type: 'delete',\n            path: dirPath,\n          });\n        }\n      }\n\n      for (let filePath of this.symlinks.keys()) {\n        if (filePath.startsWith(dir)) {\n          this.symlinks.delete(filePath);\n          await this._sendWorkerEvent({\n            type: 'unlink',\n            path: filePath,\n          });\n        }\n      }\n\n      this.dirs.delete(filePath);\n      await this._sendWorkerEvent({\n        type: 'unlink',\n        path: filePath,\n      });\n\n      this._triggerEvent({\n        type: 'delete',\n        path: filePath,\n      });\n    } else if (this.files.has(filePath)) {\n      this.files.delete(filePath);\n      await this._sendWorkerEvent({\n        type: 'unlink',\n        path: filePath,\n      });\n\n      this._triggerEvent({\n        type: 'delete',\n        path: filePath,\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  async ncp(source: FilePath, destination: FilePath) {\n    source = this._normalizePath(source);\n\n    if (this.dirs.has(source)) {\n      if (!this.dirs.has(destination)) {\n        this.dirs.set(destination, new Directory());\n        await this._sendWorkerEvent({\n          type: 'mkdir',\n          path: destination,\n        });\n\n        this._triggerEvent({\n          type: 'create',\n          path: destination,\n        });\n      }\n\n      let dir = source + path.sep;\n      for (let dirPath of this.dirs.keys()) {\n        if (dirPath.startsWith(dir)) {\n          let destName = path.join(destination, dirPath.slice(dir.length));\n          if (!this.dirs.has(destName)) {\n            this.dirs.set(destName, new Directory());\n            await this._sendWorkerEvent({\n              type: 'mkdir',\n              path: destination,\n            });\n            this._triggerEvent({\n              type: 'create',\n              path: destName,\n            });\n          }\n        }\n      }\n\n      for (let [filePath, file] of this.files) {\n        if (filePath.startsWith(dir)) {\n          let destName = path.join(destination, filePath.slice(dir.length));\n          let exists = this.files.has(destName);\n          this.files.set(destName, file);\n          await this._sendWorkerEvent({\n            type: 'writeFile',\n            path: destName,\n            entry: file,\n          });\n\n          this._triggerEvent({\n            type: exists ? 'update' : 'create',\n            path: destName,\n          });\n        }\n      }\n    } else {\n      await this.copyFile(source, destination);\n    }\n  }\n\n  createReadStream(filePath: FilePath): ReadStream {\n    return new ReadStream(this, filePath);\n  }\n\n  createWriteStream(filePath: FilePath, options: ?FileOptions): WriteStream {\n    return new WriteStream(this, filePath, options);\n  }\n\n  realpathSync(filePath: FilePath): FilePath {\n    return this._normalizePath(filePath);\n  }\n\n  // eslint-disable-next-line require-await\n  async realpath(filePath: FilePath): Promise<FilePath> {\n    return this.realpathSync(filePath);\n  }\n\n  async symlink(target: FilePath, path: FilePath) {\n    target = this._normalizePath(target);\n    path = this._normalizePath(path);\n    this.symlinks.set(path, target);\n    await this._sendWorkerEvent({\n      type: 'symlink',\n      path,\n      target,\n    });\n  }\n\n  existsSync(filePath: FilePath): boolean {\n    filePath = this._normalizePath(filePath);\n    return this.files.has(filePath) || this.dirs.has(filePath);\n  }\n\n  // eslint-disable-next-line require-await\n  async exists(filePath: FilePath): Promise<boolean> {\n    return this.existsSync(filePath);\n  }\n\n  _triggerEvent(event: Event) {\n    this.events.push(event);\n    if (this.watchers.size === 0) {\n      return;\n    }\n\n    // Batch events\n    this._eventQueue.push(event);\n    clearTimeout(this._watcherTimer);\n\n    this._watcherTimer = setTimeout(() => {\n      let events = this._eventQueue;\n      this._eventQueue = [];\n\n      for (let [dir, watchers] of this.watchers) {\n        if (!dir.endsWith(path.sep)) {\n          dir += path.sep;\n        }\n\n        if (event.path.startsWith(dir)) {\n          for (let watcher of watchers) {\n            watcher.trigger(events);\n          }\n        }\n      }\n    }, 50);\n  }\n\n  _registerWorker(handle: Handle) {\n    this._workerHandles.push(handle);\n    if (this._numWorkerInstances === this._workerHandles.length) {\n      this._emitter.emit('allWorkersRegistered');\n    }\n  }\n\n  async _sendWorkerEvent(event: WorkerEvent) {\n    // Wait for worker instances to register their handles\n    while (this._workerHandles.length < this._numWorkerInstances) {\n      await new Promise(resolve => this._workerRegisterResolves.push(resolve));\n    }\n\n    await Promise.all(\n      this._workerHandles.map(workerHandle =>\n        this.farm.workerApi.runHandle(workerHandle, [event]),\n      ),\n    );\n  }\n\n  watch(\n    dir: FilePath,\n    fn: (err: ?Error, events: Array<Event>) => mixed,\n    opts: WatcherOptions,\n  ): Promise<AsyncSubscription> {\n    dir = this._normalizePath(dir);\n    let watcher = new Watcher(fn, opts);\n    let watchers = this.watchers.get(dir);\n    if (!watchers) {\n      watchers = new Set();\n      this.watchers.set(dir, watchers);\n    }\n\n    watchers.add(watcher);\n\n    return Promise.resolve({\n      unsubscribe: () => {\n        watchers = nullthrows(watchers);\n        watchers.delete(watcher);\n\n        if (watchers.size === 0) {\n          this.watchers.delete(dir);\n        }\n\n        return Promise.resolve();\n      },\n    });\n  }\n\n  async getEventsSince(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<Array<Event>> {\n    let contents = await this.readFile(snapshot, 'utf8');\n    let len = Number(contents);\n    let events = this.events.slice(len);\n    let ignore = opts.ignore;\n    if (ignore) {\n      events = events.filter(\n        event => !ignore.some(i => event.path.startsWith(i + path.sep)),\n      );\n    }\n\n    return events;\n  }\n\n  async writeSnapshot(dir: FilePath, snapshot: FilePath): Promise<void> {\n    await this.writeFile(snapshot, '' + this.events.length);\n  }\n\n  findAncestorFile(\n    fileNames: Array<string>,\n    fromDir: FilePath,\n    root: FilePath,\n  ): ?FilePath {\n    return findAncestorFile(this, fileNames, fromDir, root);\n  }\n\n  findNodeModule(moduleName: string, fromDir: FilePath): ?FilePath {\n    return findNodeModule(this, moduleName, fromDir);\n  }\n\n  findFirstFile(filePaths: Array<FilePath>): ?FilePath {\n    return findFirstFile(this, filePaths);\n  }\n}\n\nclass Watcher {\n  fn: (err: ?Error, events: Array<Event>) => mixed;\n  options: WatcherOptions;\n\n  constructor(\n    fn: (err: ?Error, events: Array<Event>) => mixed,\n    options: WatcherOptions,\n  ) {\n    this.fn = fn;\n    this.options = options;\n  }\n\n  trigger(events: Array<Event>) {\n    let ignore = this.options.ignore;\n    if (ignore) {\n      events = events.filter(\n        event => !ignore.some(i => event.path.startsWith(i + path.sep)),\n      );\n    }\n\n    if (events.length > 0) {\n      this.fn(null, events);\n    }\n  }\n}\n\nclass FSError extends Error {\n  code: string;\n  path: FilePath;\n  constructor(code: string, path: FilePath, message: string) {\n    super(`${code}: ${path} ${message}`);\n    this.name = 'FSError';\n    this.code = code;\n    this.path = path;\n    Error.captureStackTrace?.(this, this.constructor);\n  }\n}\n\nclass ReadStream extends Readable {\n  fs: FileSystem;\n  filePath: FilePath;\n  reading: boolean;\n  bytesRead: number;\n  constructor(fs: FileSystem, filePath: FilePath) {\n    super();\n    this.fs = fs;\n    this.filePath = filePath;\n    this.reading = false;\n    this.bytesRead = 0;\n  }\n\n  _read() {\n    if (this.reading) {\n      return;\n    }\n\n    this.reading = true;\n    this.fs.readFile(this.filePath).then(\n      res => {\n        this.bytesRead += res.byteLength;\n        this.push(res);\n        this.push(null);\n      },\n      err => {\n        this.emit('error', err);\n      },\n    );\n  }\n}\n\nclass WriteStream extends Writable {\n  fs: FileSystem;\n  filePath: FilePath;\n  options: ?FileOptions;\n  buffer: Buffer;\n\n  constructor(fs: FileSystem, filePath: FilePath, options: ?FileOptions) {\n    super({emitClose: true, autoDestroy: true});\n    this.fs = fs;\n    this.filePath = filePath;\n    this.options = options;\n    this.buffer = Buffer.alloc(0);\n  }\n\n  _write(\n    chunk: Buffer | string,\n    encoding: any,\n    callback: (error?: Error) => void,\n  ) {\n    let c = typeof chunk === 'string' ? Buffer.from(chunk, encoding) : chunk;\n    this.buffer = Buffer.concat([this.buffer, c]);\n    callback();\n  }\n\n  _final(callback: (error?: Error) => void) {\n    this.fs\n      .writeFile(this.filePath, this.buffer, this.options)\n      .then(callback)\n      .catch(callback);\n  }\n}\n\nconst S_IFREG = 0o100000;\nconst S_IFDIR = 0o040000;\nconst S_IFLNK = 0o120000;\n\nclass Entry {\n  mode: number;\n  atime: number;\n  mtime: number;\n  ctime: number;\n  birthtime: number;\n  constructor(mode: number) {\n    this.mode = mode;\n    let now = Date.now();\n    this.atime = now;\n    this.mtime = now;\n    this.ctime = now;\n    this.birthtime = now;\n  }\n\n  access() {\n    let now = Date.now();\n    this.atime = now;\n    this.ctime = now;\n  }\n\n  modify(mode: number) {\n    let now = Date.now();\n    this.mtime = now;\n    this.ctime = now;\n    this.mode = mode;\n  }\n\n  getSize(): number {\n    return 0;\n  }\n\n  stat(): Stat {\n    return new Stat(this);\n  }\n}\n\nclass Stat {\n  dev: number = 0;\n  ino: number = 0;\n  mode: number;\n  nlink: number = 0;\n  uid: number = 0;\n  gid: number = 0;\n  rdev: number = 0;\n  size: number;\n  blksize: number = 0;\n  blocks: number = 0;\n  atimeMs: number;\n  mtimeMs: number;\n  ctimeMs: number;\n  birthtimeMs: number;\n  atime: Date;\n  mtime: Date;\n  ctime: Date;\n  birthtime: Date;\n\n  constructor(entry: Entry) {\n    this.mode = entry.mode;\n    this.size = entry.getSize();\n    this.atimeMs = entry.atime;\n    this.mtimeMs = entry.mtime;\n    this.ctimeMs = entry.ctime;\n    this.birthtimeMs = entry.birthtime;\n    this.atime = new Date(entry.atime);\n    this.mtime = new Date(entry.mtime);\n    this.ctime = new Date(entry.ctime);\n    this.birthtime = new Date(entry.birthtime);\n  }\n\n  isFile(): boolean {\n    return Boolean(this.mode & S_IFREG);\n  }\n\n  isDirectory(): boolean {\n    return Boolean(this.mode & S_IFDIR);\n  }\n\n  isBlockDevice(): boolean {\n    return false;\n  }\n\n  isCharacterDevice(): boolean {\n    return false;\n  }\n\n  isSymbolicLink(): boolean {\n    return false;\n  }\n\n  isFIFO(): boolean {\n    return false;\n  }\n\n  isSocket(): boolean {\n    return false;\n  }\n}\n\nclass Dirent {\n  name: string;\n  #mode: number;\n\n  constructor(name: string, entry: interface {mode: number}) {\n    this.name = name;\n    this.#mode = entry.mode;\n  }\n\n  isFile(): boolean {\n    return Boolean(this.#mode & S_IFREG);\n  }\n\n  isDirectory(): boolean {\n    return Boolean(this.#mode & S_IFDIR);\n  }\n\n  isBlockDevice(): boolean {\n    return false;\n  }\n\n  isCharacterDevice(): boolean {\n    return false;\n  }\n\n  isSymbolicLink(): boolean {\n    return Boolean(this.#mode & S_IFLNK);\n  }\n\n  isFIFO(): boolean {\n    return false;\n  }\n\n  isSocket(): boolean {\n    return false;\n  }\n}\n\nclass File extends Entry {\n  buffer: Buffer;\n  constructor(buffer: Buffer, mode: number) {\n    super(S_IFREG | mode);\n    this.buffer = buffer;\n  }\n\n  read(): Buffer {\n    super.access();\n    return Buffer.from(this.buffer);\n  }\n\n  write(buffer: Buffer, mode: number) {\n    super.modify(S_IFREG | mode);\n    this.buffer = buffer;\n  }\n\n  getSize(): number {\n    return this.buffer.byteLength;\n  }\n}\n\nclass Directory extends Entry {\n  constructor() {\n    super(S_IFDIR);\n  }\n}\n\nfunction makeShared(contents: Buffer | string): Buffer {\n  if (typeof contents !== 'string' && contents.buffer instanceof SharedBuffer) {\n    return contents;\n  }\n\n  let length = Buffer.byteLength(contents);\n  let shared = new SharedBuffer(length);\n  let buffer = Buffer.from(shared);\n  if (typeof contents === 'string') {\n    buffer.write(contents);\n  } else {\n    buffer.set(contents);\n  }\n\n  return buffer;\n}\n\nclass WorkerFS extends MemoryFS {\n  id: number;\n  handleFn: HandleFunction;\n\n  constructor(id: number, handle: Handle) {\n    // TODO Make this not a subclass\n    // $FlowFixMe\n    super();\n    this.id = id;\n    this.handleFn = (methodName, args) =>\n      WorkerFarm.getWorkerApi().runHandle(handle, [methodName, args]);\n\n    this.handleFn('_registerWorker', [\n      WorkerFarm.getWorkerApi().createReverseHandle(event => {\n        switch (event.type) {\n          case 'writeFile':\n            this.files.set(event.path, event.entry);\n            break;\n          case 'unlink':\n            this.files.delete(event.path);\n            this.dirs.delete(event.path);\n            this.symlinks.delete(event.path);\n            break;\n          case 'mkdir':\n            this.dirs.set(event.path, new Directory());\n            break;\n          case 'symlink':\n            this.symlinks.set(event.path, event.target);\n            break;\n        }\n      }),\n    ]);\n  }\n\n  static deserialize(opts: SerializedMemoryFS): MemoryFS {\n    return nullthrows(instances.get(opts.id));\n  }\n\n  serialize(): SerializedMemoryFS {\n    // $FlowFixMe\n    return {\n      id: this.id,\n    };\n  }\n\n  writeFile(\n    filePath: FilePath,\n    contents: Buffer | string,\n    options: ?FileOptions,\n  ): Promise<void> {\n    super.writeFile(filePath, contents, options);\n    let buffer = makeShared(contents);\n    return this.handleFn('writeFile', [filePath, buffer, options]);\n  }\n\n  unlink(filePath: FilePath): Promise<void> {\n    super.unlink(filePath);\n    return this.handleFn('unlink', [filePath]);\n  }\n\n  mkdirp(dir: FilePath): Promise<void> {\n    super.mkdirp(dir);\n    return this.handleFn('mkdirp', [dir]);\n  }\n\n  rimraf(filePath: FilePath): Promise<void> {\n    super.rimraf(filePath);\n    return this.handleFn('rimraf', [filePath]);\n  }\n\n  ncp(source: FilePath, destination: FilePath): Promise<void> {\n    super.ncp(source, destination);\n    return this.handleFn('ncp', [source, destination]);\n  }\n\n  symlink(target: FilePath, path: FilePath): Promise<void> {\n    super.symlink(target, path);\n    return this.handleFn('symlink', [target, path]);\n  }\n}\n\nregisterSerializableClass(`${packageJSON.version}:MemoryFS`, MemoryFS);\nregisterSerializableClass(`${packageJSON.version}:WorkerFS`, WorkerFS);\nregisterSerializableClass(`${packageJSON.version}:Stat`, Stat);\nregisterSerializableClass(`${packageJSON.version}:File`, File);\nregisterSerializableClass(`${packageJSON.version}:Directory`, Directory);\n","'use strict';\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n  var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);\n  error.framesToPop = 1; // Skip nullthrows's own stack frame.\n  throw error;\n}\n\nmodule.exports = nullthrows;\nmodule.exports.default = nullthrows;\n\nObject.defineProperty(module.exports, '__esModule', {value: true});\n","// @flow\n\nimport type {Stats} from 'fs';\nimport type {FileSystem, ReaddirOptions} from './types';\nimport type {FilePath} from '@parcel/types';\nimport type {\n  Event,\n  Options as WatcherOptions,\n  AsyncSubscription,\n} from '@parcel/watcher';\n\nimport {registerSerializableClass} from '@parcel/core';\nimport packageJSON from '../package.json';\nimport {findAncestorFile, findNodeModule, findFirstFile} from './find';\n\nfunction read(method) {\n  return async function (...args: Array<any>) {\n    try {\n      return await this.writable[method](...args);\n    } catch (err) {\n      return this.readable[method](...args);\n    }\n  };\n}\n\nfunction readSync(method) {\n  return function (...args: Array<any>) {\n    try {\n      return this.writable[method](...args);\n    } catch (err) {\n      return this.readable[method](...args);\n    }\n  };\n}\n\nfunction write(method) {\n  return function (...args: Array<any>) {\n    return this.writable[method](...args);\n  };\n}\n\nfunction checkExists(method) {\n  return function (filePath: FilePath, ...args: Array<any>) {\n    if (this.writable.existsSync(filePath)) {\n      return this.writable[method](filePath, ...args);\n    }\n\n    return this.readable[method](filePath, ...args);\n  };\n}\n\nexport class OverlayFS implements FileSystem {\n  writable: FileSystem;\n  readable: FileSystem;\n  constructor(writable: FileSystem, readable: FileSystem) {\n    this.writable = writable;\n    this.readable = readable;\n  }\n\n  static deserialize(opts: any): OverlayFS {\n    return new OverlayFS(opts.writable, opts.readable);\n  }\n\n  serialize(): {|$$raw: boolean, readable: FileSystem, writable: FileSystem|} {\n    return {\n      $$raw: false,\n      writable: this.writable,\n      readable: this.readable,\n    };\n  }\n\n  readFile: (...args: Array<any>) => Promise<Buffer & string & $Shape<Stats>> =\n    read('readFile');\n  writeFile: (...args: Array<any>) => any = write('writeFile');\n  async copyFile(source: FilePath, destination: FilePath) {\n    if (await this.writable.exists(source)) {\n      await this.writable.writeFile(\n        destination,\n        await this.writable.readFile(source),\n      );\n    } else {\n      await this.writable.writeFile(\n        destination,\n        await this.readable.readFile(source),\n      );\n    }\n  }\n  stat: (...args: Array<any>) => Promise<Buffer & string & $Shape<Stats>> =\n    read('stat');\n  unlink: (...args: Array<any>) => any = write('unlink');\n  mkdirp: (...args: Array<any>) => any = write('mkdirp');\n  rimraf: (...args: Array<any>) => any = write('rimraf');\n  ncp: (...args: Array<any>) => any = write('ncp');\n  createReadStream: (filePath: FilePath, ...args: Array<any>) => any =\n    checkExists('createReadStream');\n  createWriteStream: (...args: Array<any>) => any = write('createWriteStream');\n  cwd: (...args: Array<any>) => any = readSync('cwd');\n  chdir: (...args: Array<any>) => any = readSync('chdir');\n  realpath: (filePath: FilePath, ...args: Array<any>) => any =\n    checkExists('realpath');\n\n  readFileSync: (...args: Array<any>) => any = readSync('readFileSync');\n  statSync: (...args: Array<any>) => any = readSync('statSync');\n  existsSync: (...args: Array<any>) => any = readSync('existsSync');\n  realpathSync: (filePath: FilePath, ...args: Array<any>) => any =\n    checkExists('realpathSync');\n\n  async exists(filePath: FilePath): Promise<boolean> {\n    return (\n      (await this.writable.exists(filePath)) || this.readable.exists(filePath)\n    );\n  }\n\n  async readdir(path: FilePath, opts?: ReaddirOptions): Promise<any> {\n    // Read from both filesystems and merge the results\n    let writable = [];\n    let readable = [];\n    try {\n      writable = await this.writable.readdir(path, opts);\n    } catch (err) {\n      // do nothing\n    }\n\n    try {\n      readable = await this.readable.readdir(path, opts);\n    } catch (err) {\n      // do nothing\n    }\n\n    return Array.from(new Set([...writable, ...readable]));\n  }\n\n  readdirSync(path: FilePath, opts?: ReaddirOptions): any {\n    // Read from both filesystems and merge the results\n    let writable = [];\n    let readable = [];\n    try {\n      writable = this.writable.readdirSync(path, opts);\n    } catch (err) {\n      // do nothing\n    }\n\n    try {\n      readable = this.readable.readdirSync(path, opts);\n    } catch (err) {\n      // do nothing\n    }\n\n    return Array.from(new Set([...writable, ...readable]));\n  }\n\n  async watch(\n    dir: FilePath,\n    fn: (err: ?Error, events: Array<Event>) => mixed,\n    opts: WatcherOptions,\n  ): Promise<AsyncSubscription> {\n    let writableSubscription = await this.writable.watch(dir, fn, opts);\n    let readableSubscription = await this.readable.watch(dir, fn, opts);\n    return {\n      unsubscribe: async () => {\n        await writableSubscription.unsubscribe();\n        await readableSubscription.unsubscribe();\n      },\n    };\n  }\n\n  async getEventsSince(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<Array<Event>> {\n    let writableEvents = await this.writable.getEventsSince(\n      dir,\n      snapshot,\n      opts,\n    );\n    let readableEvents = await this.readable.getEventsSince(\n      dir,\n      snapshot,\n      opts,\n    );\n    return [...writableEvents, ...readableEvents];\n  }\n\n  async writeSnapshot(\n    dir: FilePath,\n    snapshot: FilePath,\n    opts: WatcherOptions,\n  ): Promise<void> {\n    await this.writable.writeSnapshot(dir, snapshot, opts);\n  }\n\n  findAncestorFile(\n    fileNames: Array<string>,\n    fromDir: FilePath,\n    root: FilePath,\n  ): ?FilePath {\n    return findAncestorFile(this, fileNames, fromDir, root);\n  }\n\n  findNodeModule(moduleName: string, fromDir: FilePath): ?FilePath {\n    return findNodeModule(this, moduleName, fromDir);\n  }\n\n  findFirstFile(filePaths: Array<FilePath>): ?FilePath {\n    return findFirstFile(this, filePaths);\n  }\n}\n\nregisterSerializableClass(`${packageJSON.version}:OverlayFS`, OverlayFS);\n"],"names":["path","ncp","sourceFS","source","destinationFS","destination","mkdirp","files","readdir","file","sourcePath","join","destPath","stats","stat","isFile","Promise","resolve","reject","createReadStream","pipe","createWriteStream","on","isDirectory","fs","nativeFS","promisify","registerSerializableClass","fsWriteStreamAtomic","watcher","packageJSON","searchNative","searchJS","realpath","process","platform","native","isPnP","versions","pnp","NodeFS","readFile","copyFile","unlink","utimes","cwd","chdir","directory","statSync","realpathSync","existsSync","readdirSync","findAncestorFile","args","findNodeModule","findFirstFile","filePath","options","writeFile","contents","tmpFilePath","getTempFilePath","promises","rename","readFileSync","encoding","originalPath","e","exists","watch","dir","fn","opts","subscribe","getEventsSince","snapshot","writeSnapshot","deserialize","serialize","mkdir","recursive","rimraf","rm","force","err","rmdir","version","writeStreamCalls","threadId","require","Number","MAX_SAFE_INTEGER","pid","toString","Writable","util","MurmurHash3","iferr","crypto","murmurhex","hash","ii","arguments","length","result","invocations","getTmpname","filename","__filename","setImmediate","global","setTimeout","module","exports","WriteStreamAtomic","inherits","call","__isWin","hasOwnProperty","isWin","__atomicTarget","__atomicTmp","__atomicChown","chown","__atomicClosed","__atomicStream","WriteStream","once","handleOpen","handleClose","handleError","prototype","emit","event","end","apply","_write","buffer","cb","flushed","write","writeStream","fd","uid","gid","cleanup","moveIntoPlace","trapWindowsEPERM","syscall","code","checkFileHashes","eperm","inprocess","tmpFileHash","createHash","targetFileHash","data","enc","update","fileHashError","fileHashComplete","digest","er","cleanupSync","unlinkSync","Worker","isMainThread","JSON","parse","moduleName","root","basename","dirname","moduleDir","fileNames","pathRoot","fileName","filePaths","Readable","SharedBuffer","WorkerFarm","Handle","nullthrows","EventEmitter","instances","Map","id","MemoryFS","_numWorkerInstances","_workerRegisterResolves","_emitter","constructor","workerFarm","farm","dirs","Directory","symlinks","watchers","events","_cwd","_workerHandles","_eventQueue","set","existing","get","getWorkerApi","runHandle","handle","WorkerFS","createReverseHandle","$$raw","decrementWorkerInstance","_normalizePath","base","parts","slice","split","sep","concat","res","part","symlink","has","FSError","makeShared","mode","File","_sendWorkerEvent","type","entry","_triggerEvent","read","startsWith","indexOf","name","withFileTypes","push","Dirent","from","S_IFLNK","delete","keys","dirPath","destName","ReadStream","target","size","clearTimeout","_watcherTimer","endsWith","trigger","_registerWorker","all","map","workerHandle","workerApi","Watcher","Set","add","unsubscribe","len","ignore","filter","some","i","fromDir","Error","message","captureStackTrace","reading","bytesRead","_read","then","byteLength","emitClose","autoDestroy","Buffer","alloc","chunk","callback","c","_final","catch","S_IFREG","S_IFDIR","Entry","now","Date","atime","mtime","ctime","birthtime","access","modify","getSize","Stat","dev","ino","nlink","rdev","blksize","blocks","atimeMs","mtimeMs","ctimeMs","birthtimeMs","Boolean","isBlockDevice","isCharacterDevice","isSymbolicLink","isFIFO","isSocket","shared","handleFn","methodName","method","writable","readable","readSync","checkExists","OverlayFS","Array","writableSubscription","readableSubscription","writableEvents","readableEvents"],"version":3,"file":"index.js.map","sourceRoot":"../../../../"}