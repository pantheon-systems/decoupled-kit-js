{"version":3,"sources":["../../../src/steps/ingest-remote-schema/build-and-store-ingestible-root-field-non-node-queries.js"],"names":["buildNonNodeQueries","remoteSchema","ingestibles","nonNodeRootFields","store","getState","fragments","transformedFields","fields","parentType","name","type","selectionSet","builtFragments","nonNodeQuery","dispatch","setState"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGA,MAAMA,mBAAmB,GAAG,YAAY;AACtC,QAAM;AACJC,IAAAA,YAAY,EAAE;AACZC,MAAAA,WAAW,EAAE;AAAEC,QAAAA;AAAF;AADD;AADV,MAIFC,eAAMC,QAAN,EAJJ;;AAMA,QAAMC,SAAS,GAAG,EAAlB,CAPsC,CAStC;;AACA,QAAMC,iBAAiB,GAAG,yCAA2B;AACnDC,IAAAA,MAAM,EAAEL,iBAD2C;AAEnDM,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAG,WADG;AAEVC,MAAAA,IAAI,EAAG;AAFG,KAFuC;AAMnDL,IAAAA;AANmD,GAA3B,CAA1B;AASA,QAAMM,YAAY,GAAG,8CAAkBL,iBAAlB,CAArB;AAEA,QAAMM,cAAc,GAAG,sDAA0B;AAC/CP,IAAAA,SAD+C;AAE/CM,IAAAA;AAF+C,GAA1B,CAAvB;AAKA,QAAME,YAAY,GAAI;AACxB;AACA,UAAUF,YAAa;AACvB;AACA,QAAQC,cAAe;AACvB,GALE;;AAOAT,iBAAMW,QAAN,CAAed,YAAf,CAA4Be,QAA5B,CAAqC;AAAEF,IAAAA;AAAF,GAArC;AACD,CAlCD","sourcesContent":["import store from \"~/store\"\nimport recursivelyTransformFields from \"~/steps/ingest-remote-schema/build-queries-from-introspection/recursively-transform-fields\"\nimport { buildSelectionSet } from \"~/steps/ingest-remote-schema/build-queries-from-introspection/build-query-on-field-name\"\nimport { generateReusableFragments } from \"./build-queries-from-introspection/build-query-on-field-name\"\n\nconst buildNonNodeQueries = async () => {\n  const {\n    remoteSchema: {\n      ingestibles: { nonNodeRootFields },\n    },\n  } = store.getState()\n\n  const fragments = {}\n\n  // recursively transform fields\n  const transformedFields = recursivelyTransformFields({\n    fields: nonNodeRootFields,\n    parentType: {\n      name: `RootQuery`,\n      type: `OBJECT`,\n    },\n    fragments,\n  })\n\n  const selectionSet = buildSelectionSet(transformedFields)\n\n  const builtFragments = generateReusableFragments({\n    fragments,\n    selectionSet,\n  })\n\n  const nonNodeQuery = `\n      query NON_NODE_QUERY {\n        ${selectionSet}\n      }\n      ${builtFragments}\n  `\n\n  store.dispatch.remoteSchema.setState({ nonNodeQuery })\n}\n\nexport { buildNonNodeQueries }\n"],"file":"build-and-store-ingestible-root-field-non-node-queries.js"}