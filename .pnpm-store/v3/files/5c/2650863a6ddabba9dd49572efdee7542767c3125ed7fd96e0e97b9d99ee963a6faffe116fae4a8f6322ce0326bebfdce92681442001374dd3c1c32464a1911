{"version":3,"sources":["../../../src/internal-plugins/functions/gatsby-node.ts"],"names":["isProductionEnv","process","env","gatsby_executing_command","activeDevelopmentFunctions","Set","activeEntries","ensureFunctionIsCompiled","functionObj","compiledFunctionsDir","compiledFileExists","fs","stat","absoluteCompiledFilePath","e","time","Date","utimesSync","originalAbsoluteFilePath","Promise","resolve","watcher","chokidar","watch","on","_path","close","createGlobArray","siteDirectoryPath","plugins","globs","globIgnorePatterns","root","pluginName","nestedFolder","push","globPattern","ignorePattern","rootPath","path","join","forEach","plugin","name","includes","glob","_","union","globAsync","pattern","options","reject","err","files","createWebpackConfig","store","reporter","getState","flattenedPlugins","allFunctions","all","map","knownFunctions","ignore","file","originalRelativeFilePath","relative","dir","parse","compiledFunctionName","compiledPath","finalName","functionRoute","relativeCompiledFilePath","matchPath","unionBy","func","dispatch","internalActions","setFunctions","writeFileSync","JSON","stringify","nodeEnv","NODE_ENV","configEnv","GATSBY_ACTIVE_ENV","envFile","parsed","dotenv","readFileSync","encoding","code","error","envObject","Object","keys","reduce","acc","key","varsFromProcessEnv","PUBLIC_DIR","mergedEnvVars","assign","processEnvVars","entries","precompileDevFunctions","GATSBY_PRECOMPILE_DEVELOP_FUNCTIONS","functionsList","parsedFile","compiledNameWithoutExtension","stage","entry","output","filename","libraryTarget","target","optimization","minimize","extensions","cache","type","cacheLocation","mode","module","rules","test","exclude","use","loader","presets","webpack","DefinePlugin","isFirstBuild","onPreBootstrap","parentSpan","activity","activityTimer","start","program","directory","verbose","ensureDir","emptyDir","config","callback","stats","rawMessages","toJson","moduleTrace","warnings","length","errors","compilation","formatted","message","success","run","compiler","ignoreInitial","event","values","log","panic","end","onCreateDevServer","app","any","express","urlencoded","extended","req","next","cookies","headers","cookie","text","json","raw","res","pathFragment","params","functions","find","some","f","matchResult","add","now","pathToFunction","require","fn","fnToExecute","default","headersSent","status","send"],"mappings":"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","sourcesContent":["import fs from \"fs-extra\"\nimport glob from \"glob\"\nimport path from \"path\"\nimport webpack from \"webpack\"\nimport _ from \"lodash\"\nimport multer from \"multer\"\nimport * as express from \"express\"\nimport { getMatchPath, urlResolve } from \"gatsby-core-utils\"\nimport { CreateDevServerArgs, ParentSpanPluginArgs } from \"gatsby\"\nimport formatWebpackMessages from \"react-dev-utils/formatWebpackMessages\"\nimport dotenv from \"dotenv\"\nimport chokidar from \"chokidar\"\nimport { match } from \"@gatsbyjs/reach-router/lib/utils\"\nimport cookie from \"cookie\"\nimport { reportWebpackWarnings } from \"../../utils/webpack-error-utils\"\nimport { internalActions } from \"../../redux/actions\"\nimport { IGatsbyFunction } from \"../../redux/types\"\n\nconst isProductionEnv = process.env.gatsby_executing_command !== `develop`\n\ninterface IGlobPattern {\n  /** The plugin that owns this namespace **/\n  pluginName: string\n  /** The root path to the functions **/\n  rootPath: string\n  /** The glob pattern **/\n  globPattern: string\n  /** The glob ignore pattern */\n  ignorePattern: Array<string>\n}\n\n// During development, we lazily compile functions only when they're requested.\n// Here we keep track of which functions have been requested so are \"active\"\nconst activeDevelopmentFunctions = new Set<IGatsbyFunction>()\nlet activeEntries = {}\n\nasync function ensureFunctionIsCompiled(\n  functionObj: IGatsbyFunction,\n  compiledFunctionsDir: string\n): Promise<any> {\n  // stat the compiled function. If it's there, then return.\n  let compiledFileExists = false\n  try {\n    compiledFileExists = !!(await fs.stat(functionObj.absoluteCompiledFilePath))\n  } catch (e) {\n    // ignore\n  }\n  if (compiledFileExists) {\n    return\n  } else {\n    // Otherwise, restart webpack by touching the file and watch for the file to be\n    // compiled.\n    const time = new Date()\n    fs.utimesSync(functionObj.originalAbsoluteFilePath, time, time)\n    await new Promise(resolve => {\n      const watcher = chokidar\n        // Watch the root of the compiled function directory in .cache as chokidar\n        // can't watch files in directories that don't yet exist.\n        .watch(compiledFunctionsDir)\n        .on(`add`, async _path => {\n          if (_path === functionObj.absoluteCompiledFilePath) {\n            await watcher.close()\n\n            resolve(null)\n          }\n        })\n    })\n  }\n}\n\n// Create glob type w/ glob, plugin name, root path\nconst createGlobArray = (siteDirectoryPath, plugins): Array<IGlobPattern> => {\n  const globs: Array<IGlobPattern> = []\n\n  function globIgnorePatterns(\n    root: string,\n    pluginName?: string\n  ): Array<string> {\n    const nestedFolder = pluginName ? `/${pluginName}/**/` : `/**/`\n\n    return [\n      `${root}/src/api${nestedFolder}__tests__/**/*.+(js|ts)`, // Jest tests\n      `${root}/src/api${nestedFolder}+(*.)+(spec|test).+(js|ts)`,\n      `${root}/src/api${nestedFolder}+(*.)+(d).ts`, // .d.ts files\n    ]\n  }\n\n  // Add the default site src/api directory.\n  globs.push({\n    globPattern: `${siteDirectoryPath}/src/api/**/*.{js,ts}`,\n    ignorePattern: globIgnorePatterns(siteDirectoryPath),\n    rootPath: path.join(siteDirectoryPath, `src/api`),\n    pluginName: `default-site-plugin`,\n  })\n\n  // Add each plugin\n  plugins.forEach(plugin => {\n    // Ignore the \"default\" site plugin (aka the src tree) as we're\n    // already watching that.\n    if (plugin.name === `default-site-plugin`) {\n      return\n    }\n    // Ignore any plugins we include by default. In the very unlikely case\n    // we want to ship default functions, we'll special case add them. In the\n    // meantime, we'll avoid extra FS IO.\n    if (plugin.resolve.includes(`internal-plugin`)) {\n      return\n    }\n    if (plugin.resolve.includes(`gatsby-plugin-typescript`)) {\n      return\n    }\n    if (plugin.resolve.includes(`gatsby-plugin-page-creator`)) {\n      return\n    }\n\n    const glob = {\n      globPattern: `${plugin.resolve}/src/api/${plugin.name}/**/*.{js,ts}`,\n      ignorePattern: globIgnorePatterns(plugin.resolve, plugin.name),\n      rootPath: path.join(plugin.resolve, `src/api`),\n      pluginName: plugin.name,\n    } as IGlobPattern\n    globs.push(glob)\n  })\n\n  // Only return unique paths\n  return _.union(globs)\n}\n\nasync function globAsync(\n  pattern: string,\n  options: glob.IOptions = {}\n): Promise<Array<string>> {\n  return await new Promise((resolve, reject) => {\n    glob(pattern, options, (err, files) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(files)\n      }\n    })\n  })\n}\n\nconst createWebpackConfig = async ({\n  siteDirectoryPath,\n  store,\n  reporter,\n}): Promise<webpack.Configuration> => {\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  const globs = createGlobArray(\n    siteDirectoryPath,\n    store.getState().flattenedPlugins\n  )\n\n  // Glob and return object with relative/absolute paths + which plugin\n  // they belong to.\n  const allFunctions = await Promise.all(\n    globs.map(async (glob): Promise<Array<IGatsbyFunction>> => {\n      const knownFunctions: Array<IGatsbyFunction> = []\n      const files = await globAsync(glob.globPattern, {\n        ignore: glob.ignorePattern,\n      })\n      files.map(file => {\n        const originalAbsoluteFilePath = file\n        const originalRelativeFilePath = path.relative(glob.rootPath, file)\n\n        const { dir, name } = path.parse(originalRelativeFilePath)\n        // Ignore the original extension as all compiled functions now end with js.\n        const compiledFunctionName = path.join(dir, name + `.js`)\n        const compiledPath = path.join(\n          compiledFunctionsDir,\n          compiledFunctionName\n        )\n        const finalName = urlResolve(dir, name === `index` ? `` : name)\n\n        knownFunctions.push({\n          functionRoute: finalName,\n          pluginName: glob.pluginName,\n          originalAbsoluteFilePath,\n          originalRelativeFilePath,\n          relativeCompiledFilePath: compiledFunctionName,\n          absoluteCompiledFilePath: compiledPath,\n          matchPath: getMatchPath(finalName),\n        })\n      })\n\n      return knownFunctions\n    })\n  )\n\n  // Combine functions by the route name so that functions in the default\n  // functions directory can override the plugin's implementations.\n  // @ts-ignore - Seems like a TS bug: https://github.com/microsoft/TypeScript/issues/28010#issuecomment-713484584\n  const knownFunctions = _.unionBy(...allFunctions, func => func.functionRoute)\n\n  store.dispatch(internalActions.setFunctions(knownFunctions))\n\n  // Write out manifest for use by `gatsby serve` and plugins\n  fs.writeFileSync(\n    path.join(compiledFunctionsDir, `manifest.json`),\n    JSON.stringify(knownFunctions, null, 4)\n  )\n\n  // Load environment variables from process.env.* and .env.* files.\n  // Logic is shared with webpack.config.js\n\n  // node env should be DEVELOPMENT | PRODUCTION as these are commonly used in node land\n  const nodeEnv = process.env.NODE_ENV || `development`\n  // config env is dependent on the env that it's run, this can be anything from staging-production\n  // this allows you to set use different .env environments or conditions in gatsby files\n  const configEnv = process.env.GATSBY_ACTIVE_ENV || nodeEnv\n  const envFile = path.join(siteDirectoryPath, `./.env.${configEnv}`)\n  let parsed = {}\n  try {\n    parsed = dotenv.parse(fs.readFileSync(envFile, { encoding: `utf8` }))\n  } catch (err) {\n    if (err.code !== `ENOENT`) {\n      reporter.error(\n        `There was a problem processing the .env file (${envFile})`,\n        err\n      )\n    }\n  }\n\n  const envObject = Object.keys(parsed).reduce((acc, key) => {\n    acc[key] = JSON.stringify(parsed[key])\n    return acc\n  }, {} as Record<string, string>)\n\n  const varsFromProcessEnv = Object.keys(process.env).reduce((acc, key) => {\n    acc[key] = JSON.stringify(process.env[key])\n    return acc\n  }, {} as Record<string, string>)\n\n  // Don't allow overwriting of NODE_ENV, PUBLIC_DIR as to not break gatsby things\n  envObject.NODE_ENV = JSON.stringify(nodeEnv)\n  envObject.PUBLIC_DIR = JSON.stringify(`${siteDirectoryPath}/public`)\n\n  const mergedEnvVars = Object.assign(envObject, varsFromProcessEnv)\n\n  const processEnvVars = Object.keys(mergedEnvVars).reduce(\n    (acc, key) => {\n      acc[`process.env.${key}`] = mergedEnvVars[key]\n      return acc\n    },\n    {\n      \"process.env\": `({})`,\n    }\n  )\n\n  const entries = {}\n\n  const precompileDevFunctions =\n    isProductionEnv ||\n    process.env.GATSBY_PRECOMPILE_DEVELOP_FUNCTIONS === `true` ||\n    process.env.GATSBY_PRECOMPILE_DEVELOP_FUNCTIONS === `1`\n\n  const functionsList = precompileDevFunctions\n    ? knownFunctions\n    : activeDevelopmentFunctions\n\n  functionsList.forEach(functionObj => {\n    // Get path without the extension (as it could be ts or js)\n    const parsedFile = path.parse(functionObj.originalRelativeFilePath)\n    const compiledNameWithoutExtension = path.join(\n      parsedFile.dir,\n      parsedFile.name\n    )\n\n    entries[compiledNameWithoutExtension] = functionObj.originalAbsoluteFilePath\n  })\n\n  activeEntries = entries\n\n  const stage = isProductionEnv\n    ? `functions-production`\n    : `functions-development`\n\n  return {\n    entry: entries,\n    output: {\n      path: compiledFunctionsDir,\n      filename: `[name].js`,\n      libraryTarget: `commonjs2`,\n    },\n    target: `node`,\n\n    // Minification is expensive and not as helpful for serverless functions.\n    optimization: {\n      minimize: false,\n    },\n\n    // Resolve files ending with .ts and the default extensions of .js, .json, .wasm\n    resolve: {\n      extensions: [`.ts`, `...`],\n    },\n\n    // Have webpack save its cache to the .cache/webpack directory\n    cache: {\n      type: `filesystem`,\n      name: stage,\n      cacheLocation: path.join(\n        siteDirectoryPath,\n        `.cache`,\n        `webpack`,\n        `stage-` + stage\n      ),\n    },\n\n    mode: isProductionEnv ? `production` : `development`,\n    // watch: !isProductionEnv,\n    module: {\n      rules: [\n        {\n          test: [/.js$/, /.ts$/],\n          exclude: /node_modules/,\n          use: {\n            loader: `babel-loader`,\n            options: {\n              presets: [`@babel/typescript`],\n            },\n          },\n        },\n      ],\n    },\n    plugins: [new webpack.DefinePlugin(processEnvVars)],\n  }\n}\n\nlet isFirstBuild = true\nexport async function onPreBootstrap({\n  reporter,\n  store,\n  parentSpan,\n}: ParentSpanPluginArgs): Promise<void> {\n  const activity = reporter.activityTimer(`Compiling Gatsby Functions`, {\n    parentSpan,\n  })\n  activity.start()\n\n  const {\n    program: { directory: siteDirectoryPath },\n  } = store.getState()\n\n  reporter.verbose(`Attaching functions to development server`)\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  await fs.ensureDir(compiledFunctionsDir)\n  await fs.emptyDir(compiledFunctionsDir)\n\n  try {\n    // We do this ungainly thing as we need to make accessible\n    // the resolve/reject functions to our shared callback function\n    // eslint-disable-next-line\n    await new Promise<any>(async (resolve, reject) => {\n      const config = await createWebpackConfig({\n        siteDirectoryPath,\n        store,\n        reporter,\n      })\n\n      function callback(err, stats): any {\n        const rawMessages = stats.toJson({ moduleTrace: false })\n        if (rawMessages.warnings.length > 0) {\n          reportWebpackWarnings(rawMessages.warnings, reporter)\n        }\n\n        if (err) return reject(err)\n        const errors = stats.compilation.errors || []\n\n        // If there's errors, reject in production and print to the console\n        // in development.\n        if (isProductionEnv) {\n          if (errors.length > 0) return reject(stats.compilation.errors)\n        } else {\n          const formatted = formatWebpackMessages({\n            errors: rawMessages.errors.map(e => e.message),\n            warnings: [],\n          })\n          reporter.error(formatted.errors)\n        }\n\n        // Log success in dev\n        if (!isProductionEnv) {\n          if (isFirstBuild) {\n            isFirstBuild = false\n          } else {\n            reporter.success(`Re-building functions`)\n          }\n        }\n\n        return resolve(null)\n      }\n\n      if (isProductionEnv) {\n        webpack(config).run(callback)\n      } else {\n        // When in watch mode, you call things differently\n        let compiler = webpack(config).watch({}, callback)\n\n        const globs = createGlobArray(\n          siteDirectoryPath,\n          store.getState().flattenedPlugins\n        )\n\n        // Watch for env files to change and restart the webpack watcher.\n        chokidar\n          .watch(\n            [\n              `${siteDirectoryPath}/.env*`,\n              ...globs.map(glob => glob.globPattern),\n            ],\n            { ignoreInitial: true }\n          )\n          .on(`all`, async (event, path) => {\n            // Ignore change events from the API directory for functions we're\n            // already watching.\n            if (\n              event === `change` &&\n              Object.values(activeEntries).includes(path) &&\n              path.includes(`/src/api/`)\n            ) {\n              return\n            }\n\n            reporter.log(\n              `Restarting function watcher due to change to \"${path}\"`\n            )\n\n            // Otherwise, restart the watcher\n            compiler.close(async () => {\n              const config = await createWebpackConfig({\n                siteDirectoryPath,\n                store,\n                reporter,\n              })\n              compiler = webpack(config).watch({}, callback)\n            })\n          })\n      }\n    })\n  } catch (e) {\n    activity.panic(`Failed to compile Gatsby Functions.`, e)\n  }\n\n  activity.end()\n}\n\nexport async function onCreateDevServer({\n  reporter,\n  app,\n  store,\n}: CreateDevServerArgs): Promise<void> {\n  reporter.verbose(`Attaching functions to development server`)\n\n  const {\n    program: { directory: siteDirectoryPath },\n  } = store.getState()\n\n  const compiledFunctionsDir = path.join(\n    siteDirectoryPath,\n    `.cache`,\n    `functions`\n  )\n\n  app.use(\n    `/api/*`,\n    multer().any(),\n    express.urlencoded({ extended: true }),\n    (req, _, next) => {\n      const cookies = req.headers.cookie\n\n      if (!cookies) {\n        return next()\n      }\n\n      req.cookies = cookie.parse(cookies)\n\n      return next()\n    },\n    express.text(),\n    express.json(),\n    express.raw(),\n    async (req, res, next) => {\n      const { \"0\": pathFragment } = req.params\n\n      const { functions }: { functions: Array<IGatsbyFunction> } =\n        store.getState()\n\n      // Check first for exact matches.\n      let functionObj = functions.find(\n        ({ functionRoute }) => functionRoute === pathFragment\n      )\n\n      if (!functionObj) {\n        // Check if there's any matchPaths that match.\n        // We loop until we find the first match.\n        functions.some(f => {\n          if (f.matchPath) {\n            const matchResult = match(f.matchPath, pathFragment)\n            if (matchResult) {\n              req.params = matchResult.params\n              if (req.params[`*`]) {\n                // Backwards compatability for v3\n                // TODO remove in v5\n                req.params[`0`] = req.params[`*`]\n              }\n              functionObj = f\n\n              return true\n            }\n          }\n\n          return false\n        })\n      }\n\n      if (functionObj) {\n        activeDevelopmentFunctions.add(functionObj)\n\n        await ensureFunctionIsCompiled(functionObj, compiledFunctionsDir)\n\n        reporter.verbose(`Running ${functionObj.functionRoute}`)\n        const start = Date.now()\n        const pathToFunction = functionObj.absoluteCompiledFilePath\n\n        try {\n          delete require.cache[require.resolve(pathToFunction)]\n          const fn = require(pathToFunction)\n\n          const fnToExecute = (fn && fn.default) || fn\n\n          await Promise.resolve(fnToExecute(req, res))\n        } catch (e) {\n          // Override the default error with something more specific.\n          if (e.message.includes(`fnToExecute is not a function`)) {\n            e.message = `${functionObj.originalAbsoluteFilePath} does not export a function.`\n          }\n          reporter.error(e)\n          // Don't send the error if that would cause another error.\n          if (!res.headersSent) {\n            res\n              .status(500)\n              .send(\n                `Error when executing function \"${functionObj.originalAbsoluteFilePath}\":<br /><br />${e.message}`\n              )\n          }\n        }\n\n        const end = Date.now()\n        reporter.log(\n          `Executed function \"/api/${functionObj.functionRoute}\" in ${\n            end - start\n          }ms`\n        )\n      } else {\n        next()\n      }\n    }\n  )\n}\n"],"file":"gatsby-node.js"}