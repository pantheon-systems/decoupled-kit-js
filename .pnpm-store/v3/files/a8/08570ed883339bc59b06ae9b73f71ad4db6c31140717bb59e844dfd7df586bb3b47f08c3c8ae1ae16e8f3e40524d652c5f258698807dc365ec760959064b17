{"version":3,"sources":["../../../src/steps/source-nodes/helpers.js"],"names":["getTypeInfoBySingleName","singleName","typeMap","store","getState","remoteSchema","rootField","get","fields","find","field","name","typeName","type","ofType","getQueryInfoBySingleFieldName","nodeQueries","queryInfo","Object","values","q","typeInfo","singularName","getQueryInfoByTypeName","nodesTypeName"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,uBAAuB,GAAGC,UAAU,IAAI;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAcC,eAAMC,QAAN,GAAiBC,YAArC;;AAEA,QAAMC,SAAS,GAAGJ,OAAO,CACtBK,GADe,CACV,WADU,EAEfC,MAFe,CAERC,IAFQ,CAEHC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeV,UAFrB,CAAlB;AAIA,QAAMW,QAAQ,GAAGN,SAAS,CAACO,IAAV,CAAeF,IAAf,IAAuBL,SAAS,CAACO,IAAV,CAAeC,MAAf,CAAsBH,IAA9D;AAEA,QAAME,IAAI,GAAGX,OAAO,CAACK,GAAR,CAAYK,QAAZ,CAAb;AAEA,SAAOC,IAAP;AACD,CAZM;;;;AAcA,MAAME,6BAA6B,GAAGd,UAAU,IAAI;AACzD,QAAM;AAAEe,IAAAA;AAAF,MAAkBb,eAAMC,QAAN,GAAiBC,YAAzC;;AAEA,QAAMY,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcH,WAAd,EAA2BP,IAA3B,CAChBW,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAWC,YAAX,KAA4BrB,UADjB,CAAlB;AAIA,SAAOgB,SAAP;AACD,CARM;;;;AAUA,MAAMM,sBAAsB,GAAGX,QAAQ,IAAI;AAChD,QAAM;AAAEI,IAAAA;AAAF,MAAkBb,eAAMC,QAAN,GAAiBC,YAAzC;;AAEA,QAAMY,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcH,WAAd,EAA2BP,IAA3B,CAChBW,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAWG,aAAX,KAA6BZ,QADlB,CAAlB;AAIA,SAAOK,SAAP;AACD,CARM","sourcesContent":["import store from \"~/store\"\n\nexport const getTypeInfoBySingleName = singleName => {\n  const { typeMap } = store.getState().remoteSchema\n\n  const rootField = typeMap\n    .get(`RootQuery`)\n    .fields.find(field => field.name === singleName)\n\n  const typeName = rootField.type.name || rootField.type.ofType.name\n\n  const type = typeMap.get(typeName)\n\n  return type\n}\n\nexport const getQueryInfoBySingleFieldName = singleName => {\n  const { nodeQueries } = store.getState().remoteSchema\n\n  const queryInfo = Object.values(nodeQueries).find(\n    q => q.typeInfo.singularName === singleName\n  )\n\n  return queryInfo\n}\n\nexport const getQueryInfoByTypeName = typeName => {\n  const { nodeQueries } = store.getState().remoteSchema\n\n  const queryInfo = Object.values(nodeQueries).find(\n    q => q.typeInfo.nodesTypeName === typeName\n  )\n\n  return queryInfo\n}\n"],"file":"helpers.js"}