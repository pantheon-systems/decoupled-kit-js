System.register([],function(b){"use strict";return{execute:function(){b("devtools",x);var z=Object.defineProperty,E=Object.getOwnPropertySymbols,D=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable,T=(n,t,e)=>t in n?z(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e,R=(n,t)=>{for(var e in t||(t={}))D.call(t,e)&&T(n,e,t[e]);if(E)for(var e of E(t))N.call(t,e)&&T(n,e,t[e]);return n};const U=b("redux",(n,t)=>(e,i,s)=>(s.dispatch=o=>(e(v=>n(v,o),!1,o),o),s.dispatchFromDevtools=!0,R({dispatch:(...o)=>s.dispatch(...o)},t)));function x(n,t){return(e,i,s)=>{var o;let v=!1;typeof t=="string"&&!v&&(console.warn("[zustand devtools middleware]: passing `name` as directly will be not allowed in next majorpass the `name` in an object `{ name: ... }` instead"),v=!0);const u=t===void 0?{name:void 0,anonymousActionType:void 0}:typeof t=="string"?{name:t}:t;typeof((o=u==null?void 0:u.serialize)==null?void 0:o.options)<"u"&&console.warn("[zustand devtools middleware]: `serialize.options` is deprecated, just use `serialize`");let h;try{h=window.__REDUX_DEVTOOLS_EXTENSION__||window.top.__REDUX_DEVTOOLS_EXTENSION__}catch{}if(!h)return n(e,i,s);let l=Object.create(h.connect(u)),_=!1;Object.defineProperty(s,"devtools",{get:()=>(_||(console.warn("[zustand devtools middleware] `devtools` property on the store is deprecated it will be removed in the next major.\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly"),_=!0),l),set:c=>{_||(console.warn("[zustand devtools middleware] `api.devtools` is deprecated, it will be removed in the next major.\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly"),_=!0),l=c}});let f=!1;Object.defineProperty(l,"prefix",{get:()=>(f||(console.warn("[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\nWe no longer prefix the actions/names"+u.name===void 0?", pass the `name` option to create a separate instance of devtools for each store.":", because the `name` option already creates a separate instance of devtools for each store."),f=!0),""),set:()=>{f||(console.warn("[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\nWe no longer prefix the actions/names"+u.name===void 0?", pass the `name` option to create a separate instance of devtools for each store.":", because the `name` option already creates a separate instance of devtools for each store."),f=!0)}});let y=!0;s.setState=(c,r,a)=>{e(c,r),!!y&&l.send(a===void 0?{type:u.anonymousActionType||"anonymous"}:typeof a=="string"?{type:a}:a,i())};const p=(...c)=>{const r=y;y=!1,e(...c),y=r},m=n(s.setState,i,s);if(l.init(m),s.dispatchFromDevtools&&typeof s.dispatch=="function"){let c=!1;const r=s.dispatch;s.dispatch=(...a)=>{a[0].type==="__setState"&&!c&&(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),c=!0),r(...a)}}return l.subscribe(c=>{var r;switch(c.type){case"ACTION":if(typeof c.payload!="string"){console.error("[zustand devtools middleware] Unsupported action format");return}return g(c.payload,a=>{if(a.type==="__setState"){p(a.state);return}!s.dispatchFromDevtools||typeof s.dispatch=="function"&&s.dispatch(a)});case"DISPATCH":switch(c.payload.type){case"RESET":return p(m),l.init(s.getState());case"COMMIT":return l.init(s.getState());case"ROLLBACK":return g(c.state,a=>{p(a),l.init(s.getState())});case"JUMP_TO_STATE":case"JUMP_TO_ACTION":return g(c.state,a=>{p(a)});case"IMPORT_STATE":{const{nextLiftedState:a}=c.payload,d=(r=a.computedStates.slice(-1)[0])==null?void 0:r.state;if(!d)return;p(d),l.send(null,a);return}case"PAUSE_RECORDING":return y=!y}return}}),m}}const g=(n,t)=>{let e;try{e=JSON.parse(n)}catch(i){console.error("[zustand devtools middleware] Could not parse the received json",i)}e!==void 0&&t(e)},$=b("subscribeWithSelector",n=>(t,e,i)=>{const s=i.subscribe;return i.subscribe=(v,u,h)=>{let l=v;if(u){const _=(h==null?void 0:h.equalityFn)||Object.is;let f=v(i.getState());l=y=>{const p=v(y);if(!_(f,p)){const m=f;u(f=p,m)}},(h==null?void 0:h.fireImmediately)&&u(f,f)}return s(l)},n(t,e,i)}),W=b("combine",(n,t)=>(e,i,s)=>Object.assign({},n,t(e,i,s)));var A=Object.defineProperty,P=Object.getOwnPropertySymbols,C=Object.prototype.hasOwnProperty,F=Object.prototype.propertyIsEnumerable,I=(n,t,e)=>t in n?A(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e,S=(n,t)=>{for(var e in t||(t={}))C.call(t,e)&&I(n,e,t[e]);if(P)for(var e of P(t))F.call(t,e)&&I(n,e,t[e]);return n};const O=n=>t=>{try{const e=n(t);return e instanceof Promise?e:{then(i){return O(i)(e)},catch(i){return this}}}catch(e){return{then(i){return this},catch(i){return O(i)(e)}}}},X=b("persist",(n,t)=>(e,i,s)=>{let o=S({getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:r=>r,version:0,merge:(r,a)=>S(S({},a),r)},t);(o.blacklist||o.whitelist)&&console.warn(`The ${o.blacklist?"blacklist":"whitelist"} option is deprecated and will be removed in the next version. Please use the 'partialize' option instead.`);let v=!1;const u=new Set,h=new Set;let l;try{l=o.getStorage()}catch{}if(l)l.removeItem||console.warn(`[zustand persist middleware] The given storage for item '${o.name}' does not contain a 'removeItem' method, which will be required in v4.`);else return n((...r)=>{console.warn(`[zustand persist middleware] Unable to update item '${o.name}', the given storage is currently unavailable.`),e(...r)},i,s);const _=O(o.serialize),f=()=>{const r=o.partialize(S({},i()));o.whitelist&&Object.keys(r).forEach(w=>{var j;!((j=o.whitelist)==null?void 0:j.includes(w))&&delete r[w]}),o.blacklist&&o.blacklist.forEach(w=>delete r[w]);let a;const d=_({state:r,version:o.version}).then(w=>l.setItem(o.name,w)).catch(w=>{a=w});if(a)throw a;return d},y=s.setState;s.setState=(r,a)=>{y(r,a),f()};const p=n((...r)=>{e(...r),f()},i,s);let m;const c=()=>{var r;if(!l)return;v=!1,u.forEach(d=>d(i()));const a=((r=o.onRehydrateStorage)==null?void 0:r.call(o,i()))||void 0;return O(l.getItem.bind(l))(o.name).then(d=>{if(d)return o.deserialize(d)}).then(d=>{if(d)if(typeof d.version=="number"&&d.version!==o.version){if(o.migrate)return o.migrate(d.state,d.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return d.state}).then(d=>(m=o.merge(d,p),e(m,!0),f())).then(()=>{a==null||a(m,void 0),v=!0,h.forEach(d=>d(m))}).catch(d=>{a==null||a(void 0,d)})};return s.persist={setOptions:r=>{o=S(S({},o),r),r.getStorage&&(l=r.getStorage())},clearStorage:()=>{var r;(r=l==null?void 0:l.removeItem)==null||r.call(l,o.name)},rehydrate:()=>c(),hasHydrated:()=>v,onHydrate:r=>(u.add(r),()=>{u.delete(r)}),onFinishHydration:r=>(h.add(r),()=>{h.delete(r)})},c(),m||p})}}});
