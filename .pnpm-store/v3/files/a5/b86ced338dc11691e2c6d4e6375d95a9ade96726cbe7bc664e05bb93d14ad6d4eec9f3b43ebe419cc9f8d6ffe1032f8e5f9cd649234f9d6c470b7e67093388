{"version":3,"sources":["../../../src/redux/reducers/node-manifest.ts"],"names":["ONE_DAY","DEFAULT_MAX_DAYS_OLD","nodeManifestReducer","state","action","type","manifestId","pluginName","node","updatedAtUTC","payload","maxDaysOld","Number","process","env","NODE_MANIFEST_MAX_DAYS_OLD","nodeLastUpdatedAtUTC","Date","getTime","isNaN","reporter","warn","shouldCreateNodeManifest","now","id","push"],"mappings":";;;;;;;AAAA;;AAQA,MAAMA,OAAO,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjC,C,CAAoC;;AACpC,MAAMC,oBAAoB,GAAG,EAA7B;;AAEO,MAAMC,mBAAmB,GAAG,CACjCC,KAAoC,GAAG,EADN,EAEjCC,MAFiC,KAGC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,sBAAN;AAA6B;AAC3B,cAAM;AAAEC,UAAAA,UAAF;AAAcC,UAAAA,UAAd;AAA0BC,UAAAA,IAA1B;AAAgCC,UAAAA;AAAhC,YAAiDL,MAAM,CAACM,OAA9D;AAEA,cAAMC,UAAU,GACdC,MAAM,CAACC,OAAO,CAACC,GAAR,CAAYC,0BAAb,CAAN,IAAkDd,oBADpD;;AAGA,YAAIQ,YAAJ,EAAkB;AAChB,gBAAMO,oBAA4B,GAAG,IAAIC,IAAJ,CAASR,YAAT,EAAuBS,OAAvB,EAArC;;AACA,cACGF,oBAAD,YAAyCC,IAAzC,IACA,CAACE,KAAK,CAACH,oBAAD,CAFR,EAGE;AACAI,8BAASC,IAAT,CACG,UAASd,UAAW,2GADvB;;AAIA,mBAAOJ,KAAP;AACD;;AAED,gBAAMmB,wBAAwB,GAC5BL,IAAI,CAACM,GAAL,KAAaP,oBAAb,IAAqCL,UAAU,GAAGX,OADpD;;AAGA,cAAI,CAACsB,wBAAL,EAA+B;AAC7B,mBAAOnB,KAAP;AACD;AACF;;AAED,YAAI,OAAOG,UAAP,KAAuB,QAA3B,EAAoC;AAClCc,4BAASC,IAAT,CACG,UAASd,UAAW,4EADvB;;AAIA,iBAAOJ,KAAP;AACD;;AAED,YAAI,EAACK,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEgB,EAAP,CAAJ,EAAe;AACbJ,4BAASC,IAAT,CACG,UAASd,UAAW,gEADvB;;AAIA,iBAAOJ,KAAP;AACD;;AAEDA,QAAAA,KAAK,CAACsB,IAAN,CAAW;AACTnB,UAAAA,UADS;AAETC,UAAAA,UAFS;AAGTC,UAAAA,IAAI,EAAE;AACJgB,YAAAA,EAAE,EAAEhB,IAAI,CAACgB;AADL;AAHG,SAAX;AAQA,eAAOrB,KAAP;AACD;;AAED,SAAM,uBAAN;AAA8B;AAC5BA,QAAAA,KAAK,GAAG,EAAR;AAEA,eAAOA,KAAP;AACD;;AAED;AACE,aAAOA,KAAP;AA9DJ;AAgED,CApEM","sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\n\nimport {\n  IGatsbyState,\n  ICreateNodeManifest,\n  IDeleteNodeManifests,\n} from \"../types\"\n\nconst ONE_DAY = 1000 * 60 * 60 * 24 // ms * sec * min * hr.\nconst DEFAULT_MAX_DAYS_OLD = 30\n\nexport const nodeManifestReducer = (\n  state: IGatsbyState[\"nodeManifests\"] = [],\n  action: ICreateNodeManifest | IDeleteNodeManifests\n): IGatsbyState[\"nodeManifests\"] => {\n  switch (action.type) {\n    case `CREATE_NODE_MANIFEST`: {\n      const { manifestId, pluginName, node, updatedAtUTC } = action.payload\n\n      const maxDaysOld =\n        Number(process.env.NODE_MANIFEST_MAX_DAYS_OLD) || DEFAULT_MAX_DAYS_OLD\n\n      if (updatedAtUTC) {\n        const nodeLastUpdatedAtUTC: number = new Date(updatedAtUTC).getTime()\n        if (\n          (nodeLastUpdatedAtUTC as any) instanceof Date &&\n          !isNaN(nodeLastUpdatedAtUTC)\n        ) {\n          reporter.warn(\n            `Plugin ${pluginName} called unstable_createNodeManifest with an updatedAtUTC that isn't a proper value to instantiate a Date.`\n          )\n\n          return state\n        }\n\n        const shouldCreateNodeManifest =\n          Date.now() - nodeLastUpdatedAtUTC <= maxDaysOld * ONE_DAY\n\n        if (!shouldCreateNodeManifest) {\n          return state\n        }\n      }\n\n      if (typeof manifestId !== `string`) {\n        reporter.warn(\n          `Plugin ${pluginName} called unstable_createNodeManifest with a manifestId that isn't a string.`\n        )\n\n        return state\n      }\n\n      if (!node?.id) {\n        reporter.warn(\n          `Plugin ${pluginName} called unstable_createNodeManifest but didn't provide a node.`\n        )\n\n        return state\n      }\n\n      state.push({\n        manifestId,\n        pluginName,\n        node: {\n          id: node.id,\n        },\n      })\n\n      return state\n    }\n\n    case `DELETE_NODE_MANIFESTS`: {\n      state = []\n\n      return state\n    }\n\n    default:\n      return state\n  }\n}\n"],"file":"node-manifest.js"}