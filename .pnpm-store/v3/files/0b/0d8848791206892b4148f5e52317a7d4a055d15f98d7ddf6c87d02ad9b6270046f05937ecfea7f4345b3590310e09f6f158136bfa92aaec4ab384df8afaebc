{"version":3,"sources":["../../src/utils/cache.ts"],"names":["MAX_CACHE_SIZE","TTL","Number","MAX_SAFE_INTEGER","cacheDir","Cache","constructor","name","store","fsStore","cacheDirectory","cache","cacheBase","path","join","process","cwd","directory","init","fs","ensureDirSync","configs","max","ttl","options","caches","map","manager","caching","multiCaching","get","key","Promise","resolve","Error","err","res","undefined","set","value","args","Map","getCacheInstance","shouldHardCacheData","isDevelop","env","NODE_ENV","pluginOptions","develop","hardCacheData","getState","gatsbyApi","setHardCachedData","hardCache","getHardCachedData","data","getHardCachedNodes","allWpNodes","shouldUseHardDataCache","length","staticFileCacheDirectory","staticFileDirectory","restoreStaticDirectory","copy","copyStaticDirectory","setHardCachedNodes","helpers","allNodes","getNodes","filter","node","internal","owner","clearHardCache","clearHardCachedNodes","hardCachedNodes","setPersistentCache","all","getPersistentCache","cachedData","hardCachedData","restoreHardCachedNodes","loggerTypeCounts","reporter","type","endsWith","createContentDigest","actions","parentName","contentDigest","typeSettingsCache","typeSettings","remoteNode","beforeChangeNode","receivedRemoteNode","actionType","fetchGraphql","buildTypeName","wpStore","createNode","Object","entries","forEach","typeName","count","dispatch","logger","createActivityTimer","incrementActivityTimer","by","action","stopActivityTimer","createdNodeIds","id"],"mappings":"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","sourcesContent":["import { GatsbyHelpers } from \"~/utils/gatsby-types\"\nimport manager from \"cache-manager\"\nimport fs from \"fs-extra\"\nimport fsStore from \"cache-manager-fs-hash\"\nimport path from \"path\"\nimport rimraf from \"rimraf\"\n\nimport store from \"~/store\"\nimport { getGatsbyApi } from \"~/utils/get-gatsby-api\"\n\nimport fetchGraphql from \"~/utils/fetch-graphql\"\n\nimport {\n  getTypeSettingsByType,\n  buildTypeName,\n} from \"~/steps/create-schema-customization/helpers\"\n\nimport { createMediaItemNode } from \"~/steps/source-nodes/fetch-nodes/fetch-referenced-media-items\"\nimport type { Node } from \"gatsby\"\n\nconst MAX_CACHE_SIZE = 250\nconst TTL = Number.MAX_SAFE_INTEGER\nconst cacheDir = `.wordpress-cache/caches`\n\ntype Store = manager.StoreConfig[\"store\"]\n\ninterface ICacheOptions {\n  name?: string\n  store?: Store\n}\nexport default class Cache {\n  private store: Store\n  private name: string\n  private cacheDirectory: string\n  private cache: manager.MultiCache\n  constructor({ name = `db`, store = fsStore }: ICacheOptions = {}) {\n    this.name = name\n    this.store = store\n    this.cacheDirectory = cacheDir\n  }\n\n  get cacheBase(): string {\n    return path.join(process.cwd(), this.cacheDirectory)\n  }\n\n  get directory(): string {\n    return `${this.cacheBase}/${this.name}`\n  }\n\n  init(): Cache {\n    fs.ensureDirSync(this.directory)\n\n    const configs: Array<manager.StoreConfig> = [\n      {\n        store: `memory`,\n        max: MAX_CACHE_SIZE,\n        ttl: TTL,\n      },\n      {\n        store: this.store,\n        ttl: TTL,\n        options: {\n          path: this.directory,\n          ttl: TTL,\n        },\n      },\n    ]\n\n    const caches = configs.map(cache => manager.caching(cache))\n\n    this.cache = manager.multiCaching(caches)\n\n    return this\n  }\n\n  get(key: string): Promise<unknown> {\n    return new Promise(resolve => {\n      if (!this.cache) {\n        throw new Error(\n          `Cache wasn't initialised yet, please run the init method first`\n        )\n      }\n      this.cache.get(key, (err, res) => {\n        resolve(err ? undefined : res)\n      })\n    })\n  }\n\n  set(key: string, value: unknown, args = { ttl: TTL }): Promise<unknown> {\n    return new Promise(resolve => {\n      if (!this.cache) {\n        throw new Error(\n          `Cache wasn't initialised yet, please run the init method first`\n        )\n      }\n      this.cache.set(key, value, args, err => {\n        resolve(err ? undefined : value)\n      })\n    })\n  }\n}\n\nconst caches = new Map()\n\nexport const getCacheInstance = (name: string): Cache => {\n  let cache = caches.get(name)\n  if (!cache) {\n    cache = new Cache({ name }).init()\n    caches.set(name, cache)\n  }\n  return cache\n}\n\nexport const shouldHardCacheData = (): boolean => {\n  const isDevelop = process.env.NODE_ENV === `development`\n\n  if (!isDevelop) {\n    return false\n  }\n\n  const {\n    pluginOptions: {\n      develop: { hardCacheData },\n    },\n  } = store.getState().gatsbyApi\n\n  return hardCacheData\n}\n\nexport const setHardCachedData = async ({\n  key,\n  value,\n}: {\n  key: string\n  value: unknown\n}): Promise<unknown> => {\n  if (!shouldHardCacheData()) {\n    return\n  }\n\n  const hardCache = getCacheInstance(`wordpress-data`)\n\n  await hardCache.set(key, value)\n}\n\nexport const getHardCachedData = async <T = Node>({\n  key,\n}: {\n  key: string\n}): Promise<T> => {\n  if (!shouldHardCacheData()) {\n    return null\n  }\n\n  const hardCache = getCacheInstance(`wordpress-data`)\n\n  const data = await hardCache.get(key)\n\n  return data as T\n}\n\nexport const getHardCachedNodes = async (): Promise<null | Array<Node>> => {\n  const allWpNodes = await getHardCachedData<Array<Node>>({ key: `allWpNodes` })\n\n  const shouldUseHardDataCache = allWpNodes?.length\n\n  if (shouldUseHardDataCache) {\n    return allWpNodes\n  }\n\n  return null\n}\n\nconst staticFileCacheDirectory = `${process.cwd()}/.wordpress-cache/caches/public/static`\nconst staticFileDirectory = `${process.cwd()}/public/static`\n\nexport const restoreStaticDirectory = async (): Promise<void> => {\n  await fs.copy(staticFileCacheDirectory, staticFileDirectory)\n}\n\nconst copyStaticDirectory = async (): Promise<void> => {\n  await fs.copy(staticFileDirectory, staticFileCacheDirectory)\n}\n\nexport const setHardCachedNodes = async ({\n  helpers,\n}: {\n  helpers: GatsbyHelpers\n}): Promise<void> => {\n  if (!shouldHardCacheData()) {\n    return\n  }\n\n  const allNodes = await helpers.getNodes()\n\n  const allWpNodes = allNodes.filter(\n    (node: Node) => node.internal.owner === `gatsby-source-wordpress`\n  )\n\n  await setHardCachedData({\n    key: `allWpNodes`,\n    value: allWpNodes,\n  })\n\n  // if we're hard caching data,\n  // that means any inline html images paths will be baked into\n  // the processed hard cached nodes.\n  // so we need to copy the static directory\n  await copyStaticDirectory()\n}\n\nexport const clearHardCache = async (): Promise<void> => {\n  await new Promise(resolve => {\n    const directory = new Cache().cacheBase\n\n    rimraf(directory, resolve)\n  })\n}\n\nexport const clearHardCachedNodes = async (): Promise<void> => {\n  const hardCachedNodes = !!(await getHardCachedNodes())\n\n  if (hardCachedNodes) {\n    await setHardCachedData({\n      key: `allWpNodes`,\n      value: null,\n    })\n  }\n}\n\n// persistent cache\nexport const setPersistentCache = async ({\n  key,\n  value,\n}: {\n  key: string\n  value: unknown\n}): Promise<void> => {\n  const { helpers } = getGatsbyApi()\n\n  await Promise.all([\n    // set Gatsby cache\n    helpers.cache.set(key, value),\n    // and hard cache\n    setHardCachedData({ key, value }),\n  ])\n}\n\nexport const getPersistentCache = async ({\n  key,\n}: {\n  key: string\n}): Promise<unknown> => {\n  const { helpers } = getGatsbyApi()\n\n  const cachedData = await helpers.cache.get(key)\n\n  if (cachedData) {\n    return cachedData\n  }\n\n  const hardCachedData = await getHardCachedData({ key })\n\n  return hardCachedData\n}\n\nexport const restoreHardCachedNodes = async ({\n  hardCachedNodes,\n}: {\n  hardCachedNodes: Array<Node>\n}): Promise<Array<string>> => {\n  const loggerTypeCounts = {}\n\n  const { helpers, pluginOptions } = getGatsbyApi()\n  const { reporter } = helpers\n\n  // restore nodes\n  await Promise.all(\n    hardCachedNodes.map(async node => {\n      if (!loggerTypeCounts[node.internal.type]) {\n        loggerTypeCounts[node.internal.type] = 0\n      }\n\n      loggerTypeCounts[node.internal.type] += 1\n\n      // media items are created in a special way\n      if (node.internal.type.endsWith(`MediaItem`)) {\n        delete node.internal\n\n        const { createContentDigest, actions } = helpers\n\n        return createMediaItemNode({\n          node,\n          helpers,\n          createContentDigest,\n          actions,\n          parentName: `Hard cache restoration`,\n          // referencedMediaItemNodeIds,\n          // allMediaItemNodes = [],\n        })\n      }\n\n      node.internal = {\n        contentDigest: node.internal.contentDigest,\n        type: node.internal.type,\n      } as Node[\"internal\"]\n\n      const typeSettingsCache = {}\n\n      const typeSettings =\n        // TODO: extend node type for wordpress?\n        typeSettingsCache[node.type as string] ??\n        getTypeSettingsByType({\n          name: node.type,\n        })\n\n      let remoteNode = node\n\n      if (\n        typeSettings.beforeChangeNode &&\n        typeof typeSettings.beforeChangeNode === `function`\n      ) {\n        const {\n          // additionalNodeIds: receivedAdditionalNodeIds,\n          remoteNode: receivedRemoteNode,\n          // cancelUpdate: receivedCancelUpdate,\n        } =\n          (await typeSettings.beforeChangeNode({\n            actionType: `CREATE_ALL`,\n            remoteNode,\n            actions: helpers.actions,\n            helpers,\n            fetchGraphql,\n            typeSettings,\n            buildTypeName,\n            type: node.type,\n            wpStore: store,\n          })) || {}\n\n        if (receivedRemoteNode) {\n          remoteNode = receivedRemoteNode\n        }\n      }\n\n      // restore each node\n      // TODO: update gatsby types\n      await helpers.actions.createNode(remoteNode)\n\n      return null\n    })\n  )\n\n  Object.entries(loggerTypeCounts).forEach(([typeName, count]) => {\n    store.dispatch.logger.createActivityTimer({\n      typeName,\n      pluginOptions,\n      reporter,\n    })\n\n    store.dispatch.logger.incrementActivityTimer({\n      typeName,\n      by: count,\n      action: `restored`,\n    })\n\n    store.dispatch.logger.stopActivityTimer({\n      typeName,\n      action: `restored`,\n    })\n  })\n\n  // restore static directory\n  await restoreStaticDirectory()\n\n  // build createdNodeIds id array to be cached 1 level above\n  const createdNodeIds = hardCachedNodes.map(node => node.id)\n\n  return createdNodeIds\n}\n"],"file":"cache.js"}