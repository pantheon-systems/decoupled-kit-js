{"version":3,"sources":["../../../../src/utils/worker/child/index.ts"],"names":["isWorker","global","__GATSBY","process","env","GATSBY_NODE_GLOBALS","JSON","parse","deleteModuleCache","htmlComponentRendererPath","require","cache","resolve"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAaA;;;;;AACA;;;;;AACA;;;;;;AACA;;;AAdA;AACA,+C,CAEA;;AACA,IAAIA,sBAAJ,EAAc;AACZC,EAAAA,MAAM,CAACC,QAAP,GAAkBC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,GACdC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACC,GAAR,CAAYC,mBAAvB,CADc,GAEd,EAFJ;AAGD,C,CAED;;;AAMA;AACO,SAASG,iBAAT,CAA2BC,yBAA3B,EAAoE;AACzE,SAAOC,OAAO,CAACC,KAAR,CAAcD,OAAO,CAACE,OAAR,CAAgBH,yBAAhB,CAAd,CAAP;AACD","sourcesContent":["import { isWorker } from \"gatsby-worker\"\nimport { initJobsMessagingInWorker } from \"../../jobs/worker-messaging\"\nimport { initReporterMessagingInWorker } from \"../reporter\"\n\ninitJobsMessagingInWorker()\ninitReporterMessagingInWorker()\n\n// set global gatsby object like we do in develop & build\nif (isWorker) {\n  global.__GATSBY = process.env.GATSBY_NODE_GLOBALS\n    ? JSON.parse(process.env.GATSBY_NODE_GLOBALS)\n    : {}\n}\n\n// Note: this doesn't check for conflicts between module exports\nexport { renderHTMLProd, renderHTMLDev } from \"./render-html\"\nexport { setInferenceMetadata, buildSchema } from \"./schema\"\nexport { setComponents, runQueries, saveQueriesDependencies } from \"./queries\"\nexport { loadConfigAndPlugins } from \"./load-config-and-plugins\"\n\n// Let Gatsby force worker to grab latest version of `public/render-page.js`\nexport function deleteModuleCache(htmlComponentRendererPath: string): void {\n  delete require.cache[require.resolve(htmlComponentRendererPath)]\n}\n"],"file":"index.js"}