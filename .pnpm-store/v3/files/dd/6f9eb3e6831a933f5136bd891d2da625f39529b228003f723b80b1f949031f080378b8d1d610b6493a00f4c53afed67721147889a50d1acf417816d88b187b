{"version":3,"sources":["../../../../src/utils/webpack/plugins/cache-folder-resolver.ts"],"names":["CacheFolderResolver","constructor","requestsFolder","apply","resolver","process","versions","pnp","target","ensureHook","getHook","tapAsync","request","resolveContext","callback","req","path","startsWith","packageMatch","exec","obj","__dirname","doResolve"],"mappings":";;;;;AASA;AACA;AACA;AACO,MAAMA,mBAAN,CAA0B;AAG/BC,EAAAA,WAAW,CAACC,cAAD,EAAyB;AAClC,SAAKA,cAAL,GAAsBA,cAAtB;AACD;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAA2B;AAC9B,QAAI,CAAEC,OAAO,CAACC,QAAT,CAAqCC,GAA1C,EAA+C;AAC7C;AACD;;AAED,UAAMC,MAAM,GAAGJ,QAAQ,CAACK,UAAT,CAAqB,YAArB,CAAf;AACAL,IAAAA,QAAQ,CACLM,OADH,CACY,YADZ,EAEGC,QAFH,CAGK,qBAHL,EAII,CACEC,OADF,EAEEC,cAFF,EAGEC,QAHF,KAIK;AACH,YAAMC,GAAG,GAAGH,OAAO,CAACA,OAApB;;AACA,UAAI,CAACG,GAAL,EAAU;AACR,eAAOD,QAAQ,EAAf;AACD;;AAED,UAAI,CAACF,OAAO,CAACI,IAAR,CAAaC,UAAb,CAAwB,KAAKf,cAA7B,CAAL,EAAmD;AACjD,eAAOY,QAAQ,EAAf;AACD;;AAED,YAAMI,YAAY,GAAG,oBAAoBC,IAApB,CAAyBJ,GAAzB,CAArB;;AACA,UAAI,CAACG,YAAL,EAAmB;AACjB,eAAOJ,QAAQ,EAAf;AACD,OAbE,CAeH;;;AACA,YAAMM,GAAG,GAAG,EACV,GAAGR,OADO;AAEVI,QAAAA,IAAI,EAAEK;AAFI,OAAZ;AAKA,aAAOjB,QAAQ,CAACkB,SAAT,CACLd,MADK,EAELY,GAFK,EAGJ,qEAHI,EAILP,cAJK,EAKLC,QALK,CAAP;AAOD,KApCL;AAsCD;;AAnD8B","sourcesContent":["import Resolver from \"enhanced-resolve/lib/Resolver\"\n\ninterface IRequest {\n  request?: string\n  path: string\n}\n\ntype ProcessWithPNP = NodeJS.ProcessVersions & { pnp?: string }\n\n/**\n * To support PNP we have to make sure dependencies resolved from the .cache folder should be resolved from the gatsby package directory\n */\nexport class CacheFolderResolver {\n  private requestsFolder: string\n\n  constructor(requestsFolder: string) {\n    this.requestsFolder = requestsFolder\n  }\n\n  apply(resolver: Resolver): void {\n    if (!(process.versions as ProcessWithPNP).pnp) {\n      return\n    }\n\n    const target = resolver.ensureHook(`raw-module`)\n    resolver\n      .getHook(`raw-module`)\n      .tapAsync(\n        `CacheFolderResolver`,\n        (\n          request: IRequest,\n          resolveContext: unknown,\n          callback: (err?: Error | null, result?: unknown) => void\n        ) => {\n          const req = request.request\n          if (!req) {\n            return callback()\n          }\n\n          if (!request.path.startsWith(this.requestsFolder)) {\n            return callback()\n          }\n\n          const packageMatch = /^(@[^/]+\\/)?[^/]+/.exec(req)\n          if (!packageMatch) {\n            return callback()\n          }\n\n          // We change the issuer but keep everything as is and re-run resolve\n          const obj = {\n            ...request,\n            path: __dirname,\n          }\n\n          return resolver.doResolve(\n            target,\n            obj,\n            `change issuer to gatsby package by cache-folder-resolver to fix pnp`,\n            resolveContext,\n            callback\n          )\n        }\n      )\n  }\n}\n"],"file":"cache-folder-resolver.js"}