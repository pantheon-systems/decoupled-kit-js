{"version":3,"sources":["../../src/datastore/index.ts"],"names":["getNodes","getNode","id","getNodesByType","type","getTypes"],"mappings":";;;;;AACA;;;;;;AAIA;;AAEA;AACA;AACA;AACA;AACO,MAAMA,QAAQ,GAAG,MAA0B,+BAAeA,QAAf,EAA3C;AAEP;AACA;AACA;;;;;AACO,MAAMC,OAAO,GAAIC,EAAD,IACrB,+BAAeD,OAAf,CAAuBC,EAAvB,CADK;AAGP;AACA;AACA;AACA;;;;;AACO,MAAMC,cAAc,GAAIC,IAAD,IAC5B,+BAAeD,cAAf,CAA8BC,IAA9B,CADK;AAGP;AACA;AACA;;;;;AACO,MAAMC,QAAQ,GAAG,MAAqB,+BAAeA,QAAf,EAAtC","sourcesContent":["import { IGatsbyNode } from \"../redux/types\"\nimport { getDataStore } from \"./datastore\"\n\nexport { getDataStore, isLmdbStore, detectLmdbStore } from \"./datastore\"\n\n// Convenience accessor methods\n\n/**\n * Get all nodes from datastore.\n * @deprecated\n */\nexport const getNodes = (): Array<IGatsbyNode> => getDataStore().getNodes()\n\n/**\n * Get node by id from datastore.\n */\nexport const getNode = (id: string): IGatsbyNode | undefined =>\n  getDataStore().getNode(id)\n\n/**\n * Get all nodes of type from datastore.\n * @deprecated\n */\nexport const getNodesByType = (type: string): Array<IGatsbyNode> =>\n  getDataStore().getNodesByType(type)\n\n/**\n * Get all type names from datastore.\n */\nexport const getTypes = (): Array<string> => getDataStore().getTypes()\n"],"file":"index.js"}