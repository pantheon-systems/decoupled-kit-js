{"version":3,"sources":["../../../../src/bootstrap/load-plugins/utils/create-id.ts"],"names":["createPluginId","name","pluginObject","JSON","stringify","options"],"mappings":";;;;;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,cAAc,GAAG,CAC5BC,IAD4B,EAE5BC,YAAqC,GAAG,IAFZ,KAI5B,gCACED,IAAI,IAAIC,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAeF,YAAY,CAACG,OAA5B,CAAH,GAA2C,EAA3D,CADN,EAEG,QAFH,CAJK","sourcesContent":["import { createNodeId } from \"../../../utils/create-node-id\"\nimport { IPluginRefObject } from \"../types\"\n\n/**\n * Make sure key is unique to plugin options. E.g. there could\n * be multiple source-filesystem plugins, with different names\n * (docs, blogs).\n *\n * @param name Name of the plugin\n * @param pluginObject Object of the plugin\n */\nexport const createPluginId = (\n  name: string,\n  pluginObject: IPluginRefObject | null = null\n): string =>\n  createNodeId(\n    name + (pluginObject ? JSON.stringify(pluginObject.options) : ``),\n    `Plugin`\n  )\n"],"file":"create-id.js"}