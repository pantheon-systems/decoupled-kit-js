{"version":3,"file":"rematch.min.js","sources":["../../src/utils/validate.ts","../../node_modules/symbol-observable/es/index.js","../../src/pluginFactory.ts","../../src/plugins/dispatch.ts","../../src/plugins/effects.ts","../../node_modules/symbol-observable/es/ponyfill.js","../../node_modules/redux/es/redux.js","../../src/utils/isListener.ts","../../src/redux.ts","../../src/rematch.ts","../../src/utils/deprecate.ts","../../src/utils/mergeConfig.ts","../../src/index.ts"],"sourcesContent":["import { Validation } from '../typings'\n\n/**\n * validate\n *\n * takes an array of arrays of validations and\n * throws if an error occurs\n */\nconst validate = (validations: Validation[]): void => {\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tfor (const validation of validations) {\n\t\t\tconst condition = validation[0]\n\t\t\tconst errorMessage = validation[1]\n\t\t\tif (condition) {\n\t\t\t\tthrow new Error(errorMessage)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default validate\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import * as R from './typings'\nimport validate from './utils/validate'\n\n/**\n * PluginFactory\n *\n * makes Plugin objects extend and inherit from a root PluginFactory\n */\nexport default (config: R.Config) => ({\n\tconfig,\n\t/**\n\t * validate\n\t *\n\t * bind validate to the store for easy access\n\t */\n\tvalidate,\n\n\t/**\n\t * create plugin\n\t *\n\t * binds plugin properties and functions to an instance of PluginFactorys\n\t * @param plugin\n\t */\n\tcreate(plugin: R.Plugin): R.Plugin {\n\t\tvalidate([\n\t\t\t[\n\t\t\t\tplugin.onStoreCreated && typeof plugin.onStoreCreated !== 'function',\n\t\t\t\t'Plugin onStoreCreated must be a function',\n\t\t\t],\n\t\t\t[\n\t\t\t\tplugin.onModel && typeof plugin.onModel !== 'function',\n\t\t\t\t'Plugin onModel must be a function',\n\t\t\t],\n\t\t\t[\n\t\t\t\tplugin.middleware && typeof plugin.middleware !== 'function',\n\t\t\t\t'Plugin middleware must be a function',\n\t\t\t],\n\t\t])\n\n\t\tif (plugin.onInit) {\n\t\t\tplugin.onInit.call(this)\n\t\t}\n\n\t\tconst result: R.Plugin | any = {}\n\n\t\tif (plugin.exposed) {\n\t\t\tfor (const key of Object.keys(plugin.exposed)) {\n\t\t\t\tthis[key] =\n\t\t\t\t\ttypeof plugin.exposed[key] === 'function'\n\t\t\t\t\t\t? plugin.exposed[key].bind(this) // bind functions to plugin class\n\t\t\t\t\t\t: Object.create(plugin.exposed[key]) // add exposed to plugin class\n\t\t\t}\n\t\t}\n\t\tfor (const method of ['onModel', 'middleware', 'onStoreCreated']) {\n\t\t\tif (plugin[method]) {\n\t\t\t\tresult[method] = plugin[method].bind(this)\n\t\t\t}\n\t\t}\n\t\treturn result\n\t},\n})\n","import * as R from '../typings'\n\n/**\n * Dispatch Plugin\n *\n * generates dispatch[modelName][actionName]\n */\nconst dispatchPlugin: R.Plugin = {\n\texposed: {\n\t\t// required as a placeholder for store.dispatch\n\t\tstoreDispatch(action: R.Action, state: any) {\n\t\t\tconsole.warn('Warning: store not yet loaded')\n\t\t},\n\n\t\tstoreGetState() {\n\t\t\tconsole.warn('Warning: store not yet loaded')\n\t\t},\n\n\t\t/**\n\t\t * dispatch\n\t\t *\n\t\t * both a function (dispatch) and an object (dispatch[modelName][actionName])\n\t\t * @param action R.Action\n\t\t */\n\t\tdispatch(action: R.Action) {\n\t\t\treturn this.storeDispatch(action)\n\t\t},\n\n\t\t/**\n\t\t * createDispatcher\n\t\t *\n\t\t * genereates an action creator for a given model & reducer\n\t\t * @param modelName string\n\t\t * @param reducerName string\n\t\t */\n\t\tcreateDispatcher(modelName: string, reducerName: string) {\n\t\t\treturn async (payload?: any, meta?: any): Promise<any> => {\n\t\t\t\tconst action: R.Action = { type: `${modelName}/${reducerName}` }\n\t\t\t\tif (typeof payload !== 'undefined') {\n\t\t\t\t\taction.payload = payload\n\t\t\t\t}\n\t\t\t\tif (typeof meta !== 'undefined') {\n\t\t\t\t\taction.meta = meta\n\t\t\t\t}\n\t\t\t\treturn this.dispatch(action)\n\t\t\t}\n\t\t},\n\t},\n\n\t// access store.dispatch after store is created\n\tonStoreCreated(store: any) {\n\t\tthis.storeDispatch = store.dispatch\n\t\tthis.storeGetState = store.getState\n\t\treturn { dispatch: this.dispatch }\n\t},\n\n\t// generate action creators for all model.reducers\n\tonModel(model: R.Model) {\n\t\tthis.dispatch[model.name] = {}\n\t\tif (!model.reducers) {\n\t\t\treturn\n\t\t}\n\t\tfor (const reducerName of Object.keys(model.reducers)) {\n\t\t\tthis.validate([\n\t\t\t\t[\n\t\t\t\t\t!!reducerName.match(/\\/.+\\//),\n\t\t\t\t\t`Invalid reducer name (${model.name}/${reducerName})`,\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\ttypeof model.reducers[reducerName] !== 'function',\n\t\t\t\t\t`Invalid reducer (${model.name}/${reducerName}). Must be a function`,\n\t\t\t\t],\n\t\t\t])\n\t\t\tthis.dispatch[model.name][reducerName] = this.createDispatcher.apply(\n\t\t\t\tthis,\n\t\t\t\t[model.name, reducerName]\n\t\t\t)\n\t\t}\n\t},\n}\n\nexport default dispatchPlugin\n","/* tslint-disable member-ordering */\nimport * as R from '../typings'\n\n/**\n * Effects Plugin\n *\n * Plugin for handling async actions\n */\nconst effectsPlugin: R.Plugin = {\n\texposed: {\n\t\t// expose effects for access from dispatch plugin\n\t\teffects: {},\n\t},\n\n\t// add effects to dispatch so that dispatch[modelName][effectName] calls an effect\n\tonModel(model: R.Model): void {\n\t\tif (!model.effects) {\n\t\t\treturn\n\t\t}\n\n\t\tconst effects =\n\t\t\ttypeof model.effects === 'function'\n\t\t\t\t? model.effects(this.dispatch)\n\t\t\t\t: model.effects\n\n\t\tfor (const effectName of Object.keys(effects)) {\n\t\t\tthis.validate([\n\t\t\t\t[\n\t\t\t\t\t!!effectName.match(/\\//),\n\t\t\t\t\t`Invalid effect name (${model.name}/${effectName})`,\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\ttypeof effects[effectName] !== 'function',\n\t\t\t\t\t`Invalid effect (${model.name}/${effectName}). Must be a function`,\n\t\t\t\t],\n\t\t\t])\n\t\t\tthis.effects[`${model.name}/${effectName}`] = effects[effectName].bind(\n\t\t\t\tthis.dispatch[model.name]\n\t\t\t)\n\t\t\t// add effect to dispatch\n\t\t\t// is assuming dispatch is available already... that the dispatch plugin is in there\n\t\t\tthis.dispatch[model.name][effectName] = this.createDispatcher.apply(\n\t\t\t\tthis,\n\t\t\t\t[model.name, effectName]\n\t\t\t)\n\t\t\t// tag effects so they can be differentiated from normal actions\n\t\t\tthis.dispatch[model.name][effectName].isEffect = true\n\t\t}\n\t},\n\n\t// process async/await actions\n\tmiddleware(store) {\n\t\treturn next => async (action: R.Action) => {\n\t\t\t// async/await acts as promise middleware\n\t\t\tif (action.type in this.effects) {\n\t\t\t\tawait next(action)\n\t\t\t\treturn this.effects[action.type](\n\t\t\t\t\taction.payload,\n\t\t\t\t\tstore.getState(),\n\t\t\t\t\taction.meta\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn next(action)\n\t\t}\n\t},\n}\n\nexport default effectsPlugin\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","/**\n * isListener\n *\n * determines if an action is a listener on another model\n */\nexport default (reducer: string): boolean => reducer.indexOf('/') > -1\n","import * as Redux from 'redux'\nimport * as R from './typings'\nimport isListener from './utils/isListener'\n\nconst composeEnhancersWithDevtools = (\n\tdevtoolOptions: R.DevtoolOptions = {}\n): any => {\n\tconst { disabled, ...options } = devtoolOptions\n\t/* istanbul ignore next */\n\treturn !disabled &&\n\t\ttypeof window === 'object' &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(options)\n\t\t: Redux.compose\n}\n\nexport default function({\n\tredux,\n\tmodels,\n}: {\n\tredux: R.ConfigRedux\n\tmodels: R.Model[]\n}) {\n\tconst combineReducers = redux.combineReducers || Redux.combineReducers\n\tconst createStore: Redux.StoreCreator = redux.createStore || Redux.createStore\n\tconst initialState: any =\n\t\ttypeof redux.initialState !== 'undefined' ? redux.initialState : {}\n\n\tthis.reducers = redux.reducers\n\n\t// combine models to generate reducers\n\tthis.mergeReducers = (nextReducers: R.ModelReducers = {}) => {\n\t\t// merge new reducers with existing reducers\n\t\tthis.reducers = { ...this.reducers, ...nextReducers }\n\t\tif (!Object.keys(this.reducers).length) {\n\t\t\t// no reducers, just return state\n\t\t\treturn (state: any) => state\n\t\t}\n\t\treturn combineReducers(this.reducers)\n\t}\n\n\tthis.createModelReducer = (model: R.Model) => {\n\t\tconst modelBaseReducer = model.baseReducer\n\t\tconst modelReducers = {}\n\t\tfor (const modelReducer of Object.keys(model.reducers || {})) {\n\t\t\tconst action = isListener(modelReducer)\n\t\t\t\t? modelReducer\n\t\t\t\t: `${model.name}/${modelReducer}`\n\t\t\tmodelReducers[action] = model.reducers[modelReducer]\n\t\t}\n\t\tconst combinedReducer = (state: any = model.state, action: R.Action) => {\n\t\t\t// handle effects\n\t\t\tif (typeof modelReducers[action.type] === 'function') {\n\t\t\t\treturn modelReducers[action.type](state, action.payload, action.meta)\n\t\t\t}\n\t\t\treturn state\n\t\t}\n\n\t\tthis.reducers[model.name] = !modelBaseReducer\n\t\t\t? combinedReducer\n\t\t\t: (state: any, action: R.Action) =>\n\t\t\t\t\tcombinedReducer(modelBaseReducer(state, action), action)\n\t}\n\t// initialize model reducers\n\tfor (const model of models) {\n\t\tthis.createModelReducer(model)\n\t}\n\n\tthis.createRootReducer = (\n\t\trootReducers: R.RootReducers = {}\n\t): Redux.Reducer<any, R.Action> => {\n\t\tconst mergedReducers: Redux.Reducer<any> = this.mergeReducers()\n\t\tif (Object.keys(rootReducers).length) {\n\t\t\treturn (state, action) => {\n\t\t\t\tconst rootReducerAction = rootReducers[action.type]\n\t\t\t\tif (rootReducers[action.type]) {\n\t\t\t\t\treturn mergedReducers(rootReducerAction(state, action), action)\n\t\t\t\t}\n\t\t\t\treturn mergedReducers(state, action)\n\t\t\t}\n\t\t}\n\t\treturn mergedReducers\n\t}\n\n\tconst rootReducer = this.createRootReducer(redux.rootReducers)\n\n\tconst middlewares = Redux.applyMiddleware(...redux.middlewares)\n\tconst enhancers = composeEnhancersWithDevtools(redux.devtoolOptions)(\n\t\t...redux.enhancers,\n\t\tmiddlewares\n\t)\n\n\tthis.store = createStore(rootReducer, initialState, enhancers)\n\n\treturn this\n}\n","import pluginFactory from './pluginFactory'\nimport dispatchPlugin from './plugins/dispatch'\nimport effectsPlugin from './plugins/effects'\nimport createRedux from './redux'\nimport * as R from './typings'\nimport validate from './utils/validate'\n\nconst corePlugins: R.Plugin[] = [dispatchPlugin, effectsPlugin]\n\n/**\n * Rematch class\n *\n * an instance of Rematch generated by \"init\"\n */\nexport default class Rematch {\n\tprotected config: R.Config\n\tprotected models: R.Model[]\n\tprivate plugins: R.Plugin[] = []\n\tprivate pluginFactory: R.PluginFactory\n\n\tconstructor(config: R.Config) {\n\t\tthis.config = config\n\t\tthis.pluginFactory = pluginFactory(config)\n\t\tfor (const plugin of corePlugins.concat(this.config.plugins)) {\n\t\t\tthis.plugins.push(this.pluginFactory.create(plugin))\n\t\t}\n\t\t// preStore: middleware, model hooks\n\t\tthis.forEachPlugin('middleware', middleware => {\n\t\t\tthis.config.redux.middlewares.push(middleware)\n\t\t})\n\t}\n\tpublic forEachPlugin(method: string, fn: (content: any) => void) {\n\t\tfor (const plugin of this.plugins) {\n\t\t\tif (plugin[method]) {\n\t\t\t\tfn(plugin[method])\n\t\t\t}\n\t\t}\n\t}\n\tpublic getModels(models: R.Models): R.Model[] {\n\t\treturn Object.keys(models).map((name: string) => ({\n\t\t\tname,\n\t\t\t...models[name],\n\t\t\treducers: models[name].reducers || {},\n\t\t}))\n\t}\n\tpublic addModel(model: R.Model) {\n\t\tvalidate([\n\t\t\t[!model, 'model config is required'],\n\t\t\t[typeof model.name !== 'string', 'model \"name\" [string] is required'],\n\t\t\t[\n\t\t\t\tmodel.state === undefined && model.baseReducer === undefined,\n\t\t\t\t'model \"state\" is required',\n\t\t\t],\n\t\t\t[\n\t\t\t\tmodel.baseReducer !== undefined &&\n\t\t\t\t\ttypeof model.baseReducer !== 'function',\n\t\t\t\t'model \"baseReducer\" must be a function',\n\t\t\t],\n\t\t])\n\t\t// run plugin model subscriptions\n\t\tthis.forEachPlugin('onModel', onModel => onModel(model))\n\t}\n\tpublic init() {\n\t\t// collect all models\n\t\tthis.models = this.getModels(this.config.models)\n\t\tfor (const model of this.models) {\n\t\t\tthis.addModel(model)\n\t\t}\n\t\t// create a redux store with initialState\n\t\t// merge in additional extra reducers\n\t\tconst redux = createRedux.call(this, {\n\t\t\tredux: this.config.redux,\n\t\t\tmodels: this.models,\n\t\t})\n\n\t\tconst rematchStore = {\n\t\t\tname: this.config.name,\n\t\t\t...redux.store,\n\t\t\t// dynamic loading of models with `replaceReducer`\n\t\t\tmodel: (model: R.Model) => {\n\t\t\t\tthis.addModel(model)\n\t\t\t\tredux.mergeReducers(redux.createModelReducer(model))\n\t\t\t\tredux.store.replaceReducer(\n\t\t\t\t\tredux.createRootReducer(this.config.redux.rootReducers)\n\t\t\t\t)\n\t\t\t\tredux.store.dispatch({ type: '@@redux/REPLACE ' })\n\t\t\t},\n\t\t}\n\n\t\tthis.forEachPlugin('onStoreCreated', onStoreCreated => {\n\t\t\tconst returned = onStoreCreated(rematchStore)\n\t\t\t// if onStoreCreated returns an object value\n\t\t\t// merge its returned value onto the store\n\t\t\tif (returned) {\n\t\t\t\tObject.keys(returned || {}).forEach(key => {\n\t\t\t\t\trematchStore[key] = returned[key]\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\treturn rematchStore\n\t}\n}\n","/**\n * deprecate\n *\n * handles deprecation warnings in development\n */\nexport default (warning: string): void => {\n\tconsole.warn(warning)\n}\n","import * as R from '../typings'\nimport validate from './validate'\n\nconst merge = (original: any, next: any): any => {\n\treturn next ? { ...next, ...(original || {}) } : original || {}\n}\n\nconst isObject = (obj: object): boolean =>\n\tArray.isArray(obj) || typeof obj !== 'object'\n\n/**\n * mergeConfig\n *\n * merge init configs together\n */\nexport default (initConfig: R.InitConfig & { name: string }): R.Config => {\n\tconst config: R.Config = {\n\t\tname: initConfig.name,\n\t\tmodels: {},\n\t\tplugins: [],\n\t\t...initConfig,\n\t\tredux: {\n\t\t\treducers: {},\n\t\t\trootReducers: {},\n\t\t\tenhancers: [],\n\t\t\tmiddlewares: [],\n\t\t\t...initConfig.redux,\n\t\t\tdevtoolOptions: {\n\t\t\t\tname: initConfig.name,\n\t\t\t\t...(initConfig.redux && initConfig.redux.devtoolOptions\n\t\t\t\t\t? initConfig.redux.devtoolOptions\n\t\t\t\t\t: {}),\n\t\t\t},\n\t\t},\n\t}\n\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tvalidate([\n\t\t\t[!Array.isArray(config.plugins), 'init config.plugins must be an array'],\n\t\t\t[isObject(config.models), 'init config.models must be an object'],\n\t\t\t[\n\t\t\t\tisObject(config.redux.reducers),\n\t\t\t\t'init config.redux.reducers must be an object',\n\t\t\t],\n\t\t\t[\n\t\t\t\t!Array.isArray(config.redux.middlewares),\n\t\t\t\t'init config.redux.middlewares must be an array',\n\t\t\t],\n\t\t\t[\n\t\t\t\t!Array.isArray(config.redux.enhancers),\n\t\t\t\t'init config.redux.enhancers must be an array of functions',\n\t\t\t],\n\t\t\t[\n\t\t\t\tconfig.redux.combineReducers &&\n\t\t\t\t\ttypeof config.redux.combineReducers !== 'function',\n\t\t\t\t'init config.redux.combineReducers must be a function',\n\t\t\t],\n\t\t\t[\n\t\t\t\tconfig.redux.createStore &&\n\t\t\t\t\ttypeof config.redux.createStore !== 'function',\n\t\t\t\t'init config.redux.createStore must be a function',\n\t\t\t],\n\t\t])\n\t}\n\n\t// defaults\n\tfor (const plugin of config.plugins) {\n\t\tif (plugin.config) {\n\t\t\t// models\n\t\t\tconst models: R.Models = merge(config.models, plugin.config.models)\n\t\t\tconfig.models = models\n\n\t\t\t// plugins\n\t\t\tconfig.plugins = [...config.plugins, ...(plugin.config.plugins || [])]\n\n\t\t\t// redux\n\t\t\tif (plugin.config.redux) {\n\t\t\t\tconfig.redux.initialState = merge(\n\t\t\t\t\tconfig.redux.initialState,\n\t\t\t\t\tplugin.config.redux.initialState\n\t\t\t\t)\n\t\t\t\tconfig.redux.reducers = merge(\n\t\t\t\t\tconfig.redux.reducers,\n\t\t\t\t\tplugin.config.redux.reducers\n\t\t\t\t)\n\t\t\t\tconfig.redux.rootReducers = merge(\n\t\t\t\t\tconfig.redux.rootReducers,\n\t\t\t\t\tplugin.config.redux.reducers\n\t\t\t\t)\n\t\t\t\tconfig.redux.enhancers = [\n\t\t\t\t\t...config.redux.enhancers,\n\t\t\t\t\t...(plugin.config.redux.enhancers || []),\n\t\t\t\t]\n\t\t\t\tconfig.redux.middlewares = [\n\t\t\t\t\t...config.redux.middlewares,\n\t\t\t\t\t...(plugin.config.redux.middlewares || []),\n\t\t\t\t]\n\t\t\t\tconfig.redux.combineReducers =\n\t\t\t\t\tconfig.redux.combineReducers || plugin.config.redux.combineReducers\n\t\t\t\tconfig.redux.createStore =\n\t\t\t\t\tconfig.redux.createStore || plugin.config.redux.createStore\n\t\t\t}\n\t\t}\n\t}\n\treturn config\n}\n","import Rematch from './rematch'\nimport * as R from './typings'\nimport deprecate from './utils/deprecate'\nimport mergeConfig from './utils/mergeConfig'\n\nexport const getState = () => {\n\tdeprecate(`global getState has been removed in @rematch/core 1.0.0-beta.3.\n\tSee https://github.com/rematch/rematch/blob/master/CHANGELOG.md#100-beta3---2018-06-23 for details.\n\tFor a quick fix, import and use store.getState.`)\n}\n\nexport const dispatch = () => {\n\tdeprecate(`global dispatch has been removed in @rematch/core 1.0.0-beta.3.\n\tSee https://github.com/rematch/rematch/blob/master/CHANGELOG.md#100-beta3---2018-06-23 for details.\n\tFor a quick fix, import and use store.dispatch.`)\n}\n\n/**\n * global createModel\n *\n * creates a model for the given object\n * this is for autocomplete purposes only\n * returns the same object that was received as argument\n */\nexport function createModel<S = any, M extends R.ModelConfig<S> = any>(\n\tmodel: M\n) {\n\treturn model\n}\n\n// incrementer used to provide a store name if none exists\nlet count = 0\n\n/**\n * init\n *\n * generates a Rematch store\n * with a set configuration\n * @param config\n */\nexport const init = (initConfig: R.InitConfig = {}): R.RematchStore => {\n\tconst name = initConfig.name || count.toString()\n\tcount += 1\n\tconst config: R.Config = mergeConfig({ ...initConfig, name })\n\treturn new Rematch(config).init()\n}\n\nexport default {\n\tinit,\n}\n"],"names":["root","validate","validations","config","create","plugin","onStoreCreated","onModel","middleware","onInit","call","this","result","exposed","_a","Object","keys","_i","key","bind","_c","_b","method","dispatchPlugin","storeDispatch","action","state","console","warn","storeGetState","dispatch","createDispatcher","modelName","reducerName","payload","meta","Promise","type","store","getState","model","name","reducers","match","apply","effectsPlugin","effects","effectName","isEffect","next","symbolObservablePonyfill","Symbol","observable","ponyfill","self","window","global","module","Function","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","arguments","Error","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","subscribe","listener","isSubscribed","push","index","indexOf","splice","listeners","i","length","replaceReducer","nextReducer","$$observable","_ref","outerSubscribe","observer","TypeError","observeState","unsubscribe","getUndefinedStateErrorMessage","actionType","String","assertReducerShape","forEach","combineReducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","e","hasChanged","nextState","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","compose","_len","funcs","Array","arg","reduce","a","b","applyMiddleware","middlewares","_dispatch","middlewareAPI","chain","map","composeEnhancersWithDevtools","devtoolOptions","disabled","options","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Redux.compose","redux","models","Redux.combineReducers","Redux.createStore","initialState","mergeReducers","nextReducers","_this","createModelReducer","modelBaseReducer","baseReducer","modelReducers","modelReducer","isListener","combinedReducer","models_1","createRootReducer","rootReducers","mergedReducers","rootReducerAction","rootReducer","Redux.applyMiddleware","Redux","enhancers","corePlugins","pluginFactory","concat","plugins","forEachPlugin","Rematch","fn","getModels","addModel","createRedux","rematchStore","returned","warning","merge","original","initConfig","deprecate","createModel","count","init","mergeConfig"],"mappings":"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"}