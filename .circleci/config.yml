# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  test:
      # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/node:16.4
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "pnpm-lock.yaml"}}
      - run:
          name: install pnpm
          command: |
            curl -f https://get.pnpm.io/v6.16.js | sudo node - add --global pnpm@6
            pnpm config set store-dir ~/.pnpm-store
      - run:
          name: install packages
          command: pnpm install --ignore-scripts
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "pnpm-lock.yaml"}}
          paths:
            - ~/.pnpm-store
      - run:
          name: Run Tests
          command: pnpm test
      - run:
          name: Build Packages
          command: pnpm build:pkgs
  audit:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/node:16.4
    # run pnpm audit --fix nightly and opens a PR if there are vulns
    steps:
      - add_ssh_keys:
          fingerprints:
            - "aa:bd:a8:9a:ce:f8:98:43:ea:4e:cf:97:5e:39:29:f1"
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "pnpm-lock.yaml"}}
      - run:
          name: install pnpm
          command: |
            curl -f https://get.pnpm.io/v6.16.js | sudo node - add --global pnpm@6
            pnpm config set store-dir ~/.pnpm-store
      - run:
          name: install packages
          command: pnpm install --ignore-scripts
      - run:
          name: audit dependencies with --fix
          command: pnpm audit --fix
      - run:
          name: install overrides
          command: pnpm install --frozen-lockfile=false --ignore-scripts
      # commit package.json and pnpm-lock if there's a diff
      - run:
          name: commit overrides
          command: git config user.name "CobyPear" &&
           git config user.email "coby.sher@pantheon.io" &&
           git switch -c nightly-audit-$(date +"%D") &&
           git add package.json pnpm-lock.yaml &&
           git commit -m "Nightly audit run at $(date +"%T")" &&
           git push origin nightly-audit-$(date +"%D")
      # create a PR
      - run:
          name: open PR
          command: >
                      curl -X POST -H "Authorization: token $CIRCLECI_AUDIT_PR_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/pantheon-systems/decoupled-kit-js/pulls -d '{"head":"nightly-audit-'"$(date +"%D")"'","base":"canary", "title": "Nightly Audit on '"$(date +"%D")"'", "body": "Beep Boop ðŸ¤– - Please merge me to dispose of npm gremlins!"}'
      - run: # should only fail if there are vulns to be addressed manually
          name: audit dependendies
          command: pnpm audit --json > .pnpm_audit.json
      - store_artifacts:
          path: .pnpm_audit.json


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  orb-free-workflow:
    when:
      not: 
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - test
  nightly-audit:
    when:
      and:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - audit