name: Headless Regression Testing

permissions:
  contents: write

# When a release occurs, update the snapshots
on:
  release:
    types: [published]

jobs:
  cli-regression-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # define package to repository map
        include:
          # next-drupal-starter-search
          - local_path: 'starters/next-drupal-search'
            label: 'next-drupal-search'
            generator_cmd: 'next-drupal next-drupal-umami-addon next-drupal-search-api-addon --appName @pantheon-systems/next-drupal-search-starter --cmsEndpoint ${{ vars.BACKEND_URL }} --tailwindcss --force --silent --noInstall'
            test_cmd: update-snapshots:next-drupal-search
            start_cmd: HOSTNAME=0.0.0.0 npm run start
            # gatsby-wordpress-starter example matrix entry
          - local_path: 'starters/gatsby-wordpress-starter-generated'
            label: 'gatsby-wordpress-starter'
            generator_cmd: 'gatsby-wp --appName @pantheon-systems/gatsby-wordpress-starter --cmsEndpoint ${{ vars.WPGRAPHQL_URL_ACF }} --tailwindcss --force --silent --noInstall'
            test_cmd: update-snapshots:gatsby-wp-acf
            start_cmd: npm run serve
            # next-wordpress-starter example matrix entry
          - local_path: 'starters/next-wordpress-starter-generated'
            label: 'next-wordpress-starter'
            generator_cmd: 'next-wp --appName @pantheon-systems/next-wordpress-starter --cmsEndpoint ${{ vars.WPGRAPHQL_URL_ACF }} --tailwindcss --force --silent --noInstall'
            test_cmd: update-snapshots:next-wp-acf
            start_cmd: HOSTNAME=0.0.0.0 npm run start
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup
        id: setup
        uses: ./.github/actions/setup-playwright
        with:
          local_path: ${{ matrix.local_path }}

      # run the command to generate the starter in the matrix.local_path directory
      - name: Generate starter
        run: pnpm create-pantheon-decoupled-kit ${{ matrix.generator_cmd }} --outDir ~/${{ matrix.local_path }}

      - name: Build and run the starter
        run: |
          REPO_PATH=$(pwd)
          cd ~/${{ matrix.local_path }}
          npm install --legacy-peer-deps
          npm run build
          ${{ matrix.start_cmd }} &
          cd $REPO_PATH

      - name: Cache generated starter
        if: always()
        uses: actions/cache/save@v3
        id: cache-starter-save
        with:
          path: ~/${{ matrix.local_path }}
          key: ${{ steps.cache-starter-restore.outputs.cache-primary-key }}

      - name: Run tests
        run: pnpm -F ci-tests ${{ matrix.test_cmd }}

      # we're commiting the changes outside of the create-pull-request action
      # so that we can batch the commits on the same PR
      # otherwise the action overwrites the commits and we end up with a PR with a single commit
      - name: Commit changes
        if: always()
        run: |
          git config user.name 'pantheon-decoupled-service-user'
          git config user.email 'pantheon-service-user@pantheon.io'
          git add ./ci-tests
          git commit -m "Update ${{ matrix.label }} snapshots"

      - name: Create PR for snapshots
        if: always()
        uses: technote-space/create-pr-action
        with:
          COMMIT_MESSAGE: Update ${{ matrix.label }} snapshots
          COMMIT_NAME: pantheon-decoupled-service-user
          COMMIT_EMAIL: decoupled-service-user@pantheon.io
          PR_BRANCH_NAME: 'update-snapshots'
          PR_TITLE: '[CI] Update snapshots'
